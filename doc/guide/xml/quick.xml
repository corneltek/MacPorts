<?xml version="1.0" encoding="iso-8859-1" ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
		"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<chapter id="quickstart">
	<chapterinfo>
		<keywordset>
			<keyword>
				portfile
			</keyword>
			<keyword>
				introduction
			</keyword>
			<keyword>
				maintainer
			</keyword>
		</keywordset>
	</chapterinfo>
	<title>Quick start</title> 
	<sect1>
		<title>Introduction to a Portfile</title> 
		<para>
			This document will provide a short guide to the basics of the darwinports Portfile. A Portfile is actually a TCL script run by the port system, despite this the Portfile Syntax is very straightforward. To begin with we are going to look at a simple example Portfile and then explain the syntax that is used. 
		</para>
	</sect1>
	<sect1>
		<title>Basic Portfile</title> 
		<para>
			This is the first example, Expat. 
		</para>
		<sect2>
			<title> Example Portfile: expat</title> 
			<example>
				<title>Expat Portfile</title> 
				<programlisting><![CDATA[
########################### libxslt Portfile ################################## 
# $Id: quick.xml,v 1.10 2003/05/16 10:43:20 michaelm Exp $

PortSystem      1.0

name            libxslt
version         1.0.21
homepage        http://www.xmlsoft.org/
description     gnome xslt library and xsltproc
categories      textproc
platforms       darwin
maintainers     mike+libxslt@gene-hacker.net
master_sites    ftp://xmlsoft.org/ \
                  ftp://ftp.gnome.org/pub/GNOME/sources/libxslt/1.0/

checksums       md5 9cc0491e2584788748eb7069ea1d5277
depends_lib     lib:libxml2:libxml2
patchfiles      patch-aclocal.m4 patch-configure patch-ltmain.sh

long_description Gnome library for applying XSL stylesheet transformations to \
xml files, comes with several useful binaries. 

########################################################################### 
]]>
				</programlisting>
			</example>
			<para>
				The Portfile uses key value pairs to define how it is executed. Below is a list of some of the simple terms. Line up each of the values with tabs in a "table" type of format. 
			</para>
			<variablelist>
				<title> Portfile keys 1</title> 
				<varlistentry>
					<term>
						PortSystem 
					</term>
					<listitem>
						<para>
							The version of darwinports that the port depends on. If a later release introduces a function that isn't in version 1.0, you can specify the version of darwinports that the Port requires. The PortSystem value is 1.0 (at the moment there is no &quot;higher&quot; version of darwinports). 
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						categories 
					</term>
					<listitem>
						<para>
							Each port must have at least one category and may have more than one. The primary category should be listed first. (The primary category is also the directory under which the port is stored).
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term> maintainers </term>
					<listitem>
						<para> The email address of the maintainer (or maintainers) of the port.  </para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term> name </term>
					<listitem>
						<para> name is the name of the port, usually also the name of the distribution file (distfile). In the example port the name is libxslt.  </para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term> version </term>
					<listitem>
						<para> version is the version of the distribution being ported. In the example port the version is 1.0.21.  </para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term> distfile </term>
					<listitem>
						<para> The name and version are combined with the extract_sufx (by default .tar.gz) this is used by default as the &quot;distfile&quot; name and used by darwinports to fetch the distribution file. If the name of the file on the server is not the same as the name-version.tar.gz you can override the default behavior by defining the distfile name.  </para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term> master_sites </term>
					<listitem>
						<para> A list of URLs from which to fetch the distfile. The URLs must be separated by spaces and on one line (or with new lines escaped with '\').  </para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term> homepage </term>
					<listitem>
						<para> The URL for the software's homepage.</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term> checksums </term>
					<listitem>
						<para> The md5 checksum of the distfiles. If you have more than one file being fetched you should specify the checksum for each in the form: </para> 
                        <simplelist type="vert">
							<member> foo md5 ....  </member>
							<member> bar md5 ....  </member>
						</simplelist>
					</listitem>
				</varlistentry>
					<varlistentry>
						<term> depends_lib </term>
						<listitem>
							<para> This is probably the most common kind of dependency. The port depends on libraries or binaries to be installed during configuration and to run. depends_lib takes three terms, separated by colons. The first term is 'bin' or 'lib'. This defines the search path the port system will look for the dependency in. If bin is specified $PATH is searched for the dependency, if lib is specified, the library path is searched instead. The second term is a regular expression that is used to search the path defined in the first term for the dependency. Usually the name of the library is a good enough. The port system will append .dylib to the regex so only dynamic libraries will be matched. The third term is the name of the port that can provide the dependency. If the dependency is not satisfied by something already installed on the system the port listed here will installed before the port.  </para>
						</listitem>
					</varlistentry>
				<varlistentry>
					<term> patchfiles </term>
					<listitem>
						<para> A list of patches to be applied to the port (needed for the software to compile/run or install correctly). Patches are usually provided in a files directory in the same directory as the Portfile. </para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term> long_description </term>
					<listitem>
						<para> Longer description of the software and the porting/packaging changes needed, if any. Long lines should be split with escaped newlines.</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term> prefix </term>
					<listitem>
						<para> This variable is the filesystem location relative to which files are installed by the ports system. The prefix is '/opt/local' by default but Portfile authors should always refer to it by the variable name ${prefix}.  </para>
					</listitem>
				</varlistentry>
			</variablelist>
			</sect2>
			<sect2>
				<title> Example Portfile: neon</title> 
				<para>
					A second example Portfile will give you an idea of how to deal with slightly more complicated ports. 
				</para>
				<example>
					<title>Neon Portfile</title>
					<programlisting><![CDATA[
###########################neon Portfile#################################### 
# $Id: quick.xml,v 1.10 2003/05/16 10:43:20 michaelm Exp $

PortSystem 1.0 
name            neon 
version         0.23.4 

categories      www 
maintainers     rooneg@electricjellyfish.net 
description     An HTTP and WebDAV client library with a C interface 

master_sites    http://www.webdav.org/neon/
checksums       md5 56b380a7352c68d425b1d3d3d610f994 

depends_lib     lib:libexpat.0.4:expat 
configure.env   LDFLAGS='-L"${prefix}/lib"' CPPFLAGS='-I"${prefix}/include"'

configure.args  --with-ssl \ 
                  --with-force-ssl \ 
                  --enable-xml \ 
                  --enable-shared \ 
                  --with-expat	

############################################################################
]]>					</programlisting>
				</example>
				<para>
					Many of the components of this port are the same as those in the first example. This port is more complicated as it requires something else to be installed, needs certain environmental variables to be set prior to configuring and the configure script is being passed arguments. 
				</para>
				<variablelist>
					<title> Portfile keys 2</title> 
					<varlistentry>
						<term> configure.env </term>
						<listitem>
							<para> You may have to set environment variables for the configure script to set library paths, compiler settings or some other configuration variable.  </para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term> configure.args </term>
						<listitem>
							<para> If you need to specify additional configure arguments you should place them on a single line. As with other settings, newlines may be escaped to break up long lines. Note the continuing lines are indented two spaces.  </para>
							<para> By default the configure script is passed --prefix=${prefix} where ${prefix} is replaced with the prefix darwinports is configured to install into.  </para>
							<tip>
								<para> In general you should quote variables like }prefix} in case the path has a space in it.  </para>
							</tip>
						</listitem>
					</varlistentry>
				</variablelist>
				</sect2>
				</sect1>
				<sect1>
					<title>Common mistakes</title> 
					<sect2>
						<title>Don't quote or wrap items in '{}'.</title> 
						<para> Frequently people submit ports with the description or configure arguments quoted, or wrapped in curly brackets. In general this is not correct.  </para> </sect2>
				</sect1>
				<sect1>
					<title>How to test</title> 
					<orderedlist>
						<listitem>
							<para> Enable debugging and verbose messages from the darwinports engine. Edit /etc/ports/ports.conf and set:<userinput>debug yes </userinput>and <userinput>verbose yes </userinput>.  </para>
						</listitem>
						<listitem>
							<para> Enable a seccond local source (Portfile) repository for your uncommitted ports.  Edit /etc/ports/sources.conf and add:<userinput>file:///User/foo/dports-dev</userinput> (or wherever your local dport tree is).  </para>
						</listitem>
						<listitem>
							<para> Create an index file from the local source repository root. This will also perfom a simple syntax check portfiles contained.  </para>
							<para> <userinput> portindex </userinput> </para>
						</listitem>
						<listitem>
							<para> Install port, first run port install without root privileges, this is a good way to check that the port installs into the destroot and not directly into the main prefix directory, or elsewhere in the system.  This should succeed up to the point darwinports attempts to copy the port from the destroot into the darwinports prefix. Once you are confident the port is correctly destrooted install the port into the darwinports prefix using root privileges. </para>
							<para> <userinput> sudo port install foo </userinput> </para>
						</listitem>
						<listitem>
							<para> Uninstall the port </para>
							<para> <userinput> sudo port uninstall foo </userinput> </para>
						</listitem>
						<listitem>
							<para> Make sure the port builds, installs and uninstalls on a &quot;clean machine&quot;. A clean machine should have a clean install of the OS, to avoid missing dependencies.  Using a chrooted version of the OS to install and test ports makes this much easier, see the chroot <ulink url="http://darwinports.gene-hacker.net/docs/howto/chroot-howto.html">HOWTO</ulink> for more details on how to set up the chroot. </para>
						</listitem>
						<listitem>
							<para> Ensure the Port installs into the destroot and does not install anything onto the system directly, most software that uses autoconf should behave correctly automatically as darwinports sets DESTDIR by default. If files are directly installed to the system they will not be registered and packaging will fail.	</para>
						</listitem>
						<listitem>
							<para> Clean the working source directory for a port. This will allow a clean reinstall if an error was encountered earlier in the build process.  </para>
							<para> <userinput> port clean foo </userinput> </para>
						</listitem>
					</orderedlist>
				</sect1>
				<sect1>
					<title>Where can I ask for advice?</title> 
					<para>Either on the <email>darwinports@opendarwin.org</email> mailing list, or on the #opendarwin channel on irc.freenode.net. Don't be afraid to ask questions! You should also look at the later sections of the <link linkend="details">guide</link>, the Portfile <ulink url="http:http://www.opendarwin.org/projects/darwinports/en/portfileHOWTO.php">HOWTO</ulink> and the portfile(7) and portstyle(7) manpages for more information. </para>
				</sect1>
				<sect1>
					<title>How do I submit my Ports</title>
					<para>See the <link linkend="submission">submission chapter</link> for all the infromation on how to submit a port properly.
					</para>
				</sect1>
</chapter>
