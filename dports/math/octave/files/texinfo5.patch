This patch was constructed using the following changesets from the
Octave Mercurial repository (http://www.octave.org/hg/octave):

 16094:8899c785cc99 (http://www.octave.org/hg/octave/rev/8899c785cc99)
 16096:9720ecf8d257 (http://www.octave.org/hg/octave/rev/9720ecf8d257)
 16489:36dba9be680b (http://www.octave.org/hg/octave/rev/36dba9be680b)
 16490:f50fe9c50f55 (http://www.octave.org/hg/octave/rev/f50fe9c50f55)
 16806:ab0454713ded (http://www.octave.org/hg/octave/rev/ab0454713ded)
 17242:3f4091dddc13 (http://www.octave.org/hg/octave/rev/3f4091dddc13)
 17591:7c479b7d3aab (http://www.octave.org/hg/octave/rev/7c479b7d3aab)

Index: doc/interpreter/octave.texi
===================================================================
--- doc/interpreter/octave.texi.orig
+++ doc/interpreter/octave.texi
@@ -129,7 +129,8 @@ modified versions.
 @sp 2
 @multitable @columnfractions 0.4 0.025 0.65
 @item
-@flushright @image{octave_logo,2.1in} @end flushright
+@flushright @image{octave_logo,2.1in}
+@end flushright
 @tab
 @c this is a spacer column
 @tab
@@ -535,6 +536,9 @@ High-Level Plotting
 * Plot Annotations::            
 * Multiple Plots on One Page::  
 * Multiple Plot Windows::       
+* Use of @code{axis}@comma{} @code{line}@comma{} and @code{patch} Functions
+* Manipulation of Plot Windows::
+* Use of the @code{interpreter} Property::
 * Printing and Saving Plots::              
 * Interacting with Plots::      
 * Test Plotting Functions::     
Index: doc/interpreter/plot.txi
===================================================================
--- doc/interpreter/plot.txi.orig
+++ doc/interpreter/plot.txi
@@ -62,6 +62,9 @@ and @ref{Advanced Plotting}.
 * Plot Annotations::            
 * Multiple Plots on One Page::  
 * Multiple Plot Windows::       
+* Use of @code{axis}@comma{} @code{line}@comma{} and @code{patch} Functions::
+* Manipulation of Plot Windows::
+* Use of the @code{interpreter} Property::
 * Printing and Saving Plots::              
 * Interacting with Plots::      
 * Test Plotting Functions::     
@@ -511,8 +514,9 @@ creates two figures, with the first disp
 the second a cosine wave.  Figure numbers must be positive integers.
 
 @DOCSTRING(figure)
-@subsection Use of @code{axis},  @code{line}, and @code{patch} functions
-@cindex use of @code{axis},  @code{line}, and @code{patch} functions
+
+@node Use of @code{axis}@comma{} @code{line}@comma{} and @code{patch} Functions
+@subsection Use of @code{axis}@comma{} @code{line}@comma{} and @code{patch} Functions
 
 You can create axes, line, and patch objects directly using the
 @code{axes}, @code{line}, and @code{patch} functions.  These objects
@@ -526,8 +530,8 @@ become children of the current axes obje
 
 @DOCSTRING(surface)
 
-@subsection Manipulation of plot windows
-@cindex manipulation of plot windows
+@node Manipulation of Plot Windows
+@subsection Manipulation of Plot Windows
 
 By default, Octave refreshes the plot window when a prompt is printed,
 or when waiting for input.  The
@@ -585,8 +589,8 @@ figure window, call the @code{close} fun
 
 @DOCSTRING(closereq)
 
+@node Use of the @code{interpreter} Property
 @subsection Use of the @code{interpreter} Property
-@cindex use of the @code{interpreter} property
 
 All text objects, including titles, labels, legends, and text, include
 the property 'interpreter', this property determines the manner in which
@@ -2545,15 +2549,15 @@ Marker styles are specified by the follo
 A character indicating a plot marker to be place at each data point, or
 @code{"none"}, meaning no markers should be displayed.
 
-@itemx markeredgecolor
+@item markeredgecolor
 The color of the edge around the marker, or @code{"auto"}, meaning that
 the edge color is the same as the face color.  @xref{Colors}.
 
-@itemx markerfacecolor
+@item markerfacecolor
 The color of the marker, or @code{"none"} to indicate that the marker
 should not be filled.  @xref{Colors}.
 
-@itemx markersize
+@item markersize
 A number specifying the size of the marker.  The default is 1.  A value
 of 2 is twice as large as the default, etc.
 @end table
Index: doc/interpreter/tips.txi
===================================================================
--- doc/interpreter/tips.txi.orig
+++ doc/interpreter/tips.txi
@@ -296,20 +296,20 @@ starting double-quote is not part of the
 When choosing variable names try to adhere to the following guidelines.
 
 @table @asis
-@item 
-vectors : x,y,z,t,w
+@item vectors :
+x,y,z,t,w
 
-@item
-matrices : A,B,M
+@item matrices :
+A,B,M
 
-@item
-strings : @nospell{str},s
+@item strings :
+@nospell{str},s
 
-@item
-filenames : @nospell{fname}
+@item filenames :
+@nospell{fname}
 
-@item
-cells,@nospell{cellstrs} : c,@nospell{cstr}
+@item cells,@nospell{cellstrs} :
+c,@nospell{cstr}
 @end table
 
 @item
Index: scripts/io/strread.m
===================================================================
--- scripts/io/strread.m.orig
+++ scripts/io/strread.m
@@ -39,7 +39,7 @@
 ## @item %s
 ## The word is parsed as a string.
 ##
-## @itemx %f
+## @item  %f
 ## @itemx %n
 ## The word is parsed as a number and converted to double.
 ##
Index: scripts/plot/legend.m
===================================================================
--- scripts/plot/legend.m.orig
+++ scripts/plot/legend.m
@@ -86,7 +86,7 @@
 ## @item "hide"
 ##   Hide legend on the plot
 ##
-## @itemx "toggle"
+## @item "toggle"
 ##   Toggles between "hide" and "show"
 ##
 ## @item "boxon"
@@ -101,7 +101,7 @@
 ## @item "right"
 ##   Place text to the right of the keys
 ##
-## @itemx "off"
+## @item  "off"
 ##   Delete the legend object
 ## @end table
 ## @end deftypefn
Index: scripts/plot/print.m
===================================================================
--- scripts/plot/print.m.orig
+++ scripts/plot/print.m
@@ -184,11 +184,10 @@
 ## is sent to a file the size is determined by the plot box defined by
 ## the figure's "paperposition" property.
 ##
-## @itemx -append
-##   Appends the PS, or PDF output to a pre-existing file of the
-## same type.
+## @item -append
+##   Appends the PS, or PDF output to a pre-existing file of the same type.
 ##
-## @itemx -r@var{NUM}
+## @item -r@var{NUM}
 ##   Resolution of bitmaps in pixels per inch.  For both metafiles and
 ## SVG the default is the screen resolution, for other it is 150 dpi.
 ## To specify screen resolution, use "-r0".
Index: scripts/time/datetick.m
===================================================================
--- scripts/time/datetick.m.orig
+++ scripts/time/datetick.m
@@ -22,13 +22,12 @@
 ## @deftypefnx {Function File} {} datetick (@var{axis}, @var{form})
 ## @deftypefnx {Function File} {} datetick (@dots{}, "keeplimits")
 ## @deftypefnx {Function File} {} datetick (@dots{}, "keepticks")
-## @deftypefnx {Function File} {} datetick (@dots{ax}, @dots{})
-## Add date formatted tick labels to an axis.  The axis the apply the
-## ticks to is determined by @var{axis} that can take the values "x",
-## "y" or "z".  The default value is "x".  The formatting of the labels is
-## determined by the variable @var{form}, that can either be a string in
-## the format needed by @code{dateform}, or a positive integer that can
-## be accepted by @code{datestr}.
+## @deftypefnx {Function File} {} datetick (@var{hax}, @dots{})
+## Add date formatted tick labels to an axis.  The axis to apply the
+## ticks to is determined by @var{axis} which can take the values "x",
+## "y", or "z".  The default value is "x".  The formatting of the labels is
+## determined by the variable @var{form}, which can either be a string or
+## positive integer that @code{datestr} accepts.
 ## @seealso{datenum, datestr}
 ## @end deftypefn
 
Index: src/dirfns.cc
===================================================================
--- src/dirfns.cc.orig
+++ src/dirfns.cc
@@ -555,9 +555,9 @@ them, or an empty cell array if no patte
 interpreted as filename globbing patterns (as they are used by Unix shells).\n\
 Within a pattern\n\
 @table @code\n\
-@itemx *\n\
+@item *\n\
 matches any string, including the null string,\n\
-@itemx ?\n\
+@item ?\n\
 matches any single character, and\n\
 \n\
 @item [@dots{}]\n\
Index: src/file-io.cc
===================================================================
--- src/file-io.cc.orig
+++ src/file-io.cc
@@ -633,23 +633,23 @@ must also open the file in binary mode.\
 The parameter @var{arch} is a string specifying the default data format\n\
 for the file.  Valid values for @var{arch} are:\n\
 \n\
-@table @asis\n\
-@samp{native}\n\
+@table @samp\n\
+@item native\n\
 The format of the current machine (this is the default).\n\
 \n\
-@samp{ieee-be}\n\
+@item ieee-be\n\
 IEEE big endian format.\n\
 \n\
-@samp{ieee-le}\n\
+@item ieee-le\n\
 IEEE little endian format.\n\
 \n\
-@samp{vaxd}\n\
+@item vaxd\n\
 VAX D floating format.\n\
 \n\
-@samp{vaxg}\n\
+@item vaxg\n\
 VAX G floating format.\n\
 \n\
-@samp{cray}\n\
+@item cray\n\
 Cray floating format.\n\
 @end table\n\
 \n\
Index: scripts/audio/wavread.m
===================================================================
--- scripts/audio/wavread.m.orig
+++ scripts/audio/wavread.m
@@ -18,21 +18,26 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{y} =} wavread (@var{filename})
+## @deftypefnx {Function File} {[@var{y}, @var{Fs}, @var{bps}] =} wavread (@var{filename})
+## @deftypefnx {Function File} {[@dots{}] =} wavread (@var{filename}, @var{n})
+## @deftypefnx {Function File} {[@dots{}] =} wavread (@var{filename}, @var{n1} @var{n2})
+## @deftypefnx {Function File} {[@var{samples}, @var{channels}] =} wavread (@var{filename}, "size")
+## 
 ## Load the RIFF/WAVE sound file @var{filename}, and return the samples
 ## in vector @var{y}.  If the file contains multichannel data, then
 ## @var{y} is a matrix with the channels represented as columns.
 ##
-## @deftypefnx {Function File} {[@var{y}, @var{Fs}, @var{bps}] =} wavread (@var{filename})
+## @code{[@var{y}, @var{Fs}, @var{bps}] = wavread (@var{filename})}
 ## Additionally return the sample rate (@var{fs}) in Hz and the number of bits
 ## per sample (@var{bps}).
 ##
-## @deftypefnx {Function File} {[@dots{}] =} wavread (@var{filename}, @var{n})
+## @code{[@dots{}] = wavread (@var{filename}, @var{n})}
 ## Read only the first @var{n} samples from each channel.
 ##
-## @deftypefnx {Function File} {[@dots{}] =} wavread (@var{filename}, @var{n1} @var{n2})
+## @code{wavread (@var{filename}, @var{n1} @var{n2})}
 ## Read only samples @var{n1} through @var{n2} from each channel.
 ##
-## @deftypefnx {Function File} {[@var{samples}, @var{channels}] =} wavread (@var{filename}, "size")
+## @code{[@var{samples}, @var{channels}] = wavread (@var{filename}, "size")}
 ## Return the number of samples (@var{n}) and channels (@var{ch})
 ## instead of the audio data.
 ## @seealso{wavwrite}
Index: scripts/miscellaneous/getappdata.m
===================================================================
--- scripts/miscellaneous/getappdata.m.orig
+++ scripts/miscellaneous/getappdata.m
@@ -16,10 +16,12 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{value} =} getappdata (@var{h}, @var{name})
+## @deftypefnx {Function File} {@var{appdata} =} getappdata (@var{h})
+## 
 ## Return the @var{value} for named application data for the object(s) with
 ## handle(s) @var{h}.
-## @deftypefnx {Function File} {@var{appdata} =} getappdata (@var{h})
-## Return a structure, @var{appdata}, whose fields correspond to the appdata
+## 
+## @code{getappdata(@var{h})} returns a structure, @var{appdata}, whose fields correspond to the appdata
 ## properties.
 ## @end deftypefn
 
Index: scripts/miscellaneous/license.m
===================================================================
--- scripts/miscellaneous/license.m.orig
+++ scripts/miscellaneous/license.m
@@ -18,20 +18,26 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} license
+## @deftypefnx {Function File} {} license ("inuse")
+## @deftypefnx {Function File} {@var{retval} =} license ("inuse")
+## @deftypefnx {Function File} {@var{retval} =} license ("test", @var{feature})
+## @deftypefnx {Function File} {} license ("test", @var{feature}, @var{toggle})
+## @deftypefnx {Function File} {@var{retval} =} license ("checkout", @var{feature})
+## 
 ## Display the license of Octave.
 ##
-## @deftypefnx {Function File} {} license ("inuse")
+## @code{license ("inuse")}
 ## Display a list of packages currently being used.
 ##
-## @deftypefnx {Function File} {@var{retval} =} license ("inuse")
+## @code{@var{retval} = license ("inuse")}
 ## Return a structure containing the fields @code{feature} and @code{user}.
 ##
-## @deftypefnx {Function File} {@var{retval} =} license ("test", @var{feature})
+## @code{@var{retval} = license ("test", @var{feature})}
 ## Return 1 if a license exists for the product identified by the string
 ## @var{feature} and 0 otherwise.  The argument @var{feature} is case
 ## insensitive and only the first 27 characters are checked.
 ##
-## @deftypefnx {Function File} {} license ("test", @var{feature}, @var{toggle})
+## @code{license ("test", @var{feature}, @var{toggle})}
 ## Enable or disable license testing for @var{feature}, depending on
 ## @var{toggle}, which may be one of:
 ##
@@ -44,7 +50,7 @@
 ## Future tests for the specified license of @var{feature} return 0.
 ## @end table
 ##
-## @deftypefnx {Function File} {@var{retval} =} license ("checkout", @var{feature})
+## @code{@var{retval} = license ("checkout", @var{feature})}
 ## Check out a license for @var{feature}, returning 1 on success and 0
 ## on failure.
 ##
Index: scripts/miscellaneous/ver.m
===================================================================
--- scripts/miscellaneous/ver.m.orig
+++ scripts/miscellaneous/ver.m
@@ -18,11 +18,15 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} ver ()
+## @deftypefnx {Function File} {v =} ver ()
+## @deftypefnx {Function File} {v =} ver ("Octave")
+## @deftypefnx {Function File} {v =} ver (@var{package})
+## 
 ## Display a header containing the current Octave version number, license
 ## string and operating system, followed by the installed package names,
 ## versions, and installation directories.
 ##
-## @deftypefnx {Function File} {v =} ver ()
+## @code{v = ver ()}
 ## Return a vector of structures, respecting Octave and each installed package.
 ## The structure includes the following fields.
 ##
@@ -40,10 +44,10 @@
 ## Date respecting the version/revision.
 ## @end table
 ##
-## @deftypefnx {Function File} {v =} ver ("Octave")
+## @code{v = ver ("Octave")}
 ## Return version information for Octave only.
 ##
-## @deftypefnx {Function File} {v =} ver (@var{package})
+## @code{v = ver (@var{package})}
 ## Return version information for @var{package}.
 ##
 ## @seealso{version, octave_config_info}
Index: scripts/plot/daspect.m
===================================================================
--- scripts/plot/daspect.m.orig
+++ scripts/plot/daspect.m
@@ -18,22 +18,23 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} daspect (@var{data_aspect_ratio})
-## Set the data aspect ratio of the current axes.  The aspect ratio is
-## a normalized 3-element vector representing the span of the x, y, and
-## z-axes limits.
-##
-## @deftypefnx {Function File} {@var{data_aspect_ratio} =} daspect ( )
-## Return the data aspect ratio of the current axes.
-##
+## @deftypefnx {Function File} {@var{data_aspect_ratio} =} daspect ()
 ## @deftypefnx {Function File} {} daspect (@var{mode})
-## Set the data aspect ratio mode of the current axes.
-##
 ## @deftypefnx {Function File} {@var{data_aspect_ratio_mode} =} daspect ("mode")
-## Return the data aspect ratio mode of the current axes.
-##
 ## @deftypefnx {Function File} {} daspect (@var{hax}, @dots{})
-## Use the axes, with handle @var{hax}, instead of the current axes.
-##
+## @code{daspect} sets the data aspect ratio of the current axes.  The aspect 
+## ratio is a normalized 3-element vector representing the span of the x, y, and
+## z-axes limits.
+## 
+## When called without any arguments it returns data aspect ratio of the current axes.
+## 
+## @code{(daspect (@var{mode}))} sets the data aspect ratio mode of the current axes.
+## 
+## @code{daspect ("mode")} returns the data aspect ratio mode of the current axes.
+## 
+## @code{daspect (@var{hax}, @dots{})} uses the axes, with handle @var{hax},
+## instead of the current axes.
+## 
 ## @seealso{axis, pbaspect, xlim, ylim, zlim}
 ## @end deftypefn
 
Index: scripts/plot/pbaspect.m
===================================================================
--- scripts/plot/pbaspect.m.orig
+++ scripts/plot/pbaspect.m
@@ -18,21 +18,24 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} pbaspect (@var{plot_box_aspect_ratio})
-## Set the plot box aspect ratio of the current axes.  The aspect ratio
-## is a normalized 3-element vector representing the rendered lengths of
-## the x, y, and z-axes.
-##
 ## @deftypefnx {Function File} {@var{plot_box_aspect_ratio} =} pbaspect ( )
-## Return the plot box aspect ratio of the current axes.
-##
 ## @deftypefnx {Function File} {} pbaspect (@var{mode})
-## Set the plot box aspect ratio mode of the current axes.
-##
 ## @deftypefnx {Function File} {@var{plot_box_aspect_ratio_mode} =} pbaspect ("mode")
-## Return the plot box aspect ratio mode of the current axes.
-##
 ## @deftypefnx {Function File} {} pbaspect (@var{hax}, @dots{})
-## Use the axes, with handle @var{hax}, instead of the current axes.
+## 
+## Set the plot box aspect ratio of the current axes.  The aspect ratio
+## is a normalized 3-element vector representing the rendered lengths of
+## the x, y, and z-axes.
+## 
+## When called without any arguments, returns the plot box aspect ratio of 
+## the current axes.
+## 
+## @code{pbaspect(@var{mode})} sets the plot box aspect ratio mode of the current axes.
+## 
+## @code{pbaspect ("mode")} returns the plot box aspect ratio mode of the current axes.
+## 
+## @code{pbaspect (@var{hax}, @dots{})} uses the axes, with handle @var{hax}, instead 
+## of the current axes.
 ##
 ## @seealso{axis, daspect, xlim, ylim, zlim}
 ## @end deftypefn
Index: scripts/polynomial/polyval.m
===================================================================
--- scripts/polynomial/polyval.m.orig
+++ scripts/polynomial/polyval.m
@@ -19,19 +19,21 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{y} =} polyval (@var{p}, @var{x})
 ## @deftypefnx {Function File} {@var{y} =} polyval (@var{p}, @var{x}, [], @var{mu})
+## @deftypefnx {Function File} {[@var{y}, @var{dy}] =} polyval (@var{p}, @var{x}, @var{s})
+## @deftypefnx {Function File} {[@var{y}, @var{dy}] =} polyval (@var{p}, @var{x}, @var{s}, @var{mu})
+## 
 ## Evaluate the polynomial @var{p} at the specified values of @var{x}.  When
 ## @var{mu} is present, evaluate the polynomial for
 ## (@var{x}-@var{mu}(1))/@var{mu}(2).
 ## If @var{x} is a vector or matrix, the polynomial is evaluated for each of
 ## the elements of @var{x}.
 ## 
-## @deftypefnx {Function File} {[@var{y}, @var{dy}] =} polyval (@var{p}, @var{x}, @var{s})
-## @deftypefnx {Function File} {[@var{y}, @var{dy}] =} polyval (@var{p}, @var{x}, @var{s}, @var{mu})
 ## In addition to evaluating the polynomial, the second output
 ## represents the prediction interval, @var{y} +/- @var{dy}, which
 ## contains at least 50% of the future predictions.  To calculate the
 ## prediction interval, the structured variable @var{s}, originating
 ## from @code{polyfit}, must be supplied.
+## 
 ## @seealso{polyvalm, polyaffine, polyfit, roots, poly}
 ## @end deftypefn
 
Index: scripts/set/union.m
===================================================================
--- scripts/set/union.m.orig
+++ scripts/set/union.m
@@ -20,6 +20,8 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} union (@var{a}, @var{b})
 ## @deftypefnx {Function File} {} union (@var{a}, @var{b}, "rows")
+## @deftypefnx {Function File} {[@var{c}, @var{ia}, @var{ib}] =} union (@var{a}, @var{b})
+##
 ## Return the set of elements that are in either of the sets @var{a} and
 ## @var{b}.  @var{a}, @var{b} may be cell arrays of string(s).
 ## For example:
@@ -44,7 +46,6 @@
 ## @end group
 ## @end example
 ##
-## @deftypefnx {Function File} {[@var{c}, @var{ia}, @var{ib}] =} union (@var{a}, @var{b})
 ##
 ## Return index vectors @var{ia} and @var{ib} such that @code{a(ia)} and
 ## @code{b(ib)} are disjoint sets whose union is @var{c}.
Index: scripts/signal/freqz.m
===================================================================
--- scripts/signal/freqz.m.orig
+++ scripts/signal/freqz.m
@@ -18,6 +18,10 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{h}, @var{w}] =} freqz (@var{b}, @var{a}, @var{n}, "whole")
+## @deftypefnx {Function File} {@var{h} =} freqz (@var{b}, @var{a}, @var{w})
+## @deftypefnx {Function File} {[@dots{}] =} freqz (@dots{}, @var{Fs})
+## @deftypefnx {Function File} {} freqz (@dots{})
+## 
 ## Return the complex frequency response @var{h} of the rational IIR filter
 ## whose numerator and denominator coefficients are @var{b} and @var{a},
 ## respectively.  The response is evaluated at @var{n} angular frequencies
@@ -49,16 +53,16 @@
 ## For fastest computation, @var{n} should factor into a small number of
 ## small primes.
 ##
-## @deftypefnx {Function File} {@var{h} =} freqz (@var{b}, @var{a}, @var{w})
+## @code{freqz (@var{b}, @var{a}, @var{w})}
 ## Evaluate the response at the specific frequencies in the vector @var{w}.
 ## The values for @var{w} are measured in radians.
 ##
-## @deftypefnx {Function File} {[@dots{}] =} freqz (@dots{}, @var{Fs})
+## @code{[@dots{}] = freqz (@dots{}, @var{Fs})}
 ## Return frequencies in Hz instead of radians assuming a sampling rate
 ## @var{Fs}.  If you are evaluating the response at specific frequencies
 ## @var{w}, those frequencies should be requested in Hz rather than radians.
 ##
-## @deftypefnx {Function File} {} freqz (@dots{})
+## @code{freqz (@dots{})}
 ## Plot the pass band, stop band and phase response of @var{h} rather
 ## than returning them.
 ## @end deftypefn
Index: doc/liboctave/liboctave.texi
===================================================================
--- doc/liboctave/liboctave.texi.orig
+++ doc/liboctave/liboctave.texi
@@ -80,10 +80,10 @@ modified versions.
 @end ifnottex
 
 @titlepage
-@title{Octave C++ Classes}
-@subtitle{Edition 1.0 for Octave version @value{VERSION}}
-@subtitle{September 1993}
-@author{John W. Eaton}
+@title Octave C++ Classes
+@subtitle Edition 1.0 for Octave version @value{VERSION}
+@subtitle September 1993
+@author John W. Eaton
 @page
 @vskip 0pt plus 1filll
 Copyright @copyright{} 1996, 1997 John W. Eaton.
Index: scripts/miscellaneous/version.m
===================================================================
--- scripts/miscellaneous/version.m.orig
+++ scripts/miscellaneous/version.m
@@ -21,8 +21,8 @@
 ## Return the version number of Octave, as a string.
 ##
 ## This is an alias for the function @w{@env{OCTAVE_VERSION}} provided for
-## compatibility
-## @seealso{OCTAVE_VERSION}.
+## compatibility.
+## @seealso{OCTAVE_VERSION}
 ## @end deftypefn
 
 ## Author: jwe
Index: scripts/help/get_first_help_sentence.m
===================================================================
--- scripts/help/get_first_help_sentence.m.orig
+++ scripts/help/get_first_help_sentence.m
@@ -104,10 +104,9 @@ function [text, status] = first_sentence
     for k = 1:length (def_idx)
       endl = endl_idx (find (endl_idx > def_idx (k), 1));
       if (isempty (endl))
-        keep (def_idx (k):end) = false;
-      else
-        keep (def_idx (k):endl) = false;
+        endl = numel (keep);
       endif
+      keep(def_idx(k):endl) = false;
     endfor
 
     ## Remove the @end ... that corresponds to the @def we removed above
@@ -122,16 +121,11 @@ function [text, status] = first_sentence
     sep_idx = min (space_idx, bracket_idx);
     def_type = help_text (def1+1:sep_idx-1);
 
-    end_idx = strfind (help_text, sprintf ("@end %s", def_type));
+    end_idx = strfind (help_text, sprintf ("@end %s", def_type))(1);
     if (isempty (end_idx))
       error ("get_first_help_sentence: couldn't parse texinfo");
     endif
-    endl = endl_idx (find (endl_idx > end_idx, 1));
-    if (isempty (endl))
-      keep (end_idx:end) = false;
-    else
-      keep (end_idx:endl) = false;
-    endif
+    keep(end_idx:end) = false;
 
     help_text = help_text (keep);
   endif
