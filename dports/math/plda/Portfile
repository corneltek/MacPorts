# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0

name                plda
version             3.1
categories          math textproc
platforms           darwin
maintainers         hum openmaintainer
license             Apache-2

homepage            http://code.google.com/p/plda/
description         A parallel C++ implementation of fast Gibbs sampling of Latent Dirichlet Allocation
long_description    plda is a parallel C++ implementation of fast Gibbs sampling of \
                    Latent Dirichlet Allocation (LDA).

master_sites        googlecode
checksums           rmd160  f1551328db9eabd99d0ed29d2352e94fcd0249d0 \
                    sha256  aae495f96fdbf048b71080dec4506f242044ce40930ad2fdf5ad71e4fedad682

worksrcdir          ${name}

variant universal   {}

use_configure       no

build.target        lda infer
build.args          CC=${configure.cxx} \
                    CFLAGS="${configure.cxxflags} [get_canonical_archflags cxx]"

variant mpi description {Add parallel lda} {
    depends_lib         port:mpich2
    build.target        lda infer mpi_lda
}
    
destroot {
    set plda_dir ${destroot}${prefix}/share/plda
    xinstall -m 755 -d ${plda_dir}/testdata
    xinstall -m 644 -W ${worksrcpath} COPYING README         ${plda_dir}
    xinstall -m 644 -W ${worksrcpath}/testdata test_data.txt ${plda_dir}/testdata
    foreach target ${build.target} {
        xinstall -W ${worksrcpath} ${target} ${destroot}${prefix}/bin
    }
}

livecheck.type      default
