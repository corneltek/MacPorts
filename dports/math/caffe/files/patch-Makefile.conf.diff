--- Makefile.config.orig	2014-12-18 01:12:23.000000000 +0900
+++ Makefile.config	2014-12-20 16:03:45.000000000 +0900
@@ -5,26 +5,26 @@
 # USE_CUDNN := 1
 
 # CPU-only switch (uncomment to build without GPU support).
-# CPU_ONLY := 1
+CPU_ONLY := 1
 
 # To customize your choice of compiler, uncomment and set the following.
 # N.B. the default for Linux is g++ and the default for OSX is clang++
 # CUSTOM_CXX := g++
 
 # CUDA directory contains bin/ and lib/ directories that we need.
-CUDA_DIR := /usr/local/cuda
+# CUDA_DIR := /usr/local/cuda
 # On Ubuntu 14.04, if cuda tools are installed via
 # "sudo apt-get install nvidia-cuda-toolkit" then use this instead:
 # CUDA_DIR := /usr
 
 # CUDA architecture setting: going with all of them.
 # For CUDA < 6.0, comment the *_50 lines for compatibility.
-CUDA_ARCH := -gencode arch=compute_20,code=sm_20 \
-		-gencode arch=compute_20,code=sm_21 \
-		-gencode arch=compute_30,code=sm_30 \
-		-gencode arch=compute_35,code=sm_35 \
-		-gencode arch=compute_50,code=sm_50 \
-		-gencode arch=compute_50,code=compute_50
+# CUDA_ARCH := -gencode arch=compute_20,code=sm_20 \
+# 		-gencode arch=compute_20,code=sm_21 \
+# 		-gencode arch=compute_30,code=sm_30 \
+# 		-gencode arch=compute_35,code=sm_35 \
+# 		-gencode arch=compute_50,code=sm_50 \
+# 		-gencode arch=compute_50,code=compute_50
 
 # BLAS choice:
 # atlas for ATLAS (default)
@@ -44,20 +44,21 @@
 
 # NOTE: this is required only if you will compile the python interface.
 # We need to be able to find Python.h and numpy/arrayobject.h.
-PYTHON_INCLUDE := /usr/include/python2.7 \
-		/usr/lib/python2.7/dist-packages/numpy/core/include
+_PYTHON_ROOT := $(_PREFIX)/Library/Frameworks/Python.framework/Versions/2.7
+PYTHON_INCLUDE := $(_PYTHON_ROOT)/include/python2.7 \
+		$(_PYTHON_ROOT)/lib/python2.7/site-packages/numpy/core/include
 # Anaconda Python distribution is quite popular. Include path:
 # PYTHON_INCLUDE := $(HOME)/anaconda/include \
 		# $(HOME)/anaconda/include/python2.7 \
 		# $(HOME)/anaconda/lib/python2.7/site-packages/numpy/core/include
 
 # We need to be able to find libpythonX.X.so or .dylib.
-PYTHON_LIB := /usr/lib
+PYTHON_LIB := $(_PREFIX)/lib
 # PYTHON_LIB := $(HOME)/anaconda/lib
 
 # Whatever else you find you need goes here.
-INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include
-LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib
+INCLUDE_DIRS := $(PYTHON_INCLUDE) $(_PREFIX)/include /usr/include
+LIBRARY_DIRS := $(PYTHON_LIB) /usr/lib
 
 BUILD_DIR := build
 DISTRIBUTE_DIR := distribute
