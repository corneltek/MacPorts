# $Id: Portfile,v 1.1 2004/02/23 05:23:20 rshaw Exp $
PortSystem 1.0

name			zope-revisionmanager
version			1.3.2
categories		www zope python
maintainers		rshaw@opendarwin.org
description		RevisionManager is a CVS frontend for Zope.
long_description	RevisionManager is a CVS frontend for Zope. It \
					brings the power of revision controlling to the \
					ZODB.  It introduces all common cvs commands to \
					Zope. These include importing, checking in and out, \
					updating, adding and removing files, tagging and \
					branching.  The three common access methods are \
					supported: \
					- local, i.e. the repository is on the same machine \
					as the Zope server \
					- server (a.k.a. ext) using rsh or ssh (ssh must be \
					used with public key authentication) \
					- pserver, the password server. \
					Additional features: \
					- RevisionManager can use the Zope user id to \
					connect to a RSH/SSH or pserver server \
					- Upon committing, RevisionManager can include the \
					ZODB history of the objects in questions in the CVS \
					log. \
					- When enabled, RevisionManager stores properties of \
					objects in separate .properties files (when \
					supported).
platforms		darwin freebsd
homepage		http://zope.org/Members/philikon/RevisionManager
master_sites	http://zope.org/Members/philikon/RevisionManager/${version}/
dist_subdir		zope/${name}
distname		RevisionManager
extract.suffix	.tgz
distfiles		${distname}-${version}${extract.suffix}
checksums		md5 0878bd0ba2bdb5d3edee68d4d94f9e44

# Use Python 2.3 from DarwinPorts explicitly 
set python		${prefix}/bin/python2.3

# Location to install Zope products and the Zope user                  
set zopehome	${prefix}/libexec/Zope
set zopeinst	${prefix}/www/Zope
set zopeprod	${zopehome}/lib/python/Products
set zopeuser	zope
set zopegroup	www

# Depends on Zope
depends_build	path:${zopehome}:zope

# Depends on these Zope products and binaries
depends_run		path:${zopeprod}/ZopeTree:zope-zopetree \
				bin:cvs:cvs

use_configure	no

pre-build {
	file copy ${zopehome}/bin/compilezpy.py ${workpath}
	reinplace "s|^.*sys.stdout|#&|" ${workpath}/compilezpy.py
	system "find ${worksrcpath} -name '*.py\[co\]' | xargs rm"
}

build {
	system "cd ${worksrcpath} && ${python} ${workpath}/compilezpy.py"
}

destroot {
	if {$env(USER) != "root"} {
		ui_msg "------------------------------------------------------------"
		ui_msg "Note that you are not installing as root, so files installed"
		ui_msg "by this port will not end up with proper ownership and"
		ui_msg "likely not work correctly with Zope."
		ui_msg "------------------------------------------------------------"
	}

	# Install products
	xinstall -d -m 0755 ${destroot}${zopeprod}
	system "cp -R ${workpath}/${distname} ${destroot}${zopeprod}"
	if {$env(USER) == "root"} {
		system "chown -R ${zopeuser} ${destroot}${zopehome}"
		system "chgrp -R ${zopegroup} ${destroot}${zopehome}"
	}
} 

