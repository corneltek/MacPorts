# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4; truncate-lines: t -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           qt4 1.0

name                qwt-devel
version             6.0.1
conflicts           qwt qwt52 qwt-60
categories          graphics science
maintainers         michaelld openmaintainer
description         Qt Widgets for Technical Applications, version 6.0
long_description    \
    The Qwt 6.0 library contains GUI Components and utility classes \
    which are primarily useful for programs with a technical \
    background. Beside a 2D plot widget it provides scales, sliders, \
    dials, compasses, thermometers, wheels and knobs to control \
    or display values, arrays, or ranges of type double. \
    Version 6.0 contains source incompatible changes versus 5.1. \
    See qwt for that port.
homepage            http://qwt.sourceforge.net
master_sites        sourceforge:qwt
distname            qwt-${version}
use_bzip2           yes
use_parallel_build  no

checksums           sha1    301cca0c49c7efc14363b42e082b09056178973e \
                    rmd160  54b815d131fd7e7c8bfd1a49fbf3bc7c0ccc9c7a

platforms           darwin

patchfiles          patch-qwtconfig.pri.diff \
                    patch-qwtbuild.pri.diff

post-patch {
    # setup for debug, if selected
    if {[variant_isset debug]} {
        reinplace "/CONFIG/s@release@debug_and_release build_all@" \
            ${worksrcpath}/qwtbuild.pri
    }

    # set arch type
    reinplace "s/@ARCHES@/${qt_arch_types}/" \
        ${worksrcpath}/qwtbuild.pri

    # setup for examples, if selected
    if {![variant_isset examples]} {
        reinplace "s@QwtExamples@@" \
            ${worksrcpath}/qwtconfig.pri
    }
}

configure.cmd       ${qt_qmake_cmd}
configure.pre_args  INSTALLBASE="${prefix}"

# qmake does not handle these flags flags
configure.universal_args-delete --disable-dependency-tracking
configure.args-delete           --disable-dependency-tracking

# allow ccache, if specified by the user
pre-build {
    if {[tbool configure.ccache]} {
        build.post_args "CCACHE=ccache"
    }
}

post-destroot {

    # if qwt is installed as a framework,
    # link in as libraries and headers too

    if {[file exists ${destroot}${qt_frameworks_dir}/qwt.framework/qwt]} {

        # get qwt's version numbers

        set qwt_vers [split ${version} "."]
        set qwt_major [lindex ${qwt_vers} 0]
        set qwt_minor [lindex ${qwt_vers} 1]
        set qwt_patch [lindex ${qwt_vers} 2]

        foreach fixfile [exec find ${destroot}${qt_frameworks_dir} \
                             -name "*.framework" | \
                             sed -e "s@${destroot}@@g"] {

            set tf_full [strsed ${fixfile} {s@\\.framework@@}]
            set tf [strsed ${tf_full} {g@.*\/@@}]

            # link headers into ${qt_includes_dir}, removing
            # directories if they are already there first

            set inc_file ${destroot}${qt_includes_dir}/${tf}
            if {[file exists ${inc_file}]} {
                file delete -force ${inc_file}
            }
            ln -s ${tf_full}.framework/Headers ${inc_file}

            # link libraries into ${qt_libs_dir}, all 4 number
            # variants as well as the .prl and .la files

            set libs_dir ${destroot}${qt_libs_dir}

            ln -s ${tf_full}.framework/${tf}.prl ${libs_dir}/lib${tf}.prl
            ln -s ${tf_full}.la ${libs_dir}/lib${tf}.la
            ln -s ${tf_full}.framework/${tf} ${libs_dir}/lib${tf}.dylib
            ln -s ${tf_full}.framework/${tf} ${libs_dir}/lib${tf}.${qwt_major}.dylib
            ln -s ${tf_full}.framework/${tf} ${libs_dir}/lib${tf}.${qwt_major}.${qwt_minor}.dylib
            ln -s ${tf_full}.framework/${tf} ${libs_dir}/lib${tf}.${qwt_major}.${qwt_minor}.${qwt_patch}.dylib

        }
    }
}

universal_variant   yes

variant debug description "Build release and debug versions" {}

variant examples description "Build examples" {}

livecheck.url           http://sourceforge.net/api/file/index/project-id/13693/mtime/desc/rss?path=%2Fqwt
livecheck.regex         \\/qwt\\/(\\d+(\\.\\d+)+)\\/
