=== modified file 'src/color-profile.cpp'
--- src/color-profile.cpp	2013-12-10 12:44:19 +0000
+++ src/color-profile.cpp	2013-12-15 00:47:56 +0000
@@ -980,7 +980,7 @@
         }
         nameStr = Glib::ustring(data.begin(), data.end());
     }
-    if (nameStr.empty()) {
+    if (nameStr.empty() || !g_utf8_validate(nameStr.c_str(), -1, NULL)) {
         nameStr = _("(invalid UTF-8 string)");
     }
 #endif

=== modified file 'src/ui/tool/multi-path-manipulator.cpp'
--- src/ui/tool/multi-path-manipulator.cpp	2013-12-10 12:44:18 +0000
+++ src/ui/tool/multi-path-manipulator.cpp	2013-12-12 16:04:06 +0000
@@ -333,18 +333,21 @@
 
 void MultiPathManipulator::insertNodes()
 {
+    if (_selection.empty()) return;
     invokeForAll(&PathManipulator::insertNodes);
     _done(_("Add nodes"));
 }
 
 void MultiPathManipulator::duplicateNodes()
 {
+    if (_selection.empty()) return;
     invokeForAll(&PathManipulator::duplicateNodes);
     _done(_("Duplicate nodes"));
 }
 
 void MultiPathManipulator::joinNodes()
 {
+    if (_selection.empty()) return;
     invokeForAll(&PathManipulator::hideDragPoint);
     // Node join has two parts. In the first one we join two subpaths by fusing endpoints
     // into one. In the second we fuse nodes in each subpath.
@@ -422,6 +425,7 @@
 /** Join selected endpoints to create segments. */
 void MultiPathManipulator::joinSegments()
 {
+    if (_selection.empty()) return;
     IterPairList joins;
     find_join_iterators(_selection, joins);
 
@@ -454,6 +458,7 @@
 
 void MultiPathManipulator::alignNodes(Geom::Dim2 d)
 {
+    if (_selection.empty()) return;
     _selection.align(d);
     if (d == Geom::X) {
         _done("Align nodes to a horizontal line");
@@ -464,6 +469,7 @@
 
 void MultiPathManipulator::distributeNodes(Geom::Dim2 d)
 {
+    if (_selection.empty()) return;
     _selection.distribute(d);
     if (d == Geom::X) {
         _done("Distrubute nodes horizontally");
@@ -706,7 +712,7 @@
         case GDK_u:
         case GDK_U:
             if (held_only_shift(event->key)) {
-                // Shift+L - make segments curves
+                // Shift+U - make segments curves
                 setSegmentType(SEGMENT_CUBIC_BEZIER);
                 return true;
             }

=== modified file 'src/widgets/toolbox.cpp'
--- src/widgets/toolbox.cpp	2011-05-21 23:22:03 +0000
+++ src/widgets/toolbox.cpp	2013-12-12 16:04:06 +0000
@@ -3769,7 +3769,7 @@
     GtkAdjustment *adj;
 
     // fixme: make settable
-    gdouble rev = 5;
+    gdouble rev = 3;
     gdouble exp = 1.0;
     gdouble t0 = 0.0;
 

