http://trac.macports.org/ticket/41280
http://bugzilla.maptools.org/show_bug.cgi?id=2464

This is patch that tries to fix the most urgest problem of incompatible 64-bit integer types with minimal possible changes.
Ideally the problem should be fixed upstream in a proper way with more radical changes.

--- configure.orig
+++ configure
@@ -17042,7 +17042,7 @@ fi
 $as_echo "$INT64_T" >&6; }
 
 cat >>confdefs.h <<_ACEOF
-#define TIFF_INT64_T $INT64_T
+#define TIFF_INT64_T int64_t
 _ACEOF
 
 
@@ -17076,7 +17076,7 @@ fi
 $as_echo "$UINT64_T" >&6; }
 
 cat >>confdefs.h <<_ACEOF
-#define TIFF_UINT64_T $UINT64_T
+#define TIFF_UINT64_T uint64_t
 _ACEOF
 
 
--- configure.ac.orig
+++ configure.ac
@@ -290,7 +290,7 @@ fi
 
 
 AC_MSG_RESULT($INT64_T)
-AC_DEFINE_UNQUOTED(TIFF_INT64_T,$INT64_T,[Signed 64-bit type])
+AC_DEFINE_UNQUOTED(TIFF_INT64_T,[int64_t],[Signed 64-bit type])
 AC_DEFINE_UNQUOTED(TIFF_INT64_FORMAT,$INT64_FORMAT,[Signed 64-bit type formatter])
 
 AC_MSG_CHECKING(for unsigned 64-bit type)
@@ -314,7 +314,7 @@ then
   esac
 fi
 AC_MSG_RESULT($UINT64_T)
-AC_DEFINE_UNQUOTED(TIFF_UINT64_T,$UINT64_T,[Unsigned 64-bit type])
+AC_DEFINE_UNQUOTED(TIFF_UINT64_T,[uint64_t],[Unsigned 64-bit type])
 AC_DEFINE_UNQUOTED(TIFF_UINT64_FORMAT,$UINT64_FORMAT,[Unsigned 64-bit type formatter])
 
 # Determine TIFF equivalent of ssize_t
--- libtiff/tif_config.h.in.orig
+++ libtiff/tif_config.h.in
@@ -1,5 +1,7 @@
 /* libtiff/tif_config.h.in.  Generated from configure.ac by autoheader.  */
 
+#include <stdint.h>
+
 /* Define if building universal (internal helper macro) */
 #undef AC_APPLE_UNIVERSAL_BUILD
 
--- libtiff/tiffconf.h.in.orig
+++ libtiff/tiffconf.h.in
@@ -7,6 +7,8 @@
 #ifndef _TIFFCONF_
 #define _TIFFCONF_
 
+#include <stdint.h>
+
 /* Signed 16-bit type */
 #undef TIFF_INT16_T
 
