--- CMakeLists.txt.orig	2013-05-23 07:14:51.000000000 -0700
+++ CMakeLists.txt	2013-05-31 17:30:14.000000000 -0700
@@ -220,10 +220,10 @@
 IF(NOT ANDROID)
 IF(APPLE)
     # Determine the canonical name of the selected Platform SDK
-    EXECUTE_PROCESS(COMMAND "defaults" "read" "${CMAKE_OSX_SYSROOT}/SDKSettings.plist" "CanonicalName"
-                    OUTPUT_VARIABLE OSG_OSX_SDK_NAME
-                    OUTPUT_STRIP_TRAILING_WHITESPACE)
-
+    #EXECUTE_PROCESS(COMMAND "defaults" "read" "${CMAKE_OSX_SYSROOT}/SDKSettings.plist" "CanonicalName"
+    #                OUTPUT_VARIABLE OSG_OSX_SDK_NAME
+    #                OUTPUT_STRIP_TRAILING_WHITESPACE)
+    SET (OSG_OSX_SDK_NAME "@@MP_SDK_NAME@@")
     # Trying to get CMake to generate an XCode IPhone project, current efforts are to get iphoneos sdk 3.1 working
     # Added option which needs manually setting to select the IPhone SDK for building. We can only have one of the below
     # set to true. Should realy have an OSG_BUILD_PLATFORM variable that we set to our desired platform
@@ -493,27 +493,75 @@
 ELSE()
 # Common to all platforms except android:
     FIND_PACKAGE(FreeType)
-    FIND_PACKAGE(Inventor)
+    OPTION(OSG_ENABLE_INVENTOR "Enable Inventor (Coin) support" OFF)
+    IF(OSG_ENABLE_INVENTOR)
+        FIND_PACKAGE(Inventor)
+    ELSE()
+        SET(INVENTOR_FOUND NO)
+    ENDIF()
     FIND_PACKAGE(Jasper)
-    FIND_PACKAGE(OpenEXR)
-    FIND_PACKAGE(COLLADA)
+    OPTION(OSG_ENABLE_OPENEXR "Enable OpenEXR support" OFF)
+    IF(OSG_ENABLE_OPENEXR)
+        FIND_PACKAGE(OpenEXR)
+    ELSE()
+        SET(OPENEXR_FOUND NO)
+    ENDIF()
+    OPTION(OSG_ENABLE_COLLADA "Enable Collada support" OFF)
+    IF(OSG_ENABLE_COLLADA)
+        FIND_PACKAGE(COLLADA)
+    ELSE()
+        SET(COLLADA_FOUND NO)
+    ENDIF()
     FIND_PACKAGE(FBX)
     FIND_PACKAGE(ZLIB)
-    FIND_PACKAGE(Xine)
-    FIND_PACKAGE(OpenVRML)
+    OPTION(OSG_ENABLE_XINE "Enable xine-lib support" OFF)
+    IF(OSG_ENABLE_XINE)
+        FIND_PACKAGE(Xine)
+    ELSE()
+        SET(XINE_FOUND NO)
+    ENDIF()
+    OPTION(OSG_ENABLE_OPENVRML "Enable OpenVRML support" OFF)
+    IF(OSG_ENABLE_OPENVRML)
+        FIND_PACKAGE(OpenVRML)
+    ELSE()
+        SET(OPENVRML_FOUND NO)
+    ENDIF()
     FIND_PACKAGE(Performer)
     FIND_PACKAGE(GDAL)
-    FIND_PACKAGE(GTA)
+    OPTION(OSG_ENABLE_GTA "Enable libgta support" OFF)
+    IF(OSG_ENABLE_GTA)
+        FIND_PACKAGE(GTA)
+    ELSE()
+        SET(GTA_FOUND NO)
+    ENDIF()
     FIND_PACKAGE(CURL)
-    FIND_PACKAGE(LibVNCServer)
+    OPTION(OSG_ENABLE_LIBVNCSERVER "Enable LibVNCServer support" OFF)
+    IF(OSG_ENABLE_LIBVNCSERVER)
+        FIND_PACKAGE(LibVNCServer)
+    ELSE()
+        SET(LIBVNCSERVER_FOUND NO)
+    ENDIF()
     FIND_PACKAGE(OurDCMTK)
     FIND_PACKAGE(OpenAL)
-    FIND_PACKAGE(FFmpeg)
+    OPTION(OSG_ENABLE_FFMPEG "Enable FFmpeg support" OFF)
+    IF(OSG_ENABLE_FFMPEG)
+        FIND_PACKAGE(FFmpeg)
+    ELSE()
+        SET(FFMPEG_FOUND NO)
+    ENDIF()
     FIND_PACKAGE(DirectShow)
-    FIND_PACKAGE(SDL)
+    OPTION(OSG_ENABLE_SDL "Enable SDL support" OFF)
+    IF(OSG_ENABLE_SDL)
+        FIND_PACKAGE(SDL)
+    ELSE()
+        SET(SDL_FOUND NO)
+    ENDIF()
     FIND_PACKAGE(Poppler-glib)
     FIND_PACKAGE(RSVG)
-    FIND_PACKAGE(GtkGl)
+    OPTION(OSG_ENABLE_GTKGL "Enable GTK GL widget support" OFF)
+    IF(OSG_ENABLE_GTKGL)
+        FIND_PACKAGE(GtkGl)
+    ENDIF()
     FIND_PACKAGE(DirectInput)
     FIND_PACKAGE(NVTT)
     FIND_PACKAGE(Asio)
