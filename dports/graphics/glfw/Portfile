# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           github 1.0

github.setup        glfw glfw 04a439a0a099893d7ea83580a8169b70c14c28db
version             20150815
checksums           rmd160 e16964ffa874d6dbe9a46c4f47bb9fd650b87488 \
                    sha256 da61b9d0529da3000e4fe7e842e6b7256f168a0ef838504160b7f12d96a9a96e

categories          graphics
maintainers         michaelld openmaintainer
description         GLFW is a free, open-source, portable library for OpenGL and OpenGL ES application development
license             zlib
platforms           darwin macosx

long_description ${description}: \
    This port follows the GIT master version of GLFW, which is typically updated every few days to weeks.

# use the real home page, not github's

homepage            http://www.glfw.org/

# do VPATH (out of source tree) build

cmake.out_of_source yes

# configuration arguments for MacPorts build

configure.args      -DBUILD_SHARED_LIBS=on \
                    -DGLFW_BUILD_EXAMPLES=off \
                    -DGLFW_BUILD_TESTS=off

# remove top-level library path, such that internal libraries are used
# instead of any already-installed ones.

configure.ldflags-delete -L${prefix}/lib

variant docs description {build documentation} {}

default_variants    +docs

if {[variant_isset docs]} {
    depends_build-append  port:doxygen
    configure.args-append -DDOXYGEN_EXECUTABLE=${prefix}/bin/doxygen
} else {
    configure.args-append -DDOXYGEN_EXECUTABLE=
}

post-destroot {

    # move cmake Modules to an appropriate location

    xinstall -m 755 -d ${destroot}${prefix}/share/cmake
    move ${destroot}${prefix}/lib/cmake/glfw ${destroot}${prefix}/share/cmake

    # copy html docs if requested

    if {[variant_isset docs]} {
        xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}
        copy ${cmake.build_dir}/docs/html ${destroot}${prefix}/share/doc/${name}
    }
}
