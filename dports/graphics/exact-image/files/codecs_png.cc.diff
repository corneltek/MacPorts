--- codecs/png.cc.orig	2011-02-09 16:18:47.000000000 +1100
+++ codecs/png.cc	2011-02-09 16:25:04.000000000 +1100
@@ -71,7 +71,7 @@ int PNGCodec::readImage (std::istream* s
   /* Allocate/initialize the memory for image information.  REQUIRED. */
   info_ptr = png_create_info_struct(png_ptr);
   if (info_ptr == NULL) {
-    png_destroy_read_struct(&png_ptr, png_infopp_NULL, png_infopp_NULL);
+    png_destroy_read_struct(&png_ptr, (png_infopp)NULL, (png_infopp)NULL);
     return 0;
   }
   
@@ -82,7 +82,7 @@ int PNGCodec::readImage (std::istream* s
   
   if (setjmp(png_jmpbuf(png_ptr))) {
     /* Free all of the memory associated with the png_ptr and info_ptr */
-    png_destroy_read_struct(&png_ptr, &info_ptr, png_infopp_NULL);
+    png_destroy_read_struct(&png_ptr, &info_ptr, (png_infopp)NULL);
     /* If we get here, we had a problem reading the file */
     return 0;
   }
@@ -99,7 +99,7 @@ int PNGCodec::readImage (std::istream* s
   png_read_info (png_ptr, info_ptr);
   
   png_get_IHDR (png_ptr, info_ptr, &width, &height, &bit_depth, &color_type,
-		&interlace_type, int_p_NULL, int_p_NULL);
+		&interlace_type, NULL, NULL);
   
   image.w = width;
   image.h = height;
@@ -196,11 +196,11 @@ int PNGCodec::readImage (std::istream* s
   for (int pass = 0; pass < number_passes; ++pass)
     for (unsigned int y = 0; y < height; ++y) {
       row_pointers[0] = image.getRawData() + y * stride;
-      png_read_rows(png_ptr, row_pointers, png_bytepp_NULL, 1);
+      png_read_rows(png_ptr, row_pointers, (png_bytepp)NULL, 1);
     }
   
   /* clean up after the read, and free any memory allocated - REQUIRED */
-  png_destroy_read_struct(&png_ptr, &info_ptr, png_infopp_NULL);
+  png_destroy_read_struct(&png_ptr, &info_ptr, (png_infopp)NULL);
   
   /* that's it */
   return true;
@@ -224,7 +224,7 @@ bool PNGCodec::writeImage (std::ostream*
   /* Allocate/initialize the memory for image information.  REQUIRED. */
   info_ptr = png_create_info_struct(png_ptr);
   if (info_ptr == NULL) {
-    png_destroy_write_struct(&png_ptr, png_infopp_NULL);
+    png_destroy_write_struct(&png_ptr, (png_infopp)NULL);
     return false;
   }
   
@@ -244,8 +244,6 @@ bool PNGCodec::writeImage (std::ostream*
   else if (quality > Z_BEST_COMPRESSION) quality = Z_BEST_COMPRESSION;
   png_set_compression_level(png_ptr, quality);
   
-  png_info_init (info_ptr);
-  
   /* Set up our STL stream output control */ 
   png_set_write_fn (png_ptr, stream, &stdstream_write_data, &stdstream_flush_data);
   
