diff -Naur tetex-src-3.0/texk/dvipng.orig/draw.c tetex-src-3.0/texk/dvipng/draw.c
--- tetex-src-3.0/texk/dvipng.orig/draw.c	2005-02-04 18:21:09.000000000 +0900
+++ tetex-src-3.0/texk/dvipng/draw.c	2010-09-29 06:54:20.000000000 +0900
@@ -99,7 +99,15 @@
 
   if (currentfont==NULL) 
     Fatal("faulty DVI, trying to set character from null font");
+  if (c<0 || c>LASTFNTCHAR) {
+    Warning("glyph index out of range (%d), skipping",c);
+    return(0);
+  }
   ptr = currentfont->chr[c];
+  if (ptr==NULL) {
+    Warning("unable to draw glyph %d, skipping",c);
+    return(0);
+  }
 #ifdef DEBUG
   switch (currentfont->type) {
   case FONT_TYPE_VF: DEBUG_PRINT(DEBUG_DVI,("\n  VF CHAR:\t")); break;
@@ -107,13 +115,13 @@
   case FONT_TYPE_T1: DEBUG_PRINT(DEBUG_DVI,("\n  T1 CHAR:\t")); break;
   case FONT_TYPE_FT: DEBUG_PRINT(DEBUG_DVI,("\n  FT CHAR:\t")); break;
   }
-  if (isprint(c))
+  if (debug & DEBUG_DVI && c>=0 && c<=UCHAR_MAX && isprint(c))
     DEBUG_PRINT(DEBUG_DVI,("'%c' ",c));
   DEBUG_PRINT(DEBUG_DVI,("%d at (%d,%d) tfmw %d", c,hh,vv,ptr->tfmw));
 #endif
   if (currentfont->type==FONT_TYPE_VF) {
-    return(SetVF(c));
-  } else if (ptr) {
+    return(SetVF(ptr));
+  } else {
     if (ptr->data == NULL) 
       switch(currentfont->type) {
       case FONT_TYPE_PK:	LoadPK(c, ptr); break;
@@ -127,7 +135,7 @@
 	Fatal("undefined fonttype %d",currentfont->type);
       }
     if (page_imagep != NULL)
-      return(SetGlyph(c, hh, vv));
+      return(SetGlyph(ptr, hh, vv));
     else {
       /* Expand bounding box if necessary */
       min(x_min,hh - ptr->xOffset/shrinkfactor);
diff -Naur tetex-src-3.0/texk/dvipng.orig/dvipng.h tetex-src-3.0/texk/dvipng/dvipng.h
--- tetex-src-3.0/texk/dvipng.orig/dvipng.h	2005-02-04 18:21:09.000000000 +0900
+++ tetex-src-3.0/texk/dvipng/dvipng.h	2010-09-29 06:44:58.000000000 +0900
@@ -363,9 +363,9 @@
 void      WriteImage(char*, int);
 void      LoadPK(int32_t, register struct char_entry *);
 int32_t   SetChar(int32_t);
-dviunits  SetGlyph(int32_t c, int32_t hh,int32_t vv);
+dviunits  SetGlyph(struct char_entry *ptr, int32_t hh,int32_t vv);
 void      Gamma(double gamma);
-int32_t   SetVF(int32_t);
+int32_t   SetVF(struct char_entry *ptr);
 int32_t   SetRule(int32_t, int32_t, int32_t, int32_t);
 void      SetSpecial(char *, int32_t, int32_t, int32_t);
 void      BeginVFMacro(struct font_entry*);
diff -Naur tetex-src-3.0/texk/dvipng.orig/set.c tetex-src-3.0/texk/dvipng/set.c
--- tetex-src-3.0/texk/dvipng.orig/set.c	2005-02-04 18:21:11.000000000 +0900
+++ tetex-src-3.0/texk/dvipng/set.c	2010-09-29 06:58:08.000000000 +0900
@@ -180,10 +180,8 @@
 
 
 #define GREYS 255
-dviunits SetGlyph(int32_t c, int32_t hh,int32_t vv)
+dviunits SetGlyph(struct char_entry *ptr, int32_t hh,int32_t vv)
 {
-  register struct char_entry *ptr = currentfont->chr[c];
-                                      /* temporary char_entry pointer */
   int red,green,blue;
   int *Color=alloca(sizeof(int)*(GREYS+1));
   int x,y;
diff -Naur tetex-src-3.0/texk/dvipng.orig/vf.c tetex-src-3.0/texk/dvipng/vf.c
--- tetex-src-3.0/texk/dvipng.orig/vf.c	2005-02-04 18:21:11.000000000 +0900
+++ tetex-src-3.0/texk/dvipng/vf.c	2010-09-29 06:55:24.000000000 +0900
@@ -28,11 +28,10 @@
 #define VF_ID 202
 #define LONG_CHAR 242
 
-int32_t SetVF(int32_t c) 
+int32_t SetVF(struct char_entry* ptr)
 {
   struct font_entry* currentvf;
   unsigned char *command,*end;
-  struct char_entry* ptr=currentfont->chr[c];
 
   currentvf=currentfont;
   BeginVFMacro(currentvf);
