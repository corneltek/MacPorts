# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0

name                yodl
version             3.04.00
revision            1
categories          textproc
platforms           darwin
license             GPL-3
maintainers         larryv

description         Your Own Document Language
long_description    Yodl is a package implementing a pre-document \
                    language and tools to process it. The idea of Yodl \
                    is that you write up a document in a pre-language, \
                    then use the tools to convert it to some final \
                    document language. Current converters are for \
                    HTML, man, LaTeX, a poor-man’s text converter and \
                    an experimental XML converter. Main document types \
                    are ‘article’, ‘report’, ‘book’, ‘letter’ and \
                    ‘manpage’. The Yodl document language is designed \
                    to be easy to use and extensible.
homepage            http://yodl.sourceforge.net

depends_build       port:icmake bin:perl:perl5
depends_lib         bin:bash:bash
depends_skip_archcheck-append icmake bash

master_sites        sourceforge:project/yodl/yodl/${version}
distfiles           yodl_${version}.orig${extract.suffix}
checksums           rmd160  bd03e15418295eb112b4228d3e2fd68b95d225a7 \
                    sha256  66b317877906e165506796f9342a1adf931376f7d8b6990b2d2ff12107685893

patchfiles          avoid-c++11.patch \
                    fix-hashbangs.patch \
                    use-macports-compilers.patch \
                    use-macports-locations.patch
post-patch {
    reinplace -W ${worksrcpath} s|__MP_CC__|${configure.cc}| INSTALL.im
    reinplace -W ${worksrcpath} s|__MP_CXX__|${configure.cxx}| INSTALL.im
    reinplace -W ${worksrcpath} s|__MP_PREFIX__|${prefix}| INSTALL.im build
}

use_configure       no
# TODO: Enable universal variant.

# Install steps derived from INSTALL.txt in the distribution.

build {
    set environ CFLAGS='${configure.cflags}'
    append environ " CXXFLAGS='${configure.cxxflags}'"
    append environ " LDFLAGS='${configure.ldflags}'"

    # Some sed(1) invocations fail without this.
    append environ " LC_ALL=C"

    # Don't bother building manual, since that requires LaTeX.
    system -W ${worksrcpath} "env $environ ./build programs"
    system -W ${worksrcpath} "env $environ ./build man"
    system -W ${worksrcpath} "env $environ ./build macros"
}

destroot {
    system -W ${worksrcpath} "./build install programs ${destroot}"
    system -W ${worksrcpath} "./build install man ${destroot}"
    system -W ${worksrcpath} "./build install macros ${destroot}"
    system -W ${worksrcpath} "./build install docs ${destroot}"
}
