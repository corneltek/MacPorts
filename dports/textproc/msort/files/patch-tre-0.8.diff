tre 0.8.0 added a "tre_" prefix to all function names
--- configure.ac	2008-12-06 23:33:00.000000000 -0600
+++ configure.ac	2009-12-04 14:13:54.000000000 -0600
@@ -85,7 +85,7 @@
 AC_PROG_INSTALL
 
 # Checks for libraries.
-AC_CHECK_LIB([tre], [regwcomp],,[AC_MSG_ERROR([libtre not found. see http://laurikari.net/tre/])])
+AC_CHECK_LIB([tre], [tre_regwcomp],,[AC_MSG_ERROR([libtre not found. see http://laurikari.net/tre/])])
 AC_CHECK_LIB([intl], [gettext],AC_DEFINE([HAVE_LIBINTL], [1],[Define to 1 if you have libintl.]),)
 #AM_GNU_GETTEXT
 
@@ -110,6 +110,6 @@
 AC_C_PRINTF_THSEP
 
 # Checks for library functions.
-AC_CHECK_FUNCS([getopt_long malloc mbstowcs nl_langinfo realloc regwcomp regwexec setlocale strchr strrchr strtod strtol uninum_gmp_version wcschr wcscmp wcscasecmp wcsxfrm])
+AC_CHECK_FUNCS([getopt_long malloc mbstowcs nl_langinfo realloc tre_regwcomp tre_regwexec setlocale strchr strrchr strtod strtol uninum_gmp_version wcschr wcscmp wcscasecmp wcsxfrm])
 AC_CONFIG_FILES([Makefile])
 AC_OUTPUT
--- msort.c	2008-12-05 23:44:10.000000000 -0600
+++ msort.c	2009-12-04 14:15:51.000000000 -0600
@@ -1046,7 +1046,7 @@
 	fprintf(stderr,_("EvalEscapes: out of memory.\n"));
 	exit(OUTOFMEMORY);
       }
-      tmpint1 = regwcomp(&(KeyInfo[KeyCount]->cregexp),TagTemp,REG_EXTENDED);
+      tmpint1 = tre_regwcomp(&(KeyInfo[KeyCount]->cregexp),TagTemp,REG_EXTENDED);
       if(tmpint1 != 0){
 	fprintf(stderr,_("Failed to compile regular expression: %s.\n"), optarg);
 	PrintLog( _("Failed to compile regular expression: %s.\n"), optarg);
@@ -4009,7 +4009,7 @@
     } else{
       /* Key fields identified by tag */
       for(j = 0;j < FieldCnt; j++){
-	stat = regwexec(&(info[i]->cregexp),FieldPtrs[j],CAPTURED_GROUPS,pm,0);
+	stat = tre_regwexec(&(info[i]->cregexp),FieldPtrs[j],CAPTURED_GROUPS,pm,0);
 	if(stat == 0) {
 	  /* Check whether value is empty */
 	  Key = FieldPtrs[j] + pm[1].rm_eo;
@@ -4941,7 +4941,7 @@
     fprintf(stderr,_("Out of memory.\n"));
     exit(OUTOFMEMORY);
   }
-  tmpint1 = regwcomp(&(new->cregexp),restr,REG_EXTENDED);
+  tmpint1 = tre_regwcomp(&(new->cregexp),restr,REG_EXTENDED);
   if(tmpint1 != 0) return -1;
   if(se == NULL) {
     new->se = NULL;
@@ -5085,7 +5085,7 @@
   s = str;
 
   while (*s != L'\0') {
-    if(regwexec(cre,s,2,pm,0) != 0) {
+    if(tre_regwexec(cre,s,2,pm,0) != 0) {
       TotalChars += wcslen(s);
       wcscat(new,s);
       break;
