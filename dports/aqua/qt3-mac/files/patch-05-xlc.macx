diff -uNr mkspecs/default/Info.plist.app mkspecs/default/Info.plist.app
--- mkspecs/default/Info.plist.app	Wed Dec 31 19:00:00 1969
+++ mkspecs/default/Info.plist.app	Tue May 13 03:08:28 2003
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist SYSTEM "file://localhost/System/Library/DTDs/PropertyList.dtd">
+<plist version="0.9">
+<dict>
+	<key>CFBundleIconFile</key>
+	<string>@ICON@</string>
+	<key>CFBundlePackageType</key>
+	<string>APPL</string>
+        <key>CFBundleGetInfoString</key>
+	<string>Created by Qt/QMake</string>
+	<key>CFBundleSignature</key>
+	<string>ttxt</string>
+	<key>CFBundleExecutable</key>
+	<string>@EXECUTABLE@</string>
+	<key>NOTE</key>
+	<string>Please, do NOT change this file -- It was generated by Qt/QMake.</string>
+</dict>
+</plist>
diff -uNr mkspecs/default/qmake.conf mkspecs/default/qmake.conf
--- mkspecs/default/qmake.conf	Wed Dec 31 19:00:00 1969
+++ mkspecs/default/qmake.conf	Fri Aug 22 05:14:25 2003
@@ -0,0 +1,82 @@
+#
+# $Id: patch-05-xlc.macx,v 1.1 2003/09/03 20:26:44 ranger Exp $
+#
+# qmake configuration for macx-g++ (Mac OS X + command-line compiler)
+#
+
+MAKEFILE_GENERATOR	= UNIX
+TEMPLATE		= app
+CONFIG			+= qt warn_on release resource_fork incremental global_init_link_order lib_version_first plugin_no_soname link_prl
+QMAKE_INCREMENTAL_STYLE = sublibs
+
+QMAKE_CC		= cc
+QMAKE_LEX		= flex
+QMAKE_LEXFLAGS		= 
+QMAKE_YACC		= yacc
+QMAKE_YACCFLAGS		= -d
+QMAKE_RESOURCE		= /Developer/Tools/Rez
+QMAKE_CFLAGS		= -pipe
+QMAKE_CFLAGS_DEPS	= -M
+QMAKE_CFLAGS_WARN_ON	= -Wall -W
+QMAKE_CFLAGS_WARN_OFF	= -w
+QMAKE_CFLAGS_RELEASE	= -O2
+QMAKE_CFLAGS_DEBUG	= -g
+QMAKE_CFLAGS_SHLIB	= -fPIC
+QMAKE_EXTENSION_SHLIB	= dylib
+QMAKE_CFLAGS_YACC	= -Wno-unused -Wno-parentheses
+
+QMAKE_CXX		= c++
+QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
+QMAKE_CXXFLAGS_DEPS	= $$QMAKE_CFLAGS_DEPS
+QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
+QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
+QMAKE_CXXFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
+QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
+QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
+QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
+
+QMAKE_LIBDIR		=
+QMAKE_INCDIR_QT		= $(QTDIR)/include
+QMAKE_LIBDIR_QT		= $(QTDIR)/lib
+QMAKE_INCDIR_OPENGL	= /System/Library/Frameworks/OpenGL.framework/Headers \
+	/System/Library/Frameworks/AGL.framework/Headers/
+
+QMAKE_LINK		= $$QMAKE_CXX
+QMAKE_LINK_SHLIB	= $$QMAKE_CXX
+QMAKE_LFLAGS		=
+#QMAKE_LFLAGS_PREBIND    = -prebind -seg1addr 0x90000000
+QMAKE_LFLAGS_RELEASE	=
+QMAKE_LFLAGS_DEBUG	=
+QMAKE_LFLAGS_SHAPP	= -prebind
+QMAKE_LFLAGS_SHLIB	= -dynamiclib 
+QMAKE_LFLAGS_INCREMENTAL = -undefined suppress -flat_namespace
+QMAKE_LFLAGS_PLUGIN	= -bundle
+#QMAKE_LFLAGS_SONAME	= -install_name$${LITERAL_WHITESPACE}@executable_path/../Frameworks/
+QMAKE_LFLAGS_SONAME	= -install_name$${LITERAL_WHITESPACE}
+QMAKE_LFLAGS_THREAD	= 
+QMAKE_RPATH		= 
+
+QMAKE_LIBS_DYNLOAD	=
+QMAKE_LIBS_QT		= -lqt
+QMAKE_LIBS_QT_THREAD	= -lqt-mt
+QMAKE_LIBS_OPENGL	= -framework OpenGL -framework AGL
+QMAKE_LIBS_OPENGL_QT	= $$QMAKE_LIBS_OPENGL
+QMAKE_LIBS_THREAD	= 
+
+QMAKE_MOC		= $(QTDIR)/bin/moc
+QMAKE_UIC		= $(QTDIR)/bin/uic
+
+QMAKE_AR		= ar cq
+QMAKE_RANLIB		= ranlib -s
+
+QMAKE_TAR		= tar -cf
+QMAKE_GZIP		= gzip -9f
+
+QMAKE_COPY		= cp -f
+QMAKE_COPY_FILE		= $$QMAKE_COPY
+QMAKE_COPY_DIR		= $$QMAKE_COPY -r
+QMAKE_MOVE		= mv -f
+QMAKE_DEL_FILE		= rm -f
+QMAKE_DEL_DIR		= rmdir
+QMAKE_CHK_DIR_EXISTS	= test -d
+QMAKE_MKDIR		= mkdir -p
diff -uNr mkspecs/default/qplatformdefs.h mkspecs/default/qplatformdefs.h
--- mkspecs/default/qplatformdefs.h	Wed Dec 31 19:00:00 1969
+++ mkspecs/default/qplatformdefs.h	Tue May 13 03:08:28 2003
@@ -0,0 +1,84 @@
+#ifndef QPLATFORMDEFS_H
+#define QPLATFORMDEFS_H
+
+// Get Qt defines/settings
+
+#include "qglobal.h"
+
+// Set any POSIX/XOPEN defines at the top of this file to turn on specific APIs
+
+#include <unistd.h>
+
+
+// We are hot - unistd.h should have turned on the specific APIs we requested
+
+
+#ifdef QT_THREAD_SUPPORT
+#include <pthread.h>
+#endif
+
+#include <dirent.h>
+#include <fcntl.h>
+#include <grp.h>
+#include <pwd.h>
+#include <signal.h>
+#define QT_NO_LIBRARY_UNLOAD
+
+#include <sys/types.h>
+#include <sys/ioctl.h>
+#include <sys/ipc.h>
+#include <sys/time.h>
+#include <sys/shm.h>
+#include <sys/socket.h>
+#include <sys/stat.h>
+#include <sys/wait.h>
+
+// DNS header files are not fully covered by X/Open specifications.
+// In particular nothing is said about res_* :/
+// On BSDs header files <netinet/in.h> and <arpa/nameser.h> are not
+// included by <resolv.h>. Note that <arpa/nameser.h> must be included
+// before <resolv.h>.
+#include <netinet/in.h>
+#include <arpa/nameser.h>
+#include <resolv.h>
+
+
+#if !defined(QT_NO_COMPAT)
+#define QT_STATBUF		struct stat
+#define QT_STATBUF4TSTAT	struct stat
+#define QT_STAT			::stat
+#define QT_FSTAT		::fstat
+#define QT_STAT_REG		S_IFREG
+#define QT_STAT_DIR		S_IFDIR
+#define QT_STAT_MASK		S_IFMT
+#define QT_STAT_LNK		S_IFLNK
+#define QT_FILENO		fileno
+#define QT_OPEN			::open
+#define QT_CLOSE		::close
+#define QT_LSEEK		::lseek
+#define QT_READ			::read
+#define QT_WRITE		::write
+#define QT_ACCESS		::access
+#define QT_GETCWD		::getcwd
+#define QT_CHDIR		::chdir
+#define QT_MKDIR		::mkdir
+#define QT_RMDIR		::rmdir
+#define QT_OPEN_RDONLY		O_RDONLY
+#define QT_OPEN_WRONLY		O_WRONLY
+#define QT_OPEN_RDWR		O_RDWR
+#define QT_OPEN_CREAT		O_CREAT
+#define QT_OPEN_TRUNC		O_TRUNC
+#define QT_OPEN_APPEND		O_APPEND
+#endif
+
+#define QT_SIGNAL_RETTYPE	void
+#define QT_SIGNAL_ARGS		int
+#define QT_SIGNAL_IGNORE	(void (*)(int))1
+
+#define QT_SOCKLEN_T		int
+
+#define QT_SNPRINTF		::snprintf
+#define QT_VSNPRINTF		::vsnprintf
+
+
+#endif // QPLATFORMDEFS_H
diff -uNr mkspecs/macx-xlc/Info.plist.app mkspecs/macx-xlc/Info.plist.app
--- mkspecs/macx-xlc/Info.plist.app	Wed Dec 31 19:00:00 1969
+++ mkspecs/macx-xlc/Info.plist.app	Tue May 13 03:08:28 2003
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist SYSTEM "file://localhost/System/Library/DTDs/PropertyList.dtd">
+<plist version="0.9">
+<dict>
+	<key>CFBundleIconFile</key>
+	<string>@ICON@</string>
+	<key>CFBundlePackageType</key>
+	<string>APPL</string>
+        <key>CFBundleGetInfoString</key>
+	<string>Created by Qt/QMake</string>
+	<key>CFBundleSignature</key>
+	<string>ttxt</string>
+	<key>CFBundleExecutable</key>
+	<string>@EXECUTABLE@</string>
+	<key>NOTE</key>
+	<string>Please, do NOT change this file -- It was generated by Qt/QMake.</string>
+</dict>
+</plist>
diff -uNr mkspecs/macx-xlc/qmake.conf mkspecs/macx-xlc/qmake.conf
--- mkspecs/macx-xlc/qmake.conf	Wed Dec 31 19:00:00 1969
+++ mkspecs/macx-xlc/qmake.conf	Wed Sep  3 14:45:27 2003
@@ -0,0 +1,85 @@
+#
+# $Id: patch-05-xlc.macx,v 1.1 2003/09/03 20:26:44 ranger Exp $
+#
+# qmake configuration for macx-g++ (Mac OS X + command-line compiler)
+#
+
+MAKEFILE_GENERATOR	= UNIX
+TEMPLATE		= app
+CONFIG			+= qt warn_on release resource_fork incremental global_init_link_order lib_version_first plugin_no_soname link_prl
+QMAKE_INCREMENTAL_STYLE = sublibs
+
+QMAKE_CC		= xlc
+QMAKE_CC_THREAD		= xlc_r
+QMAKE_LEX		= flex
+QMAKE_LEXFLAGS		= 
+QMAKE_YACC		= yacc
+QMAKE_YACCFLAGS		= -d
+QMAKE_RESOURCE		= /Developer/Tools/Rez
+QMAKE_CFLAGS		= -qstrict
+QMAKE_CFLAGS_DEPS	= 
+QMAKE_CFLAGS_WARN_ON	= 
+QMAKE_CFLAGS_WARN_OFF	= 
+QMAKE_CFLAGS_RELEASE	= -O5
+QMAKE_CFLAGS_DEBUG	= -g
+QMAKE_CFLAGS_SHLIB	= 
+QMAKE_EXTENSION_SHLIB	= dylib
+QMAKE_CFLAGS_YACC	= 
+QMAKE_CFLAGS_THREAD	= -qthreaded
+
+QMAKE_CXX		= xlC
+QMAKE_CXX_THREAD	= xlC_r
+QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
+QMAKE_CXXFLAGS_DEPS	= $$QMAKE_CFLAGS_DEPS
+QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
+QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
+QMAKE_CXXFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
+QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
+QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
+QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
+
+QMAKE_LIBDIR		=
+QMAKE_INCDIR_QT		= $(QTDIR)/include
+QMAKE_LIBDIR_QT		= $(QTDIR)/lib
+QMAKE_INCDIR_OPENGL	= /System/Library/Frameworks/OpenGL.framework/Headers \
+	/System/Library/Frameworks/AGL.framework/Headers/
+
+QMAKE_LINK		= c++
+QMAKE_LINK_SHLIB	= c++
+QMAKE_LFLAGS		=
+#QMAKE_LFLAGS_PREBIND    = -prebind -seg1addr 0x90000000
+QMAKE_LFLAGS_RELEASE	=
+QMAKE_LFLAGS_DEBUG	=
+QMAKE_LFLAGS_SHAPP	= -prebind
+QMAKE_LFLAGS_SHLIB	= -dynamiclib 
+QMAKE_LFLAGS_INCREMENTAL = -undefined suppress -flat_namespace
+QMAKE_LFLAGS_PLUGIN	= -bundle
+#QMAKE_LFLAGS_SONAME	= -install_name$${LITERAL_WHITESPACE}@executable_path/../Frameworks/
+QMAKE_LFLAGS_SONAME	= -install_name$${LITERAL_WHITESPACE}
+QMAKE_LFLAGS_THREAD	= 
+QMAKE_RPATH		= 
+
+QMAKE_LIBS_DYNLOAD	=
+QMAKE_LIBS_QT		= -lqt
+QMAKE_LIBS_QT_THREAD	= -lqt-mt
+QMAKE_LIBS_OPENGL	= -framework OpenGL -framework AGL
+QMAKE_LIBS_OPENGL_QT	= $$QMAKE_LIBS_OPENGL
+QMAKE_LIBS_THREAD	= 
+
+QMAKE_MOC		= $(QTDIR)/bin/moc
+QMAKE_UIC		= $(QTDIR)/bin/uic
+
+QMAKE_AR		= ar cq
+QMAKE_RANLIB		= ranlib -s
+
+QMAKE_TAR		= tar -cf
+QMAKE_GZIP		= gzip -9f
+
+QMAKE_COPY		= cp -f
+QMAKE_COPY_FILE		= $$QMAKE_COPY
+QMAKE_COPY_DIR		= $$QMAKE_COPY -r
+QMAKE_MOVE		= mv -f
+QMAKE_DEL_FILE		= rm -f
+QMAKE_DEL_DIR		= rmdir
+QMAKE_CHK_DIR_EXISTS	= test -d
+QMAKE_MKDIR		= mkdir -p
diff -uNr mkspecs/macx-xlc/qplatformdefs.h mkspecs/macx-xlc/qplatformdefs.h
--- mkspecs/macx-xlc/qplatformdefs.h	Wed Dec 31 19:00:00 1969
+++ mkspecs/macx-xlc/qplatformdefs.h	Tue May 13 03:08:28 2003
@@ -0,0 +1,84 @@
+#ifndef QPLATFORMDEFS_H
+#define QPLATFORMDEFS_H
+
+// Get Qt defines/settings
+
+#include "qglobal.h"
+
+// Set any POSIX/XOPEN defines at the top of this file to turn on specific APIs
+
+#include <unistd.h>
+
+
+// We are hot - unistd.h should have turned on the specific APIs we requested
+
+
+#ifdef QT_THREAD_SUPPORT
+#include <pthread.h>
+#endif
+
+#include <dirent.h>
+#include <fcntl.h>
+#include <grp.h>
+#include <pwd.h>
+#include <signal.h>
+#define QT_NO_LIBRARY_UNLOAD
+
+#include <sys/types.h>
+#include <sys/ioctl.h>
+#include <sys/ipc.h>
+#include <sys/time.h>
+#include <sys/shm.h>
+#include <sys/socket.h>
+#include <sys/stat.h>
+#include <sys/wait.h>
+
+// DNS header files are not fully covered by X/Open specifications.
+// In particular nothing is said about res_* :/
+// On BSDs header files <netinet/in.h> and <arpa/nameser.h> are not
+// included by <resolv.h>. Note that <arpa/nameser.h> must be included
+// before <resolv.h>.
+#include <netinet/in.h>
+#include <arpa/nameser.h>
+#include <resolv.h>
+
+
+#if !defined(QT_NO_COMPAT)
+#define QT_STATBUF		struct stat
+#define QT_STATBUF4TSTAT	struct stat
+#define QT_STAT			::stat
+#define QT_FSTAT		::fstat
+#define QT_STAT_REG		S_IFREG
+#define QT_STAT_DIR		S_IFDIR
+#define QT_STAT_MASK		S_IFMT
+#define QT_STAT_LNK		S_IFLNK
+#define QT_FILENO		fileno
+#define QT_OPEN			::open
+#define QT_CLOSE		::close
+#define QT_LSEEK		::lseek
+#define QT_READ			::read
+#define QT_WRITE		::write
+#define QT_ACCESS		::access
+#define QT_GETCWD		::getcwd
+#define QT_CHDIR		::chdir
+#define QT_MKDIR		::mkdir
+#define QT_RMDIR		::rmdir
+#define QT_OPEN_RDONLY		O_RDONLY
+#define QT_OPEN_WRONLY		O_WRONLY
+#define QT_OPEN_RDWR		O_RDWR
+#define QT_OPEN_CREAT		O_CREAT
+#define QT_OPEN_TRUNC		O_TRUNC
+#define QT_OPEN_APPEND		O_APPEND
+#endif
+
+#define QT_SIGNAL_RETTYPE	void
+#define QT_SIGNAL_ARGS		int
+#define QT_SIGNAL_IGNORE	(void (*)(int))1
+
+#define QT_SOCKLEN_T		int
+
+#define QT_SNPRINTF		::snprintf
+#define QT_VSNPRINTF		::vsnprintf
+
+
+#endif // QPLATFORMDEFS_H
