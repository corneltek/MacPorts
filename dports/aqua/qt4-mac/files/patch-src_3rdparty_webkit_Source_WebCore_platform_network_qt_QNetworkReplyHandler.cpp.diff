--- src/3rdparty/webkit/Source/WebCore/platform/network/qt/QNetworkReplyHandler.orig	2013-06-07 07:16:56.000000000 +0200
+++ src/3rdparty/webkit/Source/WebCore/platform/network/qt/QNetworkReplyHandler.cpp	2013-10-28 17:59:45.000000000 +0100
@@ -234,8 +234,8 @@
 
     resetConnections();
     QNetworkReply* reply = m_reply;
-    m_reply = 0;
-    m_sniffer = 0;
+    m_reply = nullptr;
+    m_sniffer = nullptr;
 
     reply->setParent(0);
     return reply;
@@ -300,7 +300,7 @@
     Q_ASSERT(m_sniffer);
 
     m_sniffedMIMEType = m_sniffer->mimeType();
-    m_sniffer = 0;
+    m_sniffer = nullptr;
 
     emitMetaDataChanged();
 }
@@ -392,7 +392,7 @@
     else
         m_method = QNetworkAccessManager::CustomOperation;
 
-    QObject* originatingObject = 0;
+    QObject* originatingObject = nullptr;
     if (m_resourceHandle->getInternal()->m_context)
         originatingObject = m_resourceHandle->getInternal()->m_context->originatingObject();
 
@@ -417,7 +417,7 @@
         return 0;
 
     QNetworkReply* reply = m_replyWrapper->release();
-    m_replyWrapper = 0;
+    m_replyWrapper = nullptr;
     return reply;
 }
 
@@ -440,12 +440,12 @@
 
     ResourceHandleClient* client = m_resourceHandle->client();
     if (!client) {
-        m_replyWrapper = 0;
+        m_replyWrapper = nullptr;
         return;
     }
 
     if (m_replyWrapper->wasRedirected()) {
-        m_replyWrapper = 0;
+        m_replyWrapper = nullptr;
         m_queue.push(&QNetworkReplyHandler::start);
         return;
     }
@@ -465,7 +465,7 @@
         }
     }
 
-    m_replyWrapper = 0;
+    m_replyWrapper = nullptr;
 }
 
 void QNetworkReplyHandler::sendResponseIfNeeded()
@@ -539,7 +539,7 @@
                             newUrl.toString(),
                             QCoreApplication::translate("QWebPage", "Redirection limit reached"));
         client->didFail(m_resourceHandle, error);
-        m_replyWrapper = 0;
+        m_replyWrapper = nullptr;
         return;
     }
 
@@ -562,7 +562,7 @@
     if (wasAborted()) // Network error cancelled the request.
         return;
 
-    QObject* originatingObject = 0;
+    QObject* originatingObject = nullptr;
     if (m_resourceHandle->getInternal()->m_context)
         originatingObject = m_resourceHandle->getInternal()->m_context->originatingObject();
 
