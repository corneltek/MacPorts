--- project.pro.orig	2009-03-29 06:25:15.000000000 -0700
+++ project.pro	2016-06-04 07:52:41.000000000 -0700
@@ -2,11 +2,9 @@
 CONFIG += release qt thread
 DEFINES += QT_NO_DEBUG_OUTPUT
 
-# Assume openmp-capable g++ (>=4.2)
-QMAKE_CXXFLAGS += -funroll-loops -fstrength-reduce -fschedule-insns2 -felide-constructors -frerun-loop-opt -fexceptions -fno-strict-aliasing -fexpensive-optimizations -ffast-math -pipe -fopenmp -msse2
-QMAKE_LFLAGS += -fopenmp
-
-TARGET = qtpfsgui
+isEmpty(TARGET) {
+        error( "TARGET must be set before executing this script; fatal error, bailing out." )
+}
 
 MOC_DIR = generated_moc
 OBJECTS_DIR = generated_obj
@@ -187,12 +185,17 @@
 message("Qt4, OK")
 }
 
+########################################### MacPorts Location ###########################################
+isEmpty(LOCALSOFT) {
+        error( "LOCALSOFT must be set before executing this script; fatal error, bailing out." )
+}
+
 ########################################### EXIV2 ###########################################
 message ( "" )
 message ( "Detecting exiv2:" )
 #I think these are the only paths where we have to search for.
 #If your system is more exotic let me know.
-EXIV2IMAGEHPP = /usr/include/exiv2/image.hpp /usr/local/include/exiv2/image.hpp $$(LOCALSOFT)/include/exiv2/image.hpp 
+EXIV2IMAGEHPP = $$LOCALSOFT/include/exiv2/image.hpp 
 for(path, EXIV2IMAGEHPP) {
 	exists($$path) {
 		EXIV2PATH = $$dirname(path)
@@ -218,7 +221,7 @@
 message ( "Detecting OpenEXR:" )
 #I think these are the only paths where we have to search for.
 #If your system is more exotic let me know.
-OPENEXRHEADER = /usr/include/OpenEXR/ImfHeader.h /usr/local/include/OpenEXR/ImfHeader.h /usr/local/include/ilmbase/ImfHeader.h /usr/include/ilmbase/ImfHeader.h $$(LOCALSOFT)/include/OpenEXR/ImfHeader.h 
+OPENEXRHEADER = $$LOCALSOFT/include/OpenEXR/ImfHeader.h 
 for(path, OPENEXRHEADER) {
 	exists($$path) {
 		OPENEXRDIR = $$dirname(path)
@@ -244,7 +247,7 @@
 message ( "Detecting fftw3:" )
 #I think these are the only paths where we have to search for.
 #If your system is more exotic let me know.
-FFTW3HEADER = /usr/include/fftw3.h /usr/local/include/fftw3.h $$(LOCALSOFT)/include/fftw3.h
+FFTW3HEADER = $$LOCALSOFT/include/fftw3.h
 for(path, FFTW3HEADER) {
 	exists($$path) {
 		FFTW3DIR = $$dirname(path)
@@ -271,7 +274,7 @@
 message ( "Detecting libtiff:" )
 #I think these are the only paths where we have to search for.
 #If your system is more exotic let me know.
-LIBTIFFHEADER = /usr/include/tiffio.h /usr/local/include/tiffio.h $$(LOCALSOFT)/include/tiffio.h
+LIBTIFFHEADER = $$LOCALSOFT/include/tiffio.h
 for(path, LIBTIFFHEADER) {
 	exists($$path) {
 		LIBTIFFDIR = $$dirname(path)
@@ -295,7 +298,7 @@
 
 ############################## required by "make install" ########################################
 isEmpty(PREFIX) {
-        PREFIX = /usr/local
+        error( "PREFIX must be set before executing this script; fatal error, bailing out." )
 }
 isEmpty(I18NDIR) {
 	mac {
@@ -315,7 +318,7 @@
 	HTMLDIR = $${DOCDIR}
 }
 
-target.path      = $${PREFIX}/bin
+target.path      = $${APPLICATIONS_DIR}
 menu.files       = qtpfsgui.desktop
 menu.path        = $${PREFIX}/share/applications
 icon.files       = images/qtpfsgui.png
@@ -323,7 +326,7 @@
 htmls.files      = html
 htmls.path       = $$HTMLDIR
 i18n.files       = i18n/lang_de.qm i18n/lang_es.qm i18n/lang_it.qm i18n/lang_fr.qm i18n/lang_pl.qm i18n/lang_tr.qm i18n/lang_ru.qm i18n/lang_cs.qm
-i18n.path        = $$I18NDIR
+i18n.path        = $${APPLICATIONS_DIR}/$${TARGET}.app/Contents/Resources/i18n
 docs.files       = README LICENSE AUTHORS INSTALL Changelog
 docs.path        = $$DOCDIR
 
@@ -365,46 +368,8 @@
 #TODO we have to complete this.
 LIBS+=-lIlmThread
 
-# Enable universal (requires a universal Qt)? Default = non-universal
-# If you wish to build a Universal Binary please un-comment the following line
-#CONFIG += x86 ppc
-
-# Warn user what type of binary is being built and what the possible implications are
-contains(CONFIG, "x86"):contains(CONFIG, "ppc") {
-	message ("Building an OS X Universal Binary:")
-	message ("Please ensure all dependencies and Qt are also Universal")
-	message ("********************************************************************")
-} else {
-	# Test what architecture we are on (Intel or PPC)
-	# 'arch' returns "i386" on Intel-Tiger is this true on Intel-Leopard?
-	# What does 'arch' return on PPC machines? Presumably "ppc"?
-	MAC_ARCH = $$system(arch)
-	contains(MAC_ARCH, i386) {
-		message ("This is an Intel Mac - Building an Intel specific OS X binary")
-		message ("Please refer to the documentation if you require a Universal Binary")
-		message ("********************************************************************")
-		# Is this next line strictly necessary? gcc should compile for the correct architecture by default.
-		CONFIG += x86
-	} else {
-		message ("This is a PPC Mac - Building a PPC specific OS X binary")
-		message ("Please refer to the documentation if you require a Universal Binary")
-		message ("********************************************************************")
-		# Is this next line strictly necessary? gcc should compile for the correct architecture by default.
-		CONFIG += ppc
-	}
-}
-
 # We like to search the LOCALSOFT/lib explicitly on MacOSX
-LIBS += -L$$(LOCALSOFT)/lib
-# Libtiff depends on jpeg, but it is not searched for automatically on MacOSX
-LIBS += -ljpeg
-# Exiv also depend on libexpat and libiconv, so same as above:
-LIBS += -lexpat 
-LIBS += -liconv
-
-# for now, we disable openMP on MacOSX - have to wait for support in next
-# Xcode!
-QMAKE_CXXFLAGS -= -fopenmp
+LIBS += -L$$LOCALSOFT/lib
 }
 
 win32 {
