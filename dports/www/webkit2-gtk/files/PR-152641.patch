--- Source/JavaScriptCore/llvm/library/LLVMOverrides.cpp.orig	2015-10-27 03:17:11.000000000 -0700
+++ Source/JavaScriptCore/llvm/library/LLVMOverrides.cpp	2016-01-01 14:56:49.000000000 -0800
@@ -36,24 +36,5 @@ void (*g_llvmTrapCallback)(const char* m
 
 // If LLVM tries to raise signals, abort, or fail an assertion, then let
 // WebKit handle it instead of trapping.
-extern "C" int raise(int signal);
-extern "C" void __assert_rtn(const char* function, const char* filename, int lineNumber, const char* expression) NO_RETURN;
-extern "C" void abort(void) NO_RETURN;
-
-extern "C" int raise(int signal)
-{
-    g_llvmTrapCallback("raise(%d) called.", signal);
-    return 0;
-}
-extern "C" void __assert_rtn(const char* function, const char* filename, int lineNumber, const char* expression)
-{
-    if (function)
-        g_llvmTrapCallback("Assertion failed: (%s), function %s, file %s, line %d.", expression, function, filename, lineNumber);
-    g_llvmTrapCallback("Assertion failed: (%s), file %s, line %d.", expression, filename, lineNumber);
-}
-extern "C" void abort(void)
-{
-    g_llvmTrapCallback("abort() called.");
-}
 
 #endif // HAVE(LLVM)
