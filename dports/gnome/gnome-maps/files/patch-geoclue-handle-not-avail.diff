--- src/geoclue.js.orig	2014-07-24 20:26:13.000000000 +0200
+++ src/geoclue.js	2014-07-24 20:27:24.000000000 +0200
@@ -81,7 +81,7 @@
     Name: 'Geoclue',
 
     overrideLocation: function(location) {
-        if (this._locationUpdatedId > 0) {
+        if (this._clientProxy && this._locationUpdatedId > 0) {
             this._clientProxy.disconnectSignal(this._locationUpdatedId);
             this._locationUpdatedId = 0;
             this._clientProxy.StopRemote(function(result, e) {
@@ -95,6 +95,9 @@
     },
 
     findLocation: function() {
+        if (!this._clientProxy)
+            return;
+
         this._locationUpdatedId =
             this._clientProxy.connectSignal("LocationUpdated",
                                             this._onLocationUpdated.bind(this));
@@ -118,11 +121,16 @@
             this.userSetLocation = Application.settings.get('last-location-user-set');
         }
 
-        this._managerProxy = new ManagerProxy(Gio.DBus.system,
-                                              "org.freedesktop.GeoClue2",
-                                              "/org/freedesktop/GeoClue2/Manager");
-
-        this._managerProxy.GetClientRemote(this._onGetClientReady.bind(this));
+        try {
+            this._managerProxy = new ManagerProxy(Gio.DBus.system,
+                                                  "org.freedesktop.GeoClue2",
+                                                  "/org/freedesktop/GeoClue2/Manager");
+
+            this._managerProxy.GetClientRemote(this._onGetClientReady.bind(this));
+        } catch (e) {
+            Utils.debug("Failed to connect to GeoClue2 service: " + e.message);
+            log('Connection with GeoClue failed, we are not able to find your location!');
+        }
     },
 
     _onGetClientReady: function(result, e) {
