--- Makefile.orig	2013-10-03 16:16:08.000000000 -0700
+++ Makefile	2013-11-17 11:51:19.000000000 -0800
@@ -24,14 +24,17 @@
 BUILD_RELEASE=1
 BUILD_DIR=gexiv2
 LIB=lib
+LIBTOOL=libtool
+PYTHON2=python2
+PYTHON3=python3
 
 -include configure.mk
 
 # Used to determine where Python wants the .gi file to be installed ... if Python is not installed,
-# PYTHON2 and PYTHON3 will be empty
+# PYTHON2_OVERRIDES_DIR and PYTHON3_OVERRIDES_DIR will be empty
 PYTHON="import gi; print(gi._overridesdir)"
-PYTHON2=$(shell python2 -c $(PYTHON) 2> /dev/null)
-PYTHON3=$(shell python3 -c $(PYTHON) 2> /dev/null)
+PYTHON2_OVERRIDES_DIR=$(shell $(PYTHON2) -c $(PYTHON) 2> /dev/null)
+PYTHON3_OVERRIDES_DIR=$(shell $(PYTHON3) -c $(PYTHON) 2> /dev/null)
 
 TYPELIB=`pkg-config gobject-introspection-no-export-1.0 --variable typelibdir`
 
@@ -133,7 +136,7 @@
 endif
 endif
 
-CFLAGS += $(REQUIRED_CFLAGS)
+#CFLAGS += $(REQUIRED_CFLAGS)
 
 all: $(LIBRARY_BIN) $(PC_FILE) $(TYPELIB_FILE)
 
@@ -152,7 +155,7 @@
 		$(EXPANDED_INSTALLED_HEADER_FILES)      \
 		$(EXPANDED_SRC_FILES)                   \
 		--library $(LIBRARY_BIN)                \
-		$(LIBTOOL)                              \
+		--libtool=$(LIBTOOL)                              \
 		--pkg=gobject-2.0
 
 clean:
@@ -181,7 +184,7 @@
 .PHONY: install
 install:
 	@mkdir -p $(DESTDIR)$(PREFIX)/$(LIB)
-	libtool --mode=install $(INSTALL_PROGRAM) $(LIBRARY).la $(DESTDIR)$(PREFIX)/$(LIB)
+	$(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $(LIBRARY).la $(DESTDIR)$(PREFIX)/$(LIB)
 	@mkdir -p $(DESTDIR)$(PREFIX)/include/$(PKGNAME)
 	$(INSTALL_DATA) $(EXPANDED_INSTALLED_HEADER_FILES) $(DESTDIR)$(PREFIX)/include/$(PKGNAME)
 	@mkdir -p $(DESTDIR)$(PREFIX)/$(LIB)/pkgconfig
@@ -194,13 +197,13 @@
 	@mkdir -p $(DESTDIR)$(TYPELIB)
 	$(INSTALL_DATA) GExiv2-$(GIR_VERSION).typelib $(DESTDIR)$(TYPELIB)
 # No introspection, no .gi file for the Python module to call into
-ifneq "$(PYTHON2)" ""
-	@mkdir -p $(DESTDIR)$(PYTHON2)
-	$(INSTALL_DATA) GExiv2.py $(DESTDIR)$(PYTHON2)
-endif
-ifneq "$(PYTHON3)" ""
-	@mkdir -p $(DESTDIR)$(PYTHON3)
-	$(INSTALL_DATA) GExiv2.py $(DESTDIR)$(PYTHON3)
+ifneq "$(PYTHON2_OVERRIDES_DIR)" ""
+	@mkdir -p $(DESTDIR)$(PYTHON2_OVERRIDES_DIR)
+	$(INSTALL_DATA) GExiv2.py $(DESTDIR)$(PYTHON2_OVERRIDES_DIR)
+endif
+ifneq "$(PYTHON3_OVERRIDES_DIR)" ""
+	@mkdir -p $(DESTDIR)$(PYTHON3_OVERRIDES_DIR)
+	$(INSTALL_DATA) GExiv2.py $(DESTDIR)$(PYTHON3_OVERRIDES_DIR)
 endif
 endif
 
@@ -209,18 +212,18 @@
 	$(INSTALL_DATA) $(VAPI_FILE) $(DESTDIR)$(PREFIX)/share/vala/vapi
 
 uninstall:
-	libtool --mode=uninstall rm -f $(DESTDIR)$(PREFIX)/$(LIB)/$(LIBRARY).la
+	$(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(PREFIX)/$(LIB)/$(LIBRARY).la
 	rm -rf $(DESTDIR)$(PREFIX)/include/$(PKGNAME)
 	rm -f $(DESTDIR)$(PREFIX)/$(LIB)/pkgconfig/$(PKGNAME).pc
 	rm -f $(DESTDIR)$(PREFIX)/share/vala/vapi/$(PKGNAME).vapi
 ifdef ENABLE_INTROSPECTION
 	rm -f $(DESTDIR)$(PREFIX)/share/gir-1.0/GExiv2-$(GIR_VERSION).gir
 	rm -f $(DESTDIR)$(TYPELIB)/GExiv2-$(GIR_VERSION).typelib
-ifneq "$(PYTHON2)" ""
-	rm -rf $(DESTDIR)$(PYTHON2)/GExiv2.py
+ifneq "$(PYTHON2_OVERRIDES_DIR)" ""
+	rm -rf $(DESTDIR)$(PYTHON2_OVERRIDES_DIR)/GExiv2.py
 endif
-ifneq "$(PYTHON3)" ""
-	rm -rf $(DESTDIR)$(PYTHON3)/GExiv2.py
+ifneq "$(PYTHON3_OVERRIDES_DIR)" ""
+	rm -rf $(DESTDIR)$(PYTHON3_OVERRIDES_DIR)/GExiv2.py
 endif
 endif
 
@@ -236,8 +239,8 @@
 $(EXPANDED_LO_FILES): $(BUILD_DIR)/%.lo: gexiv2/%.cpp $(EXPANDED_HEADER_FILES) $(CONFIG_IN) Makefile
 	@pkg-config --print-errors --exists '$(EXT_PKG_VERSIONS)'
 	@mkdir -p $(BUILD_DIR)
-	libtool --mode=compile --tag=CC $(CXX) -c $(EXT_PKGS_CFLAGS) $(CFLAGS) $(CPPFLAGS) -I. -o $@ $<
+	$(LIBTOOL) --mode=compile --tag=CC $(CXX) -c $(EXT_PKGS_CFLAGS) $(CFLAGS) $(CPPFLAGS) -I. -o $@ $<
 
 $(LIBRARY_BIN): $(EXPANDED_LO_FILES)
-	libtool --mode=link --tag=CC $(CXX) -rpath $(PREFIX)/$(LIB) $(EXPANDED_LO_FILES) $(EXT_PKGS_LDFLAGS) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -version-info $(VERSION_INFO) -o $(LIBRARY_BIN)
+	$(LIBTOOL) --mode=link --tag=CC $(CXX) -rpath $(PREFIX)/$(LIB) $(EXPANDED_LO_FILES) $(EXT_PKGS_LDFLAGS) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -version-info $(VERSION_INFO) -o $(LIBRARY_BIN)
 
