From df750c28b6f7258dd4c3037e1132c81300b8cdfa Mon Sep 17 00:00:00 2001
From: Moritz Bunkus <moritz@bunkus.org>
Date: Sun, 14 Jul 2013 17:25:42 +0200
Subject: [PATCH] Fix compilation with clang/libc++ on FreeBSD

On FreeBSD the high_resolution_clock is an alias for the steady_clock
-- which doesn't support converting into time_t. As we only need a
precision of seconds for outputting timestamps using system_clock
instead is enough.
---
 src/common/logger.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/common/logger.cpp b/src/common/logger.cpp
index 7f6e5f2..04251d2 100644
--- a/src/common/logger.cpp
+++ b/src/common/logger.cpp
@@ -20,7 +20,7 @@
 
 logger_cptr logger_c::s_default_logger;
 
-static auto s_program_start_time = std::chrono::high_resolution_clock::now();
+static auto s_program_start_time = std::chrono::system_clock::now();
 
 logger_c::logger_c(bfs::path const &file_name)
   : m_file_name(file_name)
@@ -41,9 +41,9 @@
     mm_text_io_c out(new mm_file_io_c(m_file_name.string(), bfs::exists(m_file_name) ? MODE_WRITE : MODE_CREATE));
     out.setFilePointer(0, seek_end);
 
-    auto now  = std::chrono::high_resolution_clock::now();
+    auto now  = std::chrono::system_clock::now();
     auto diff = now - s_program_start_time;
-    auto tnow = std::chrono::high_resolution_clock::to_time_t(now);
+    auto tnow = std::chrono::system_clock::to_time_t(now);
 
     // 2013-03-02 15:42:32
     char timestamp[30];
-- 
1.8.1.6

