Fix https://github.com/mbunkus/mkvtoolnix/issues/1175
--- src/common/command_line.cpp.orig
+++ src/common/command_line.cpp
@@ -291,6 +291,7 @@ handle_common_cli_args(std::vector<std::string> &args,
     } else if ((args[i] == "-h") || (args[i] == "-?") || (args[i] == "--help"))
       usage();
 
+#if 0
 #if defined(HAVE_CURL_EASY_H)
     else if (args[i] == "--check-for-updates") {
       mtx_release_version_t rel = get_latest_release_version();
@@ -310,6 +311,7 @@ handle_common_cli_args(std::vector<std::string> &args,
       mxexit(rel.current_version < rel.latest_source ? 1 : 0);
     }
 #endif  // defined(HAVE_CURL_EASY_H)
+#endif
 
     else
       ++i;
Fix https://github.com/mbunkus/mkvtoolnix/issues/1176
--- src/common/version.cpp.orig
+++ src/common/version.cpp
@@ -228,7 +228,7 @@ get_latest_release_version() {
     std::stringstream urls;
     brng::for_each(release.urls, [&](std::pair<std::string, std::string> const &kv) { urls << " " << kv.first << ":" << kv.second; });
     mxdebug(boost::format("update check: current %1% latest source %2% latest winpre %3% URLs%4%\n")
-            % release.current_version.to_string() % release.latest_source.to_string() % release.latest_windows_build.to_string() % urls);
+            % release.current_version.to_string() % release.latest_source.to_string() % release.latest_windows_build.to_string() % urls.str());
   }
 
   return release;
