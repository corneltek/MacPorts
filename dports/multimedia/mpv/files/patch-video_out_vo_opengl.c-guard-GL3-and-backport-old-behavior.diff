--- video/out/vo_opengl.c.orig
+++ video/out/vo_opengl.c
@@ -69,6 +69,9 @@ struct gl_priv {
     int use_gl_debug;
     int allow_sw;
     int swap_interval;
+#if MAC_OS_X_VERSION_MIN_REQUIRED < 1070
+    int current_swap_interval;
+#endif
     int dwm_flush;
     int opt_vsync_fences;
 
@@ -83,8 +86,10 @@ struct gl_priv {
     int last_pattern;
     int matches, mismatches;
 
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 1070
     GLsync vsync_fences[NUM_VSYNC_FENCES];
     int num_vsync_fences;
+#endif
 };
 
 static void resize(struct gl_priv *p)
@@ -124,13 +129,21 @@ static void draw_frame(struct vo *vo, st
     struct gl_priv *p = vo->priv;
     GL *gl = p->gl;
 
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 1070
     if (gl->FenceSync && p->num_vsync_fences < p->opt_vsync_fences) {
         GLsync fence = gl->FenceSync(GL_SYNC_GPU_COMMANDS_COMPLETE, 0);;
         if (fence)
             p->vsync_fences[p->num_vsync_fences++] = fence;
     }
+#endif
 
     gl_video_render_frame(p->renderer, frame, 0);
+#if MAC_OS_X_VERSION_MIN_REQUIRED < 1070
+    // The playloop calls this last before waiting some time until it decides
+    // to call flip_page(). Tell OpenGL to start execution of the GPU commands
+    // while we sleep (this happens asynchronously).
+    gl->Flush();
+#endif
 
     if (p->use_glFinish)
         gl->Finish();
@@ -167,11 +180,13 @@ static void flip_page(struct vo *vo)
             p->opt_pattern[0] = 0;
         }
     }
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 1070
     while (p->opt_vsync_fences > 0 && p->num_vsync_fences >= p->opt_vsync_fences) {
         gl->ClientWaitSync(p->vsync_fences[0], GL_SYNC_FLUSH_COMMANDS_BIT, 1e9);
         gl->DeleteSync(p->vsync_fences[0]);
         MP_TARRAY_REMOVE_AT(p->vsync_fences, p->num_vsync_fences, 0);
     }
+#endif
 }
 
 static int query_format(struct vo *vo, int format)
