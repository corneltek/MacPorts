# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem      1.0

name            unrar
set my_name     ${name}src
version         4.1.4
categories      archivers
license         Restrictive/Distributable
platforms       darwin freebsd
maintainers     nomaintainer
description     Extract, view & test RAR archives

long_description \
    The unRAR utility is a minor part of the RAR archiver and \
    contains RAR uncompression algorithm. unRAR requires very \
    small volume of memory to operate.

homepage        http://www.rarlab.com/
master_sites    ${homepage}rar/
distname        ${my_name}-${version}

checksums           rmd160  0bb200c01f665142b7581b1b40ef1047dca13c57 \
                    sha256  705d93285fcd3b9c11f68e52d96395d942bf3c20172dcee14f0d78f1fee57361

patchfiles      patch-makefile.unix.diff

worksrcdir      ${name}

use_configure   no

set CXXFLAGS        ${configure.cxxflags}
set LDFLAGS         ${configure.ldflags}
if {[variant_isset universal]} {
    append CXXFLAGS    " ${configure.universal_cxxflags}"
    append LDFLAGS     " ${configure.universal_ldflags}"
} else {
    append CXXFLAGS    " ${configure.cxx_archflags}"
    append LDFLAGS     " ${configure.cc_archflags}"
}

if {[tbool configure.ccache]} {
    configure.cxx "ccache ${configure.cxx}"
}

build.env-append CXX="[join ${configure.cxx} " "]"
build.env-append CXXFLAGS="${CXXFLAGS}"
build.env-append LDFLAGS="${LDFLAGS}"
build.args      -f makefile.unix

destroot {
	set docdir ${prefix}/share/doc/${name}

	xinstall -d ${destroot}${docdir}
	xinstall ${worksrcpath}/${name} ${destroot}${prefix}/bin
	xinstall -m 0644 -W ${worksrcpath} license.txt readme.txt ${destroot}${docdir}
}

variant universal {}

livecheck.type  regex
livecheck.url   ${homepage}rar_add.htm
livecheck.regex ${my_name}-(\\d+(?:\\.\\d+)*)
