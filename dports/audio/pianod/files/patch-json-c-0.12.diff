Fix build with json-c 0.12+
http://lists.deviousfish.com/pipermail/pianod-deviousfish.com/2014q2/000590.html
--- configure.ac.orig	2014-04-20 05:41:25.000000000 -0500
+++ configure.ac	2014-06-01 04:18:33.000000000 -0500
@@ -37,7 +37,7 @@
 	[AC_MSG_WARN([No pkg-config for libao])])
 PKG_CHECK_MODULES([mad], [mad],,
 	[AC_MSG_WARN([No pkg-config for libmad])])
-PKG_CHECK_MODULES([json], [json],,
+PKG_CHECK_MODULES([json], [json-c],,
 	[AC_MSG_WARN([No pkg-config for libjson (aka libjson0, json-c)])])
 
 # Network communication stuff:
@@ -46,12 +46,8 @@
 AC_CHECK_LIB([gnutls], [gnutls_record_recv],,
 	[AC_MSG_ERROR([Cannot find required library: libgnutls (aka gnutls)],1)])
 
-# Bloody json library may be linked via -ljson, or -ljson-c depending on
-# the platform.  Try both.
-AC_CHECK_LIB([json], [json_object_new_string],,
-	[AC_CHECK_LIB([json-c], [json_object_new_string],,
-		[AC_MSG_ERROR([Cannot find required library: libjson (aka libjson0, json-c)])])
-	])
+AC_CHECK_LIB([json-c], [json_object_new_string],,
+	[AC_MSG_ERROR([Cannot find required library: libjson-c],1)])
 
 
 # Audio-related libraries:
@@ -130,12 +126,9 @@
 
 
 # Checks for header files.
-AC_CHECK_HEADERS([arpa/inet.h fcntl.h crypt.h gcrypt.h limits.h netdb.h netinet/in.h stdint.h stdlib.h string.h strings.h sys/socket.h unistd.h json/json.h json.h])
+AC_CHECK_HEADERS([arpa/inet.h fcntl.h crypt.h gcrypt.h limits.h netdb.h netinet/in.h stdint.h stdlib.h string.h strings.h sys/socket.h unistd.h json-c/json.h])
 
 
-AM_CONDITIONAL([HAVE_JSON_JSON_H],[test "$ac_cv_header_json_json_h" = 'yes'])
-AM_CONDITIONAL([HAVE_JSON_H],[test "$ac_cv_header_json_h" = 'yes'])
-
 # Checks for typedefs, structures, and compiler characteristics.
 AC_HEADER_STDBOOL
 AC_C_INLINE
--- src/libpiano/Makefile.am.orig	2013-09-17 22:49:05.000000000 -0500
+++ src/libpiano/Makefile.am	2014-06-01 04:22:33.000000000 -0500
@@ -8,17 +8,7 @@
 request_assert          = -DNDEBUG
 endif
 
-# This contortion is necessary to minimize library customizations.
-# Add defines to the command line since the library reads its
-# private config.h, not the main one from configure.
-if HAVE_JSON_JSON_H
-have_json_json_h	= -DHAVE_JSON_JSON_H=1
-endif
-if HAVE_JSON_H
-have_json_h		= -DHAVE_JSON_H=1
-endif
-
-libpiano_a_CPPFLAGS	= $(json_CFLAGS) -I../include -DGCRYPT_NO_DEPRECATED $(request_assert) $(have_json_json_h) $(have_json_h)
+libpiano_a_CPPFLAGS	= $(json_CFLAGS) -I../include -DGCRYPT_NO_DEPRECATED $(request_assert)
 libpiano_a_SOURCES	= crypt.c piano.c request.c response.c list.c \
 			  config.h piano.h crypt.h piano_private.h
 
--- src/libpiano/request.c.orig	2014-03-17 18:54:27.000000000 -0500
+++ src/libpiano/request.c	2014-06-01 04:12:38.000000000 -0500
@@ -26,14 +26,7 @@
 #define _DARWIN_C_SOURCE /* strdup() on OS X */
 #endif
 
-#ifdef HAVE_JSON_JSON_H
-#include <json/json.h>
-#elif defined (HAVE_JSON_H)
 #include <json.h>
-#else
-#error json library not found.
-#endif
-
 #include <assert.h>
 #include <stdio.h>
 #include <string.h>
--- src/libpiano/response.c.orig	2013-11-12 14:16:57.000000000 -0600
+++ src/libpiano/response.c	2014-06-01 04:13:00.000000000 -0500
@@ -26,14 +26,7 @@
 #define _DARWIN_C_SOURCE /* strdup() on OS X */
 #endif
 
-#ifdef HAVE_JSON_JSON_H
-#include <json/json.h>
-#elif defined (HAVE_JSON_H)
 #include <json.h>
-#else
-#error json library not found.
-#endif
-
 #include <string.h>
 #include <assert.h>
 #include <time.h>
