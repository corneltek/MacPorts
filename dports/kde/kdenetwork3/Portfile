# $Id$

#Synced with Fink, revision 1.27

PortSystem 1.0

name		kdenetwork3
version		3.5.10
revision        2
set kdeadmin	kde-admindir-1502
categories	kde kde3
license		GPL-2+ Artistic-1
maintainers	nomaintainer
description	KDE network tools. \
		NB No KDE sound support.
long_description ${description}
platforms	darwin
homepage	http://www.kde.org/
master_sites	kde:stable/${version}/src/:kde \
		http://ranger.users.finkproject.org/distfiles/kde-admindir/:admin \
		http://ranger.befunk.com/fink/kde-admindir/:admin \
		http://astrange.ithinksw.net/~astrange/ranger-fink/kde-admindir/:admin \
		http://www.southofheaven.net/befunk/kde-admindir/:admin
use_bzip2	yes
distname	kdenetwork-${version}
distfiles	${distname}.tar.bz2:kde \
		${kdeadmin}.tar.bz2:admin
dist_subdir     kde3
depends_build	port:autoconf263 \
		port:unsermake
depends_lib	port:kdebase3 \
		port:openslp \
                port:xorg-libXxf86vm
#		port:ekg
#		port:gtk1
#		port:qca
#		port:xmms
#               port:bind6

# what about libgadu?

checksums	${distname}.tar.bz2 md5 634b2e914661faebae79d95dcc6c5bfa \
		${kdeadmin}.tar.bz2 md5 92a60282c1d81f38835ce7d495255cc3

extract.only	${distname}.tar.bz2
post-extract	{ system "cd ${worksrcpath} && bzcat -dc ${distpath}/${kdeadmin}.tar.bz2 | tar xf -" }

patchfiles	kdenetwork3.patch
patch		{
		foreach f $patchfiles {
		    system "cd ${worksrcpath} && sed -e 's,@FINKPREFIX@,${prefix},g' ${filespath}/${f} | patch -p1"
		}
		system "perl -pi -e 's,-O2,-Os,g; s,doc/HTML,doc/kde,g; s,/usr/share/doc/packages/qt3/html,${prefix}/share/doc/qt3/html,g;' ${worksrcpath}/admin/*"
}
post-patch	{
		reinplace "s|/lib/freetype219||g" ${worksrcpath}/environment-helper.sh
		reinplace "s|--with-ssl-dir=/usr|--with-ssl-dir=\$PREFIX|g" ${worksrcpath}/environment-helper.sh
		reinplace "s|HOME=/tmp|HOME=${workpath}|g" ${worksrcpath}/environment-helper.sh
		reinplace "s|/tmp/buildlog|${workpath}/buildlog|g" ${worksrcpath}/build-helper.sh
		foreach f {CompileScript.sh InstallScript.sh} {
		    copy ${filespath}/${f} ${worksrcpath}
		    reinplace "s|%p|${prefix}|g" ${worksrcpath}/${f}
		    reinplace "s|%N|${name}|g" ${worksrcpath}/${f}
		    reinplace "s|%v|${version}|g" ${worksrcpath}/${f}
		    reinplace "s|%r|${revision}|g" ${worksrcpath}/${f}
		    reinplace "s|%c|${configure.args}|g" ${worksrcpath}/${f}
		    reinplace "s|%d|${destroot}|g" ${worksrcpath}/${f}
		    reinplace "s|%i|${destroot}${prefix}|g" ${worksrcpath}/${f}
		    file attributes ${worksrcpath}/${f} -permissions 0755
		}
}

configure.args	--disable-jingle --with-distribution='MacPorts/Mac OS X' --without-arts
# --with-libgadu-libs=${prefix}/lib --with-libgadu-includes=${prefix}/include

use_configure       no

use_parallel_build  yes
build.env           MAKEFLAGS="-j${build.jobs}" AUTOCONF=autoconf263
build.cmd           ./CompileScript.sh

destroot.cmd        ./InstallScript.sh
post-destroot	{
		xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}
		xinstall -m 644 -W ${worksrcpath} AUTHORS COPYING INSTALL README ${destroot}${prefix}/share/doc/${name}
}

universal_variant	no

platform darwin 8 {
    post-patch {
        # Allow building on Tiger. (Ticket #19731)
        reinplace "s| int _maxGL;| GLint _maxGL;|" ${worksrcpath}/kopete/libkopete/avdevice/qvideostream.cpp
    }
}

livecheck.type	none

