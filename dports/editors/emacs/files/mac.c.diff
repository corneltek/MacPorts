Index: src/mac.c
===================================================================
RCS file: /cvs-latest/emacs/emacs/src/mac.c,v
retrieving revision 1.18
diff -u -r1.18 mac.c
--- src/mac.c	22 Nov 2003 23:00:59 -0000	1.18
+++ src/mac.c	12 Dec 2003 20:26:44 -0000
@@ -2718,6 +2718,105 @@
 }
 
 
+/* set interprogram-paste-function to mac-paste-unicode-function in mac-win.el
+   to enable Emacs to obtain the contents of the Mac clipboard. */
+DEFUN ("mac-paste-unicode-function", Fmac_paste_unicode_function, Smac_paste_unicode_function, 0, 0, 0,
+       doc: /* Return the contents of the Mac clipboard as a string.  */)
+     ()
+{
+#if TARGET_API_MAC_CARBON
+  ScrapRef scrap;
+  ScrapFlavorFlags sff;
+  Size s;
+  int i;
+  char *data;
+
+  if (GetCurrentScrap (&scrap) != noErr)
+    return Qnil;
+
+  if (GetScrapFlavorFlags (scrap, kScrapFlavorTypeUnicode, &sff) != noErr)
+    return Qnil;
+
+  if (GetScrapFlavorSize (scrap, kScrapFlavorTypeUnicode, &s) != noErr)
+    return Qnil;
+
+  if ((data = (char*) alloca (s)) == NULL)
+    return Qnil;
+
+  if (GetScrapFlavorData (scrap, kScrapFlavorTypeUnicode, &s, data) != noErr
+      || s == 0)
+    return Qnil;
+
+  return make_string (data, s);
+#else /* not TARGET_API_MAC_CARBON */
+  Lisp_Object value;
+  Handle my_handle;
+  long scrap_offset, rc, i;
+
+  my_handle = NewHandle (0);  /* allocate 0-length data area */
+
+  rc = GetScrap (my_handle, 'TEXT', &scrap_offset);
+  if (rc < 0)
+    return Qnil;
+
+  HLock (my_handle);
+
+  /* Emacs expects clipboard contents have Unix-style eol's */
+  for (i = 0; i < rc; i++)
+    if ((*my_handle)[i] == '\r')
+      (*my_handle)[i] = '\n';
+
+  value = make_string (*my_handle, rc);
+
+  HUnlock (my_handle);
+
+  DisposeHandle (my_handle);
+
+  return value;
+#endif /* not TARGET_API_MAC_CARBON */
+}
+
+
+/* set interprogram-cut-function to mac-cut-function in mac-win.el
+   to enable Emacs to write the top of the kill-ring to the Mac clipboard. */
+DEFUN ("mac-cut-unicode-function", Fmac_cut_unicode_function, Smac_cut_unicode_function, 1, 2, 0,
+       doc: /* Put the value of the string parameter to the Mac clipboard.  */)
+  (value, push)
+    Lisp_Object value, push;
+{
+  char *buf;
+  int len, i;
+
+  /* fixme: ignore the push flag for now */
+
+  CHECK_STRING (value);
+
+  len = SCHARS (value);
+  buf = (char *) alloca (len+1);
+  bcopy (SDATA (value), buf, len);
+  buf[len] = '\0';
+
+#if TARGET_API_MAC_CARBON
+  {
+    ScrapRef scrap;
+    ClearCurrentScrap ();
+    if (GetCurrentScrap (&scrap) != noErr)
+      error ("cannot get current scrap");
+
+    if (PutScrapFlavor (scrap, kScrapFlavorTypeUnicode, kScrapFlavorMaskNone, len,
+			buf) != noErr)
+      error ("cannot put to scrap");
+  }
+#else /* not TARGET_API_MAC_CARBON */
+  ZeroScrap ();
+  PutScrap (len, 'TEXT', buf);
+#endif /* not TARGET_API_MAC_CARBON */
+
+  return Qnil;
+}
+
+
+
 DEFUN ("x-selection-exists-p", Fx_selection_exists_p, Sx_selection_exists_p,
        0, 1, 0,
        doc: /* Whether there is an owner for the given X Selection.
@@ -2743,7 +2842,7 @@
       ScrapFlavorFlags sff;
 
       if (GetCurrentScrap (&scrap) == noErr)
-        if (GetScrapFlavorFlags (scrap, kScrapFlavorTypeText, &sff) == noErr)
+        if (GetScrapFlavorFlags (scrap, kScrapFlavorTypeText, &sff) == noErr || GetScrapFlavorFlags (scrap, kScrapFlavorTypeUnicode, &sff) == noErr)
           val = Qt;
 #else /* not TARGET_API_MAC_CARBON */
       Handle my_handle;
@@ -2763,6 +2862,8 @@
   return Qnil;
 }
 
+
+
 #ifdef MAC_OSX
 #undef select
 
@@ -2997,6 +3098,9 @@
 
   defsubr (&Smac_paste_function);
   defsubr (&Smac_cut_function);
+  defsubr (&Smac_paste_unicode_function);
+  defsubr (&Smac_cut_unicode_function);
+
   defsubr (&Sx_selection_exists_p);
 
   defsubr (&Sdo_applescript);
