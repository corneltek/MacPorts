Adding missing PHP 5.6 opcodes.
https://github.com/derickr/vld/commit/28c5d156fe21dd9e3ddcd318b0bf7dd3b387a28a
Replace IS_CONSTANT_ARRAY with IS_CONSTANT_AST for PHP 5.6 and later.
https://github.com/derickr/vld/commit/d5880af0a6a1532857933d920774de4b1715ea8a
--- srm_oparray.c.orig
+++ srm_oparray.c
@@ -232,6 +232,9 @@ static const op_usage opcodes[] = {
 	/*  161 */	{ "GENERATOR_RETURN", NONE_USED },
 	/*  162 */	{ "FAST_CALL", OP1_USED },
 	/*  163 */	{ "FAST_RET", NONE_USED },
+	/*  164 */	{ "ZEND_RECV_VARIADIC", ALL_USED },
+	/*  165 */	{ "POW", ALL_USED },
+	/*  166 */	{ "POW_ASSIGN", ALL_USED | EXT_VAL },
 #endif
 };
 
@@ -319,10 +319,17 @@ static inline int vld_dump_zval_constant(zvalue_value value)
 	return vld_printf (stderr, "<const:'%s'>", value.str.val);
 }
 
+#if PHP_VERSION_ID >= 50600
+static inline int vld_dump_zval_constant_ast(zvalue_value value)
+{
+	return vld_printf (stderr, "<const ast>");
+}
+#else
 static inline int vld_dump_zval_constant_array(zvalue_value value)
 {
 	return vld_printf (stderr, "<const array>");
 }
+#endif
 
 
 int vld_dump_zval (zval val)
@@ -337,7 +344,11 @@ int vld_dump_zval (zval val)
 		case IS_BOOL:           return vld_dump_zval_bool (val.value);
 		case IS_RESOURCE:       return vld_dump_zval_resource (val.value);
 		case IS_CONSTANT:       return vld_dump_zval_constant (val.value);
+#if PHP_VERSION_ID >= 50600
+		case IS_CONSTANT_AST:   return vld_dump_zval_constant_ast (val.value);
+#else
 		case IS_CONSTANT_ARRAY: return vld_dump_zval_constant_array (val.value);
+#endif
 #if PHP_VERSION_ID >= 60000
 		case IS_UNICODE:        return vld_dump_zval_unicode (val.value);
 #endif
