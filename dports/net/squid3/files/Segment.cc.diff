--- src/ipc/mem/Segment.cc.orig	2015-02-18 23:17:02.000000000 +1100
+++ src/ipc/mem/Segment.cc	2015-02-23 22:30:51.000000000 +1100
@@ -88,7 +88,7 @@ Ipc::Mem::Segment::create(const off_t aS
     assert(aSize > 0);
     assert(theFD < 0);
 
-    theFD = shm_open(theName.termedBuf(), O_CREAT | O_RDWR | O_TRUNC,
+    theFD = shm_open(theName.termedBuf(), O_CREAT | O_RDWR,
                      S_IRUSR | S_IWUSR);
     if (theFD < 0) {
         debugs(54, 5, HERE << "shm_open " << theName << ": " << xstrerror());
@@ -97,14 +97,19 @@ Ipc::Mem::Segment::create(const off_t aS
     }
 
     if (ftruncate(theFD, aSize)) {
+        int saved_errno = errno;
+        shm_unlink(theName.termedBuf());
+        errno = saved_errno;
         debugs(54, 5, HERE << "ftruncate " << theName << ": " << xstrerror());
         fatalf("Ipc::Mem::Segment::create failed to ftruncate(%s): %s\n",
                theName.termedBuf(), xstrerror());
     }
 
-    assert(statSize("Ipc::Mem::Segment::create") == aSize); // paranoid
+    theSize = statSize("Ipc::Mem::Segment::create");
+
+    // OS X will round up to a full page, so not checking for exact size match
+    assert(theSize >= aSize);
 
-    theSize = aSize;
     theReserved = 0;
     doUnlink = true;
 
