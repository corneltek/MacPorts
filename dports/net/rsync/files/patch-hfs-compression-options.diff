This patch adds support for HFS+ compression status to be
shown during options display.

To use this patch, run these commands for a successful build:

    patch -p1 <patches/fileflags.diff
    patch -p1 <patches/crtimes.diff
    patch -p1 <patches/hfs-compression.diff
    patch -p1 <patches/hfs-compression-options.diff
    ./prepare-source
    ./configure
    make

TODO:
 - Should rsync try to treat the compressed data as file data and use the
   rsync algorithm on the data transfer?

diff --git a/options.c b/options.c
--- a/options.c
+++ b/options.c
@@ -228,6 +228,7 @@
 	char const *iconv = "no ";
 	char const *ipv6 = "no ";
 	char const *fileflags = "no ";
+	char const *hfscomp = "no";
 	STRUCT_STAT *dumstat;
 
 #if SUBPROTOCOL_VERSION != 0
@@ -264,6 +265,9 @@
 #ifdef SUPPORT_FILEFLAGS
 	fileflags = "";
 #endif
+#ifdef SUPPORT_HFS_COMPRESSION
+	hfscomp = "";
+#endif
 
 	rprintf(f, "%s  version %s  protocol version %d%s\n",
 		RSYNC_NAME, RSYNC_VERSION, PROTOCOL_VERSION, subprotocol);
@@ -277,8 +281,10 @@
 		(int)(sizeof (int64) * 8));
 	rprintf(f, "    %ssocketpairs, %shardlinks, %ssymlinks, %sIPv6, batchfiles, %sinplace,\n",
 		got_socketpair, hardlinks, links, ipv6, have_inplace);
-	rprintf(f, "    %sappend, %sACLs, %sxattrs, %siconv, %ssymtimes, %sfile-flags\n",
+	rprintf(f, "    %sappend, %sACLs, %sxattrs, %siconv, %ssymtimes, %sfile-flags,\n",
 		have_inplace, acls, xattrs, iconv, symtimes, fileflags);
+	rprintf(f, "    %sHFS-compression\n",
+		hfscomp);
 
 #ifdef MAINTAINER_MODE
 	rprintf(f, "Panic Action: \"%s\"\n", get_panic_action());
