# $Id$

PortSystem 1.0

name				tomcat-native
version				1.1.22

categories			java www
maintainers			nomaintainer
platforms			darwin

description			Tomcat 5 HTTP Server native library support.
long_description	This port provides access to native apr and other functions \
					utilized by tomcat.
homepage			http://tomcat.apache.org/

master_sites		apache:tomcat/tomcat-connectors/native/${version}/source/
checksums			rmd160 d9b1bbfb58202e218f5fa6b89ed5a3bc9aee79e7 \
					sha256 5e7beae371c2e5046f627a3ab3330a75f9457217ebc2587bf7fd3cbf2cd320a5

distname			${name}-${version}-src
worksrcdir			${distname}/jni/native

depends_lib			port:apr \
					port:openssl

configure.args		--with-apr=${prefix} \
					--with-ssl=${prefix} \
					--with-java-platform=2

if {[info exists env(JAVA_HOME)]} {
	configure.args-append --with-java-home="$env(JAVA_HOME)"
} else {
    configure.args-append --with-java-home="/System/Library/Frameworks/JavaVM.framework"
}

build.args			EXTRA_LDFLAGS="-shrext .jnilib"

notes "
	To integrate this into tomcat, add something like
	-Djava.library.path=${prefix} to the tomcat options.

	You then need to configure a Connector in server.xml
	with the appropriate apr protocol class for your use,
	for instance:
		protocol=\"org.apache.coyote.http11.Http11AprProtocol\",
		protocol=\"org.apache.coyote.ajp.AjpAprProtocol\"

	As in:
    <!-- Define a non-SSL HTTP/1.1 Connector on port 8081 using apr -->
    <Connector port=\"8081\" maxHttpHeaderSize=\"8192\"
               maxThreads=\"150\" minSpareThreads=\"25\" maxSpareThreads=\"75\"
               enableLookups=\"false\" redirectPort=\"8443\" acceptCount=\"100\"
               connectionTimeout=\"20000\" disableUploadTimeout=\"true\" protocol=\"org.apache.coyote.http11.Http11AprProtocol\" />
"
