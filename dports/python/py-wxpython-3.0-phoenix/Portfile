# -*- coding: utf-8; mode: tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2
# $Id$

PortSystem          1.0
PortGroup           python      1.0
PortGroup           wxWidgets   1.0

name                py-wxpython-3.0-phoenix
version             3.0.1.0-r75494
set wx_version      [join [lrange [split ${version} .] 0 2] .]
set branch          [join [lrange [split ${version} .] 0 1] .]
categories-append   graphics devel
license             wxwidgets-3.1
platforms           darwin
maintainers         mojca

description         Python interface to the wxWidgets ${branch} cross platform GUI
# TODO
#long_description    wxPython is a GUI toolkit for the Python programming \
#                    language. It allows Python programmers to create \
#                    programs with a robust, highly functional graphical \
#                    user interface, simply and easily. It is implemented \
#                    as a Python extension module (native code) that wraps \
#                    the wxWidgets cross platform GUI library, written in C++.

homepage            http://wiki.wxpython.org/ProjectPhoenix
#                   http://www.wxpython.org/
master_sites        http://wxpython.org/Phoenix/snapshot-builds/

distname            wxPython_Phoenix

checksums           rmd160  711ce5775da6855addd39b8a1e4e6722eff85a3b \
                    sha256  a058d61ff1e2a4feb2f5fea22063276e88d9a91463a13e7f021f55faf8c00094

python.versions     27 33 34
python.default_version 33

distfiles           ${distname}-${version}-src${extract.suffix}
worksrcdir          ${distname}-${version}-src/Phoenix
dist_subdir         wxWidgets/${wx_version}

# extract just the docs and wxPython subdir
# extract.post_args   "| tar -xf - ${worksrcdir}"

if {${name} ne ${subport}} {
    conflicts       py${python.version}-wxpython-2.8
    # As long as wxPython and wxWidgets are at the same version,
    # this port could also depend on wxWidgets-3.0.
    # A separate port is there just because wxPython usually lags behind.
    wxWidgets.use   wxPython-3.0
#    depends_lib-append \
                    port:${wxWidgets.port}

    # patchfiles      patch-config.py.diff

    # TODO: is it possible to use build arguments instead of redefining the whole command?
    build.env       WX_CONFIG="${wxWidgets.wxconfig}"
    build.cmd       ${python.bin} build.py
    # destroot.cmd    ${python.bin} setup.py WX_CONFIG="${wxWidgets.wxconfig}"

    post-destroot {
        # When a new release of wxPython comes out, the contents of
        # ${destroot}${wxWidgets.prefix}/Versions/wxPython/${branch}/include/wx-${branch}/wx/wxPython
        # should be stored separately into wxPython-${version}-MacPorts-subset.tar.bz2
        # to be extracted/installed by wxPython-3.0 rather than this port.
        # This allows parallel installation of several versions of py**-wxpython-3.0.
        delete      ${destroot}${wxWidgets.prefix}
    }

    livecheck.type  none
} else {
    # Once upon a time this would install the documentation,
    # however the python PortGroup disables all steps including fetching & extracting
    # which makes it a bit inconvenient to do things like this.
    # If anyone is missing the docs badly enough, you are welcome to fix this
    # in both py-wxpython-2.8 and py-wxpython-3.0.
    #
    # post-destroot {
    #     xinstall -d -m 755 ${destroot}${prefix}/share/doc/
    #     file copy ${worksrcpath}/docs ${destroot}${prefix}/share/doc/${name}
    #     file copy ${worksrcpath}/samples ${destroot}${prefix}/share/doc/${name}/examples
    # }

    livecheck.type  regex
    livecheck.url   ${homepage}
    livecheck.regex wxPython(?: | \\(classic\\) )(2\\.\[0-9\]+\\.\[0-9\]+\\.\[0-9\]+)
}
