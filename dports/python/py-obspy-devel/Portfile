# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           python 1.0
PortGroup           github 1.0

github.setup        obspy obspy 0.9.2-787-gf176f4cdae
name                py-${github.project}-devel
conflicts           py-${github.project}

categories-append   science
platforms           darwin
license             LGPL-3

maintainers         petr openmaintainer

description         Python framework for processing seismological data \
                    (development snapshot)

long_description    \
    This port provides a development snapshot of the ObsPy package, which \
    might not be always stable. \
    ObsPy is an open-source project dedicated to provide a Python framework \
    for processing seismological data. It provides support for file formats \
    and signal processing routines which allow the manipulation, analysis \
    and visualization of seismological time series. The goal of the ObsPy \
    project is to facilitate rapid application development for seismology.

homepage            http://www.obspy.org/

checksums           md5     c9b406044bc50c069398c6fd0c39066d \
                    rmd160  9d5d51fc9a20324d5f584845a7b4b66d821a2798 \
                    sha256  af0db51604e478cae54005998eb006786f3f11a8d575a7477c8bbf1aa53121c7

livecheck.type      none

python.versions     26 27 33 34

if {${name} ne ${subport}} {
    depends_build-append    port:py${python.version}-numpy

    depends_lib-append      port:py${python.version}-future \
                            port:py${python.version}-numpy \
                            port:py${python.version}-scipy \
                            port:py${python.version}-lxml \
                            port:py${python.version}-sqlalchemy \
                            port:py${python.version}-matplotlib

    # suds alternative dependency, Py2 only: suds or suds-jurko
    if { ${python.version} < 30 } {
        depends_lib-append \
            path:${python.pkgd}/suds:py${python.version}-suds-jurko

        patchfiles-append   patch-setup-suds.py.diff      
    } else {
        depends_lib-append  port:py${python.version}-suds-jurko
    }

    # Note: Required for post-installation testing only 
    depends_run-append      port:py${python.version}-flake8 \
                            port:py${python.version}-nose
    # Python 3.3+: mock is available as unittest.mock
    if { ${python.version} < 33 } {
        depends_run-append  port:py${python.version}-mock
    }

    # Note: temporary workaround for numpy.distutils behaviour
    patchfiles-prepend   patch-setup.py.diff

    # creates a obspy/RELEASE-VERSION file dynamically
    post-patch {
        # set release version, python version string and target file
        set ver_dev     ${github.version}
        set ver_fname   ${worksrcpath}/obspy/RELEASE-VERSION

        # open, write, close
        set ver_fid [open ${ver_fname} "w"]
        puts -nonewline ${ver_fid} ${ver_dev}
        close ${ver_fid}
    }

    # py-scipy is not universal
    universal_variant       no

    set gcc_versions {4.3 4.4 4.5 4.6 4.7 4.8 4.9}
    set default_fortran_variant +gcc48

    foreach ver ${gcc_versions} {
        set ver_no_dot [join [split ${ver} "."] ""]

        set variant_line {variant gcc${ver_no_dot} description "build with gfortran from gcc${ver_no_dot}"}

        foreach over ${gcc_versions} {
            if {${ver} == ${over}} {
                continue
            }

            set over_no_dot [join [split ${over} "."] ""]
            append variant_line " conflicts gcc${over_no_dot}"
        }
        append variant_line { {}}

        eval $variant_line

        if {[variant_isset gcc${ver_no_dot}]} {
            if {${default_fortran_variant} != "+gcc${ver_no_dot}"} {
                set default_fortran_variant ""
            }
        }
    }

    if {${default_fortran_variant} != ""} {
        default_variants-append "${default_fortran_variant}"
    }

    foreach ver ${gcc_versions} {
        set ver_no_dot [join [split ${ver} "."] ""]

        if {[variant_isset gcc${ver_no_dot}]} {
            depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
            depends_build-append port:gcc${ver_no_dot}

            # F90 is the relevant variable!
            configure.fc  ${prefix}/bin/gfortran-mp-${ver}
            configure.f77 ${prefix}/bin/gfortran-mp-${ver}
            configure.f90 ${prefix}/bin/gfortran-mp-${ver}

            # `setup.py install` tests for Fortran compiler
            destroot.env-append FC=${configure.fc}
            destroot.env-append F77=${configure.f77}
            destroot.env-append F90=${configure.f90}
        }
    }
}
