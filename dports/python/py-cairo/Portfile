# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8::et:sw=4:ts=4:sts=4
# $Id$

PortSystem              1.0
PortGroup               python 1.0
PortGroup		active_variants 1.0

name                    py-cairo
set my_name             pycairo
version                 1.10.0
categories              python x11
license                 {LGPL-2.1 MPL-1.1}
platforms               darwin
maintainers             gmail.com:sean.michael.farley openmaintainer
description             Pycairo is set of Python bindings for the cairo graphics library

long_description        ${description}

homepage                http://cairographics.org/pycairo/
master_sites            http://cairographics.org/releases/

use_bzip2               yes

checksums               rmd160  7d1c1c05113e5bbad32dbe96c65c918b170cac33 \
                        sha256  9aa4078e7eb5be583aeabbe8d87172797717f95e8c4338f0d4a17b683a7253be

python.versions         26 27 31 32 33
python.default_version  27

depends_build           port:pkgconfig
depends_lib             path:lib/pkgconfig/cairo.pc:cairo

patchfiles-append       setup.py.patch

if {${name} != ${subport}} {
    depends_build-append port:py${python.version}-numpy

    # pycairo distributes python 2.x versions as py2cairo
    if {${python.version} < 31} {
        set my_name      py2cairo

        checksums        rmd160  ce75db9af32ef1a3e90f6aaa649cbb2493a941a4 \
                         sha256  d30439f06c2ec1a39e27464c6c828b6eface3b22ee17b2de05dc409e429a7431

        post-patch {
            reinplace "s|py3cairo|pycairo|g" ${worksrcpath}/setup.py
        }
    }

    distname             ${my_name}-${version}

    livecheck.type       none
} else {
    livecheck.type       regex
    livecheck.regex      "${my_name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"
}

post-configure {
    if {[variant_isset x11]} {
	require_active_variants cairo x11
    }
}

platform darwin 9 {
    post-patch {
        reinplace "s| -export-symbols-regex.*||g" ${worksrcpath}/cairo/Makefile.in
    }
}

post-extract {
    fs-traverse item ${worksrcpath} {
        if {[file isdirectory ${item}]} {
            file attributes ${item} -permissions a+rx
        } elseif {[file isfile ${item}]} {
            file attributes ${item} -permissions a+r
        }
    }
}

variant x11 {}

default_variants        +x11
