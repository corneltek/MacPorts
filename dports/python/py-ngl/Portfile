# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup python    1.0

name                py-ngl
version             1.4.0
categories-append   science
platforms           darwin
license             PyNGL
maintainers         petr openmaintainer

description         Python module to visualize scientific data
long_description \
    PyNGL is a Python language module used to visualize scientific data, \
    with an emphasis on high quality 2D visualizations.

homepage            http://www.pyngl.ucar.edu/
distname            PyNGL-${version}

master_sites        https://www.earthsystemgrid.org/download/fileDownload.htm?logicalFileId=c59d162c-b960-11e0-a567-00c0f03d5b7c&dummy=

checksums           rmd160  e7841224f9006bf82dcc8cb847d8538a2b3dea86 \
                    sha256  1651c9a5d506bb8b1b304893a4ed24d5fba7912287398aabf03621431a5320db

python.versions     26 27

if {${name} ne ${subport}} {
    depends_lib-append  port:zlib \
                        port:libpng \
                        port:xorg-libX11 \
                        port:py${python.version}-nio

    # ncarg is not universal, thus py-ngl is neither
    universal_variant   no

    patch {
        reinplace "s|/usr/X11R6/lib|${prefix}/lib|" ${worksrcpath}/setup.py
        reinplace "s|/usr/bin/env python|${python.bin}|" ${worksrcpath}/examples/pynglex
        reinplace "s|py_cmd = 'python'|py_cmd = '${python.bin}'|" ${worksrcpath}/examples/pynglex
    }

    build.env           PNG_PREFIX=${prefix} \
                        ZLIB_PREFIX=${prefix} \
                        NCARG_ROOT=${prefix}

    destroot.env        NCARG_ROOT=${prefix}

    set gcc_versions {4.3 4.4 4.5 4.6 4.7 4.8 4.9}
    set default_fortran_variant +gcc48
    set g95_conflicts {}

    foreach ver ${gcc_versions} {
        set ver_no_dot [join [split ${ver} "."] ""]

        set variant_line {variant gcc${ver_no_dot} description "build with gfortran from gcc${ver_no_dot}" conflicts g95}

        foreach over ${gcc_versions} {
            if {${ver} eq ${over}} {
                continue
            }

            set over_no_dot [join [split ${over} "."] ""]
            append variant_line " conflicts gcc${over_no_dot}"
        }
        append variant_line { {}}

        eval $variant_line

        append g95_conflicts " conflicts gcc${ver_no_dot}"

        if {[variant_isset gcc${ver_no_dot}]} {
            if {${default_fortran_variant} ne "+gcc${ver_no_dot}"} {
                set default_fortran_variant ""
            }
        }
    }

    eval [concat {variant g95 description {build with g95}} $g95_conflicts {{}}]

    if {[variant_isset g95]} {
        if {${default_fortran_variant} ne "+g95"} {
            set default_fortran_variant ""
        }
    }

    if {${default_fortran_variant} ne ""} {
        default_variants-append "${default_fortran_variant}"
    }

    foreach ver ${gcc_versions} {
        set ver_no_dot [join [split ${ver} "."] ""]

        if {[variant_isset gcc${ver_no_dot}]} {
            depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
            depends_build-append port:gcc${ver_no_dot}

            configure.fc  ${prefix}/bin/gfortran-mp-${ver}
            configure.f77 ${prefix}/bin/gfortran-mp-${ver}
            configure.f90 ${prefix}/bin/gfortran-mp-${ver}

            build.env-append    F2CLIBS=gfortran \
                                F2CLIBS_PREFIX=${prefix}/lib/gcc${ver_no_dot} \
                                CC=${configure.cc}
        }
    }

    if {[variant_isset g95]} {
        depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
        depends_build-append port:g95

        configure.fc ${prefix}/bin/g95
        configure.f77 ${prefix}/bin/g95
        configure.f90 ${prefix}/bin/g95

        configure.fflags-append -fno-second-underscore

        build.env-append    F2CLIBS=f95 \
                            F2CLIBS_PREFIX=${prefix}/lib/ \
                            CC=${configure.cc}
    }

    livecheck.type   none
} else {
    livecheck.type   regex
    livecheck.url    http://www.pyngl.ucar.edu/Download/
    livecheck.regex  {of PyNGL is ([0-9]\.[0-9]\.[0-9]+)}
}
