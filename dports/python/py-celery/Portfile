# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           python 1.0
PortGroup           select 1.0

name                py-celery
version             3.1.12
revision            0
categories-append   devel
platforms           darwin
license             BSD
supported_archs     noarch

python.versions     26 27 32 33 34

maintainers         stromnov openmaintainer

description         Distributed Task Queue

long_description    Celery is an asynchronous task queue/job queue based \
                    on distributed message passing

homepage            http://celeryproject.org/
master_sites        http://pypi.python.org/packages/source/c/celery/

distname            celery-${version}

checksums           rmd160  b6517f562069b07d34c638d810204ec96dd78e3b \
                    sha256  22c8fba96b7522afacdf3ee6fd3da7b10b90f76de88686d13ee939da361254b1

if {${name} ne ${subport}} {
    # celery 3.1+ requires Python 2.7 or 3.3+
    if {[lsearch {26 32} ${python.version}] != -1} {
        version             3.0.24
        revision            0
        distname            celery-${version}
        checksums           rmd160  b77c412d25258e01e98ef3e5d3d0e106dcff079a \
                            sha256  68620192ec0b2212e64c307b5588c6c02f6a56e21160f3f3323653f7e44aafdf
    }

    # celery depends on pkg_resources from setuptools
    depends_lib-append  port:py${python.version}-setuptools \
                        port:py${python.version}-kombu \
                        port:py${python.version}-anyjson \
                        port:py${python.version}-tz \
                        port:py${python.version}-billiard \
                        port:py${python.version}-amqp

    depends_run-append  port:celery_select

    select.group        celery
    select.file         ${filespath}/py${python.version}-celery

    notes "
To make the Python ${python.branch} version of py-celery the one that is run\
when you execute the commands without a version suffix, e.g. 'celeryd' or\
'celeryctl', run:

port select --set ${select.group} [file tail ${select.file}]
"

    livecheck.type      none
} else {
    livecheck.type      regex
    livecheck.url       ${master_sites}
    livecheck.regex     {celery-(\d+(?:\.\d+)*)\.[tz]}
}
