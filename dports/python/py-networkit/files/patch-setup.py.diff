--- setup.py.orig	2014-10-31 12:06:18.000000000 +0300
+++ setup.py	2014-10-31 14:41:10.000000000 +0300
@@ -1,9 +1,5 @@
 import version
 import sys
-if "setuptools" not in sys.modules:
-	from ez_setup import use_setuptools
-	# in case setuptools is not installed
-	use_setuptools()
 
 from setuptools import setup
 from setuptools import Extension
@@ -69,34 +65,9 @@
 }""")
 sample.close()
 
-
-gcc_version_satisfied = False
-gcc_versions = ["","-4.9","-4.8","-4.7"]
-gcc = ""
-v = 0
-while gcc_version_satisfied == False and v < len(gcc_versions):
-	try:
-		comp_cmd = "g++{0} -o test sample.cpp -fopenmp -std=c++11".format(gcc_versions[v])
-		#print(comp_cmd)
-		comp_proc = Popen(shlex.split(comp_cmd), stdout=DEVNULL, stderr=DEVNULL)
-		comp_proc.wait()
-		if (comp_proc.returncode == 0):
-			gcc_version_satisfied = True
-			gcc = "g++{0}".format(gcc_versions[v])
-			#print("your latest gcc is {0}".format(gcc))
-	except:
-		foo = 0
-		#print("g++{0} is not installed".format(gcc_versions[v]))
-	v += 1
-os.remove("sample.cpp")
-if gcc_version_satisfied:
-	os.remove("test")
+gcc = os.environ["CXX"]
+if "CC" not in os.environ:
 	os.environ["CC"] = gcc
-	os.environ["CXX"] = gcc
-else:
-	errorMessages.append("ERROR: Please install GCC/g++ 4.8 or later and rerun")
-	abortInstallation = True
-
 
 # abort installation in case either Cython, Scons or the compiler requirements aren't satisfied
 if abortInstallation:
