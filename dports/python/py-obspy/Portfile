# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           python 1.0

set _name           obspy
set _n              [string index ${_name} 0]

name                py-obspy
conflicts           ${name}-devel

version             0.10.1
categories-append   science
platforms           darwin
license             LGPL-3

maintainers         petr openmaintainer

description         Python framework for processing seismological data

long_description    \
    ObsPy is an open-source project dedicated to provide a Python framework \
    for processing seismological data. It provides support for file formats \
    and signal processing routines which allow the manipulation, analysis \
    and visualization of seismological time series. The goal of the ObsPy \
    project is to facilitate rapid application development for seismology.

homepage            http://www.obspy.org/

use_zip             yes
distname            ${_name}-${version}
master_sites        https://pypi.python.org/packages/source/${_n}/${_name}/

checksums           md5     0d32bcf8e9534d32c91efee84291bad3 \
                    rmd160  b6c72f045635b6ba0de38ec1c5f7220f6bf2d864 \
                    sha256  8f622e4a20fab2b58772d279d4518991ef2ba9b611d892db2a2baba5af86c94f

python.versions     27 34

if {${name} ne ${subport}} {
    # Note: setuptools required only for developers
    depends_build-append    port:py${python.version}-numpy \
                            port:help2man

    depends_lib-append      port:py${python.version}-future \
                            port:py${python.version}-numpy \
                            port:py${python.version}-scipy \
                            port:py${python.version}-lxml \
                            port:py${python.version}-sqlalchemy \
                            port:py${python.version}-matplotlib

    # Note: Required for post-installation testing only
    depends_run-append      port:py${python.version}-flake8 \
                            port:py${python.version}-nose

    # py-numpy & py-scipy are not universal
    universal_variant       no

    livecheck.type  none
} else {
    livecheck.type  regex
    livecheck.url   https://pypi.python.org/pypi/${_name}/json
    livecheck.regex "\"${_name}-(\[.\\d\]+)\\${extract.suffix}\""
}
