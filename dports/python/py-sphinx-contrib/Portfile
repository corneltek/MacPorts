# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           python 1.0
PortGroup           bitbucket 1.0

bitbucket.setup     birkenfeld sphinx-contrib 6d1c958ca7bd
name                py-sphinx-contrib
version             0.0.20160313
categories-append   textproc devel
license             BSD
maintainers         sean openmaintainer
description         Sphinx extensions
long_description \
    This is a collection of Sphinx extensions maintained by their respective authors. \
    It is not an official part of Sphinx.

platforms           darwin
supported_archs     noarch

checksums           rmd160  5075e15124af8da7692191a7aa03953025d74570 \
                    sha256  da6c8709dea6edb5c89d3ad946f2014883a2d3cb4428ff9e03c6e35fd1ddcbf5

python.versions     27

if {$subport ne $name} {
    depends_lib     port:py${python.version}-sphinx

    livecheck.type  none

    post-patch {
        reinplace -W ${worksrcpath}/ansi "s,README,README.rst," setup.py
        reinplace -W ${worksrcpath}/cheeseshop "s,README,README.rst," setup.py
        reinplace -W ${worksrcpath}/clearquest "s,README,README.rst," setup.py
        reinplace -W ${worksrcpath}/email "s,README,README.rst," setup.py
        reinplace -W ${worksrcpath}/hyphenator "s,README,README.rst," setup.py
    }

    build {
        foreach d [glob -type d -directory ${worksrcpath} *] {
            if {[file exists $d/setup.py] && ![string match "*cmakedomain" $d]} {
                system -W $d "${build.cmd} ${build.target}"
            }
        }
    }

    destroot {
        foreach d [glob -type d -directory ${worksrcpath} *] {
            if {[file exists $d/setup.py] && ![string match "*cmakedomain" $d]} {
                system -W $d "${destroot.cmd} ${destroot.target} ${destroot.destdir}"
            }
        }
    }
}
