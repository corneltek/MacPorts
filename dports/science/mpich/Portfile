# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0

name                mpich
set pkgname         mpich2
version             1.5
revision            0

license             BSD
categories          science parallel net
platforms           darwin
maintainers         eborisch \
                    openmaintainer

description         Message Passing Interface (MPI) Library

long_description    MPICH is a high-performance and widely portable\
                    implementation of the Message Passing Interface (MPI) \
                    standard (MPI-1, MPI-2 and MPI-3). The goals of MPICH are:\
                    (1) to provide an MPI implementation that efficiently\
                    supports different computation and communication platforms\
                    including commodity clusters (desktop systems,\
                    shared-memory systems, multicore architectures), high-speed\
                    networks (10 Gigabit Ethernet, InfiniBand, Myrinet,\
                    Quadrics) and proprietary high-end computing systems (Blue\
                    Gene, Cray) and (2) to enable cutting-edge research in MPI\
                    through an easy-to-extend modular framework for other\
                    derived implementations.

homepage            http://www.mpich.org/
checksums \
    rmd160  69572f5c435aec1ef37af197f7509cfc073ce53a \
    sha256  7175926fc2e4230f00201e880318c08de4f949c0dbe167fe1b2e256ac79d5f66

configure.args      --disable-dependency-tracking \
                    --disable-f77 \
                    --disable-fc \
                    --disable-silent-rules \
                    --enable-base-cache \
                    --enable-cache \
                    --enable-cxx \
                    --enable-fast=O2 \
                    --enable-shared \
                    --enable-smpcoll \
                    --without-mpe \
                    --with-device=ch3:nemesis \
                    --with-pm=hydra \
                    --with-thread-package=posix \
                    "F90FLAGS='' F90=''"

conflicts           mpich-devel

# Will be enabled with future commit disabling mpich3 port
#
#subport mpich-devel {
#    set pkgname         mpich
#    conflicts           mpich
#    version             3.0rc1
#
#    long_description-append \
#                    \n\nThe mpich-devel port follows the mpich 3.x line, and is\
#                    the successor to the mpich2 package. Starting with the\
#                    major release in November 2012, the project is renamed\
#                    back to MPICH (from MPICH2) with a version number of 3.0. 
#
#    checksums \
#        rmd160  f351263b455db2503f675ba5a8c11560098eecd2 \
#        sha256  5ff2599c0132b6ce9246925a790fa00a0a648c3049d858ade102512be509fe5f
#
#    configure.args-delete   --without-mpe
#}

master_sites        ${homepage}files/tarballs/${version}/
distname            ${pkgname}-${version}

conflicts-append    mpich2 \
                    mpich2-devel

universal_variant   no

depends_lib-append  port:libxml2
conflicts-append    lammpi


platform darwin {
    configure.args-append   --enable-timer-type=mach_absolute_time
}

# We're making compiler wrappers here... don't default to -O2 for wrappers.
# Actual library code is compiled with -O2 via --enable-fast=O2 configure arg
configure.cflags-delete     -O2
configure.cxxflags-delete   -O2
configure.fflags-delete     -O2
configure.fcflags-delete    -O2
configure.cppflags-delete   -I${prefix}/include

# As MPICH creates compiler wrappers, there are lots of
# variants for what compiler the user would like to wrap.

variant gcc47 description {
    Enable Fortran 77 and Fortran 90 bindings using gfortran from gcc47 port
} conflicts gcc43 gcc44 gcc45 gcc46 llvm clang clang31 {
    depends_lib-append      port:gcc47
    configure.compiler      macports-gcc-4.7
}

variant gcc46 description {
    Enable Fortran 77 and Fortran 90 bindings using gfortran from gcc46 port
} conflicts gcc43 gcc44 gcc45 gcc47 llvm clang clang31 {
    depends_lib-append      port:gcc46
    configure.compiler      macports-gcc-4.6
}

variant gcc45 description {
    Enable Fortran 77 and Fortran 90 bindings using gfortran from gcc45 port
} conflicts gcc43 gcc44 gcc46 gcc47 llvm clang clang31 {
    depends_lib-append      port:gcc45
    configure.compiler      macports-gcc-4.5
}

variant gcc44 description {
    Enable Fortran 77 and Fortran 90 bindings using gfortran from gcc44 port
} conflicts gcc43 gcc45 gcc46 gcc47 llvm clang clang31 {
    depends_lib-append      port:gcc44
    configure.compiler      macports-gcc-4.4
}

variant gcc43 description {
    Enable Fortran 77 and Fortran 90 bindings using gfortran from gcc43 port
} conflicts gcc44 gcc45 gcc46 gcc47 llvm clang clang31 {
    depends_lib-append      port:gcc43
    configure.compiler      macports-gcc-4.3
}

if {[ variant_isset gcc43 ] ||
    [ variant_isset gcc44 ] ||
    [ variant_isset gcc45 ] ||
    [ variant_isset gcc46 ] ||
    [ variant_isset gcc47 ]} {
    configure.args-append   --enable-f77 --enable-fc
    configure.args-delete   --disable-f77 --disable-fc
}

variant llvm description {
    Use Apple-supplied llvm-gcc
} conflicts gcc43 gcc44 gcc45 gcc46 gcc47 clang clang31 {
    configure.compiler      llvm-gcc-4.2
}

# Apple clang version 4.1 currently segfaults (Xcode 4.5.1)
# See https://trac.macports.org/ticket/36654#comment:9
if {[vercmp ${xcodeversion} 4.5.1] >= 0} {
    compiler.blacklist      clang
    # Keeping variant so all the conflict lines don't balk and so upgrades
    # of +clang are not moved to llvm without warning.
    variant clang description {
        !!THIS CLANG VERSION BREAKS. UNUSABLE VARIANT HERE AS PLACEHOLDER ONLY!!
    } conflicts gcc43 gcc44 gcc45 gcc46 gcc47 llvm clang31 {
        ui_error \
          "This version of clang segfaults. Please select a different compiler."
        return -code error "Unsupported clang version. Try +clang31 or +llvm ?"
    }
} else {
    variant clang description {
        Use Apple-supplied clang
    } conflicts gcc43 gcc44 gcc45 gcc46 gcc47 llvm clang31 {
        configure.compiler      clang
    }
}

variant clang31 description {
    Use clang 3.1 from MacPorts
} conflicts gcc43 gcc44 gcc45 gcc46 gcc47 llvm clang {
    depends_lib-append      port:clang-3.1
    configure.compiler      clang
    configure.cc            ${prefix}/bin/clang-mp-3.1
    configure.cxx           ${prefix}/bin/clang++-mp-3.1
}

variant gforker description {
    Use gforker process manager instead of the default hydra
} {
    configure.args-append   --with-pm=gforker
    configure.args-delete   --with-pm=hydra
}

variant tuned description {Build with more optimizations)} {
    configure.args-delete       --enable-fast=O2
    configure.args-append       --enable-fast=all \
                                MPICHLIB_CFLAGS='-fomit-frame-pointer -O2'
}

livecheck.type      regex
livecheck.regex     ${pkgname}-(\[0-9.pbrc\]+)${extract.suffix}
livecheck.url       ${homepage}downloads/index.php?s=downloads
