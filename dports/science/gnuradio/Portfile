# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           wxWidgets 1.0
PortGroup           active_variants 1.1
PortGroup           github 1.0

wxWidgets.use       wxPython-3.0

name                gnuradio
maintainers         michaelld

description         GNU Radio is Software Defined Radio (SDR)

categories          science comms
license             GPL-3
platforms           darwin macosx

dist_subdir         gnuradio

# set top-level versions for release, devel, and next

set major           3
set minor_base      7
set patch           5
set maint_base      1
set minor_next      [expr {${minor_base} + 1}]
set patch_devel     [expr {${patch} + 1}]
set branch_base     [join "${major} ${minor_base}" .]
set base_version    [join "${branch_base} ${patch}" .]
if {"${maint_base}" ne "0"} {
    set base_version [join "${base_version} ${maint_base}" .]
}
set devel_version   [join "${branch_base} ${patch_devel}" .]
set next_version    [join "${major} ${minor_next}" .]

if {${subport} eq ${name}} {

    github.setup    gnuradio gnuradio ${base_version} v

    long_description    ${description}: \
        This port is kept up with the GNU Radio release, currently ${version}, which is typically updated every few months.

    conflicts       gnuradio-legacy gnuradio-next gnuradio-devel

    checksums \
        rmd160 8d17676d418e5bd8d25433433120703e8f719a7f \
        sha256 1041bcbf976814bf1b37d1fa79125771b98edb8bb1b88404498542d20935ca98

    # overload the github livecheck regex to look for versions that
    # are just numbers and '.', no letters (e.g., "3.7.3git").

    livecheck.regex archive/[join ${github.tag_prefix} ""](\[0-9\.\]+)${extract.suffix}

}

subport gnuradio-legacy {

    name            gnuradio-legacy
    github.setup    gnuradio gnuradio 3.6.5.1 v
    revision        10

    long_description    ${description}: \
        This port is for GNU Radio ${version}, reflecting the final release in the 3.6 API series.  It is for legacy purposes only\; please consider updating your code to the GNU Radio 3.7 API.

    conflicts       gnuradio gnuradio-next gnuradio-devel

    checksums \
        rmd160 f5d5890fca81e5c379d32b3504976bc24b7ac12f \
        sha256 1af7840b9b46aaa85786bf58274da4334b84192e04990b4f3132c1a84b84956f

    # fix INCLUDE_DIRECTORIES path order such that internal
    # directories are searched before ${prefix}/include or system
    # ones.

    patchfiles-append patch-path-order.diff

    # add checks for xgetbv instruction and cvtpi32_ps intrinsic

    patchfiles-append patch-volk_lib_CMakeLists.txt.legacy.diff

    # fix VOLK arch generators to include clang

    patchfiles-append patch-volk_gen_archs.xml.legacy.diff

    # fix SWIG include of std_string to come before anything else,
    # otherwise it will not be properly defined later on.

    patchfiles-append patch-gnuradio-core_swig_include-std_string.i.diff

    # fix friend function API declaration

    patchfiles-append patch-gnuradio-core_src_lib_io_ppio_ppdev.h.diff

    # 3.6.5.1 is the last of the 3.6 API development

    livecheck.type  none

}

subport gnuradio-devel {

    long_description    ${description}: \
        This port is kept up with the GNU Radio GIT 'master' branch, which is typically updated daily to weekly.  This version of GNU Radio generally contains fixes to, and its API is compatible with, the current GNU Radio release, and will be incorporated in an upcoming release.  This port may or not compile or function correctly, as it represents a work in progress.  If it does not work, check back in a few days.  Or try deactivating the currently active gnuradio port, cleaning any current builds, and trying again.

    name                gnuradio-devel
    github.setup        gnuradio gnuradio d8143810cd38ab0d47b0ebca62022cdbfe133478
    version             ${devel_version}_20141021

    conflicts           gnuradio-legacy gnuradio gnuradio-next

    checksums \
        rmd160 3eab9e2e6ea97d40625696751ac52d5c45cd551f \
        sha256 fca16d73327279bbd4b4b1133de7df88d38e29663efc041d7d92f35cd20d79d7

}

subport gnuradio-next {

    long_description    ${description}: \
        This port is kept up with the GNU Radio GIT 'next' branch, which is typically updated daily to weekly.  This version of GNU Radio represents the next major release of GNU Radio, and hence its API is likely to be different than that provided by either gnuradio or gnuradio-devel.  This port may or not compile or function correctly, as it represents a work in progress.  If it does not work, check back in a few days.  Or try deactivating the currently active gnuradio port, cleaning any current builds, and trying again.

    name                gnuradio-next
    github.setup        gnuradio gnuradio 259b3e9132377a1f3abfdedf14b08458a7e071ec
    version             ${next_version}_20141021

    conflicts           gnuradio-legacy gnuradio gnuradio-devel

    checksums \
        rmd160 6399d19cac685fc9ea3e31d64d83e9049d80a4bb \
        sha256 3fee5f6b438dec4ce9605d361edd163b99c726fc19a1599803d945aa7780e629

    # overload the github livecheck URL with the correct branch

    livecheck.url       ${github.homepage}/commits/next.atom

}

if {${subport} ne "gnuradio-legacy"} {

    # GNU Radio 3.7 has requirements that 3.6 does not, and provides
    # features that 3.6 does not have.

    depends_lib-append port:log4cpp

    # remove SIZE_T_32 check for SWIG; seems to help on older 32/64 OSs

    patchfiles-append patch-remove-SIZE_T_32.diff

    # temporary patch to fix header creation to be before dependencies
    # are determined, such that local (to the build) headers are found
    # before already-installed ones.

    if {${subport} eq "gnuradio"} {

        # patches for release only
        patchfiles-append \
            patch-cmake-expand.release.diff

    } else {

        # patches for devel and next (which are kept aligned for now)
        patchfiles-append \
            patch-cmake-expand.devel.diff

    }

    # 3.7 API variants

    variant ctrlport description {Enable control port enhancements (EXPERIMENTAL)} {}

    if {[variant_isset ctrlport]} {

# as of commit 2e691d87 (2014-08-08), all CTRLPORT calls are noops
# because of an issue with ICE.  So, allow +ctrlport, but it won't do
# anything until this is fixed.

#        depends_lib-append port:zeroc-ice35
        configure.args-append -DENABLE_GR_CTRLPORT=ON

    } else {

        configure.args-append -DENABLE_GR_CTRLPORT=OFF

    }

    variant performance_counters description {Enable support for performance counters (EXPERIMENTAL)} {}

    if {[variant_isset performance_counters]} {

        configure.args-append \
            -DENABLE_PERFORMANCE_COUNTERS=ON

    } else {

        configure.args-append \
            -DENABLE_PERFORMANCE_COUNTERS=OFF

    }

    variant zeromq description {Install GNU Radio with support for the ZeroMQ lightweight messaging kernel (EXPERIMENTAL)} {}

    if {[variant_isset zeromq]} {

        depends_lib-append \
            port:cppzmq

        configure.args-append \
            -DENABLE_GR_ZEROMQ=ON

    } else {

        configure.args-append \
            -DENABLE_GR_ZEROMQ=OFF

    }
}

# override githib PortGroup homepage setting

homepage            http://gnuradio.org/

use_parallel_build  yes

depends_lib-append  \
    port:boost \
    port:cppunit \
    port:fftw-3-single

depends_build-append \
    port:pkgconfig

# do VPATH build

set vpath           ${workpath}/build
pre-configure       { file mkdir ${vpath} }
configure.dir       ${vpath}
build.dir           ${vpath}

# remove top-level library path, such that internal libraries are used
# instead of any already-installed ones.

configure.ldflags-delete -L${prefix}/lib

# always enable VOLK, with or without orc

configure.args-append -DENABLE_VOLK=ON

# install CMake files into this directory;
# for 3.7+, but will not hurt for legacy.

configure.args-append \
    -DCMAKE_MODULES_DIR=${prefix}/share/cmake

# set last configure argument to the reletive path
# to the top-level cmake source

configure.post_args ../${worksrcdir}

# be verbose when building, for debugging purposes

build.post_args VERBOSE=1

post-destroot {

    # fix residual cmake module install location when
    # CMAKE_MODULES_DIR does not do the whole trick

    # GNU Radio installs cmake files as "Config*.cmake", which has the
    # odd behavior of requiring the files to be in a top-level shared
    # cmake directory; for MacPorts' cmake, these are, apparently:
    # ${prefix}/lib:${prefix}/share/cmake .  I don't know why ... but
    # I do not want cmake files installed into the former, so move
    # them to the latter.

    if {[file exists ${destroot}${prefix}/lib/cmake]} {
        xinstall -m 755 -d ${destroot}${prefix}/share
        move ${destroot}${prefix}/lib/cmake \
            ${destroot}${prefix}/share
    }
}

# shortcut to installing all variants except Python

variant full description {Deprecated legacy variant} {}
default_variants -full

# per user concensus: enable all variants except +debug and +universal
# (and, for next, except +ctrlport, +performance_counters, and +zeromq);

default_variants +docs +grc +qtgui +wxgui +uhd +orc +wavelet \
    +jack +portaudio +swig +sdl

# set Python variants

set pythons_suffixes {26 27}
global chosen_python_suffix
set chosen_python_suffix ""

set pythons_ports {}
foreach s ${pythons_suffixes} {
    lappend pythons_ports python${s}
}

foreach s ${pythons_suffixes} {
    set p python${s}
    set v [join [split ${s} ""] "."]
    set i [lsearch -exact ${pythons_ports} ${p}]
    set c [lreplace ${pythons_ports} ${i} ${i}]
    eval [subst {
        variant ${p} description "Build GNU Radio using Python ${v}" \
            conflicts ${c} {

            set chosen_python_suffix ${s}

            # specify the Python dependencies

            depends_lib-append \
                port:${p}

            # these are checked for at configure, then required for
            # runtime; so use depends_lib to get both.

            depends_lib-append \
                port:py${s}-numpy \
                port:py${s}-cheetah

            # these are not checked for at configure, but are required
            # for runtime; so use depends_run.

            depends_run-append \
                port:py${s}-opengl \
                port:py${s}-scipy

            # specify the Python version to use

            configure.args-append \
                -DPYTHON_EXECUTABLE=${prefix}/bin/python${v} \
                -DPYTHON_INCLUDE_DIR=${prefix}/Library/Frameworks/Python.framework/Versions/${v}/Headers \
                -DPYTHON_LIBRARY=${prefix}/Library/Frameworks/Python.framework/Versions/${v}/Python \
                -DGR_PYTHON_DIR=${frameworks_dir}/Python.framework/Versions/${v}/lib/python${v}/site-packages

            # check for variants that require Python

            if {[variant_isset docs]} {

                depends_build-append \
                    port:py${s}-sphinx

                configure.args-append \
                    -DSPHINX_EXECUTABLE=${prefix}/bin/sphinx-build-${v}

            }

            if {[variant_isset grc]} {

                # these are checked for at configure, then required
                # for runtime; so use depends_lib to get both.

                depends_lib-append \
                    port:py${s}-lxml \
                    port:py${s}-pygtk

            }

            if {[variant_isset qtgui]} {

                # pyqt4 is checked for at configure, then required for
                # runtime; so use depends_lib to get both.  Can use
                # either py*-pyqt4 or py*-pyqt4-devel.

                depends_lib-append \
                    path:share/py${s}-sip/PyQt4:py${s}-pyqt4

                # pyqwt is not checked for at configure, but is
                # required for runtime; so use depends_run.

                depends_run-append \
                    port:py${s}-pyqwt

            }

            if {[variant_isset wxgui]} {

                # wxpython is checked for at configure, then required
                # for runtime; so use depends_lib to get both.

                depends_lib-append \
                    port:py${s}-wxpython-3.0

            }

            if {[variant_exists ctrlport] && \
                [variant_isset ctrlport]} {

                # pyice is not checked for at configure, but is
                # required for runtime; so use depends_run.

#                depends_run-append \
#                    port:py${s}-zeroc-ice35

            }

            if {[variant_exists performance_counters] && \
                [variant_isset performance_counters]} {

                # these are not checked for at configure, but are
                # required for runtime; so use depends_run.

                depends_run-append \
                    port:py${s}-pygraphviz \
                    port:py${s}-networkx

            }

            if {[variant_exists zeromq] && \
                [variant_isset zeromq]} {

                # pyzmq is not checked for at configure, but is
                # required for runtime; so use depends_run.

                depends_run-append \
                    port:py${s}-zmq

            }
        }
    }]
}

# Python is required; default to 2.7

if {![variant_isset python26] && ![variant_isset python27]} {
    default_variants +python27
}

# Make sure -python27 was not specified alone

if {![variant_isset python26] && ![variant_isset python27]} {
    ui_error "GNU Radio requires a Python to be selected; you cannot use -python27 as a variant alone."
    return -code error "Invalid variant selection"
}

variant docs description "Install GNU Radio documentation" {

    depends_lib-append \
        port:doxygen \
        path:bin/dot:graphviz \
        port:xmlto

    configure.args-append \
        -DENABLE_DOXYGEN=ON \
        -DENABLE_SPHINX=ON

}

if {![variant_isset docs]} {

    configure.args-append \
        -DENABLE_DOXYGEN=OFF \
        -DENABLE_SPHINX=OFF

}

variant grc requires swig description "Install GNU Radio Companion" {

    configure.args-append \
        -DENABLE_GRC=ON

}

if {![variant_isset grc]} {

    configure.args-append \
        -DENABLE_GRC=OFF

}

variant qtgui description "Install GNU Radio with support for Qt GUI" {

    depends_lib-append \
        port:qt4-mac \
        port:qwtplot3d

    configure.args-append \
        -DENABLE_GR_QTGUI=ON \
        -DQT_QMAKE_EXECUTABLE=${prefix}/bin/qmake

    # Requires qwt >= 5.2, so not the "qwt" port.  Also requires
    # py*-pyqwt which does not compile with qwt >= 6.0; so -have- to
    # use qwt52 for now.

    depends_lib-append port:qwt52

}

if {![variant_isset qtgui]} {

    configure.args-append \
        -DENABLE_GR_QTGUI=OFF \
        -DQT_QMAKE_EXECUTABLE=

}

variant wxgui description "Install GNU Radio with support for Wx GUI" {

    depends_lib-append \
        port:${wxWidgets.port}

    configure.args-append \
        -DENABLE_GR_WXGUI=ON

}

if {![variant_isset wxgui]} {

    configure.args-append \
        -DENABLE_GR_WXGUI=OFF

}

variant uhd description "Install GNU Radio with support for UHD" {

    depends_lib-append \
        path:lib/libuhd.dylib:uhd

    configure.args-append \
        -DENABLE_GR_UHD=ON \
        -DUHD_INCLUDE_DIRS=${prefix}/include \
        -DUHD_LIBRARIES=${prefix}/lib/libuhd.dylib

}

if {![variant_isset uhd]} {

    configure.args-append \
        -DENABLE_GR_UHD=OFF \
        -DUHD_INCLUDE_DIRS= \
        -DUHD_LIBRARIES=

}

variant orc description "Install GNU Radio Volk with support for ORC" {

    depends_lib-append \
        port:orc

    configure.args-append \
        -DORCC_EXECUTABLE=${prefix}/bin/orcc

}

if {![variant_isset orc]} {

    configure.args-append \
        -DORCC_EXECUTABLE=

}

variant wavelet description "Install GNU Radio Wavelet component" {

    depends_lib-append \
        port:gsl

    configure.args-append \
        -DENABLE_GR_WAVELET=ON

}

if {![variant_isset wavelet]} {

    configure.args-append \
        -DENABLE_GR_WAVELET=OFF

}

variant jack description "Install GNU Radio with support for JACK audio" {

    depends_lib-append \
        port:jack

    configure.args-append \
        -DJACK_INCLUDE_DIR=${prefix}/include \
        -DJACK_LIBRARY=${prefix}/lib/libjack.dylib

}

if {![variant_isset jack]} {

    configure.args-append \
        -DJACK_INCLUDE_DIR= \
        -DJACK_LIBRARY=

}

variant portaudio description "Install GNU Radio with support for portaudio audio" {

    depends_lib-append \
        port:portaudio

    configure.args-append \
        -DPORTAUDIO_INCLUDE_DIRS=${prefix}/include \
        -DPORTAUDIO_LIBRARIES=${prefix}/lib/libportaudio.dylib

}

if {![variant_isset portaudio]} {

    configure.args-append \
        -DPORTAUDIO_INCLUDE_DIRS= \
        -DPORTAUDIO_LIBRARIES=

}

variant swig description "Install GNU Radio with support for SWIG-base Python bindings" {

    depends_build-append \
        port:swig-python

    configure.args-append \
        -DSWIG_EXECUTABLE=${prefix}/bin/swig

}

if {![variant_isset swig]} {

    configure.args-append \
        -DSWIG_EXECUTABLE=

}

variant sdl description "Install GNU Radio with support for SDL-based video" {

    depends_lib-append \
        port:libsdl

    configure.args-append \
        -DENABLE_GR_VIDEO_SDL=ON \
        -DSDLMAIN_LIBRARY=${prefix}/lib/libSDLmain.a \
        -DSDL_INCLUDE_DIR=${prefix}/include/SDL

}

if {![variant_isset sdl]} {

    configure.args-append \
        -DENABLE_GR_VIDEO_SDL=OFF \
        -DSDLMAIN_LIBRARY= \
        -DSDL_INCLUDE_DIR=

}
