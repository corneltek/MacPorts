# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           cmake 1.0

name                gnuradio
maintainers		    michaelld openmaintainer

description		    GNU Radio Software Defined Radio

categories		    science
homepage            http://gnuradio.org/
license             GPL-3
platforms           darwin macosx

dist_subdir         gnuradio

if {${subport} == ${name}} {

    long_description    ${description}: \
        This port is kept up with the GNU Radio release, which is typically updated every few months.

    version			3.6.2

    conflicts       gnuradio-next gnuradio-devel

    master_sites.mirror_subdir gnuradio
    distname		gnuradio-${version}
    master_sites	http://gnuradio.org/releases/gnuradio gnu

    checksums \
        rmd160  111ecf4bcdeb0b48be01fd0c9312c60093cedc6d \
        sha256  4ce84bf9c6591b5ddc2c384e03e40fc2f0cb8cd1add485ee2d6f26052cc6de35

    if {${configure.compiler} == "clang"} {
        patchfiles patch-clang.diff
    }

    post-configure {

        # make sure the build depends on the local version of GRUEL,
        # not any already-installed version

        if {[file exists ${prefix}/include/gruel/api.h]} {
            foreach fixfile [exec find ${build.dir} -name "build\.make"] {
                reinplace "s|${prefix}/include/gruel/|${worksrcpath}/gruel/src/include/gruel/|g" ${fixfile}
            }
        }
    }

    livecheck.type  regex
    livecheck.url	http://gnuradio.org/releases/gnuradio/?C=M&O=D
    livecheck.regex gnuradio-(\[0-9\.\]+\[0-9\])\\.

}

subport gnuradio-devel {

    long_description    ${description}: \
        This port is kept up with the GNU Radio GIT Master branch, which is typically updated every few days to week.  This version of GNU Radio generally contains fixes to, and its API is compatible with, the current GNU Radio release, and will be incorporated in an upcoming release.  This port may or not compile or function correctly, as it represents a work in progress.  If it does not work, check back in a few days.

    version             3.6.3_20121119

    conflicts           gnuradio gnuradio-next

    fetch.type          git
    git.url             git://gnuradio.org/gnuradio.git
    git.branch          afea463f079efe099a2228f0e60f4481e5edcd91

    if {${configure.compiler} == "clang"} {
        patchfiles patch-clang.diff
    }

    post-configure {

        # make sure the build depends on the local version of GRUEL,
        # not any already-installed version

        if {[file exists ${prefix}/include/gruel/api.h]} {
            foreach fixfile [exec find ${build.dir} -name "build\.make"] {
                reinplace "s|${prefix}/include/gruel/|${worksrcpath}/gruel/src/include/gruel/|g" ${fixfile}
            }
        }
    }

    livecheck.type      none

}

subport gnuradio-next {

    long_description    ${description}: \
        This port is kept up with the GNU Radio GIT Next branch, which is typically updated every few days to week.  This version of GNU Radio represents the next major release of GNU Radio, and hence its API is likely to be different than that provided by either gnuradio or gnuradio-devel.  This port may or not compile or function correctly, as it represents a work in progress.  If it does not work, check back in a few days.

    version             3.7.0_20121119

    conflicts           gnuradio gnuradio-devel

    fetch.type          git
    git.url             git://gnuradio.org/gnuradio.git
    git.branch          c0b35b4ec7c95e9d0e91d91edb81d854db2b2b72

    post-configure {

        # make sure the build depends on the local version of GRUEL,
        # not any already-installed version

        if {[file exists ${prefix}/include/gruel/api.h]} {
            foreach fixfile [exec find ${build.dir} -name "build\.make"] {
                reinplace "s|${prefix}/include/gruel/|${worksrcpath}/gruel/src/include/gruel/|g" ${fixfile}
            }
        }
    }

    livecheck.type      none

}

use_parallel_build	yes

depends_lib-append	\
    port:boost \
    port:cppunit \
    port:fftw-3-single \
    port:pkgconfig

# do VPATH build

post-extract        { file mkdir ${workpath}/build }
configure.dir       ${workpath}/build
build.dir           ${workpath}/build

# always enable VOLK, with or without orc

configure.args-append -DENABLE_VOLK=ON

# set last configure argument to the reletive path
# to the top-level cmake source

configure.post_args ../${worksrcdir}

# be verbose when building, for debugging purposes

build.post_args VERBOSE=1

# shortcut to installing all variants except Python

variant full \
    requires docs grc qtgui wxgui uhd volk wavelet jack portaudio swig sdl \
    description {Enable all variants except python} {}

# set Python variants

set pythons_suffixes {26 27}
global chosen_python_suffix
set chosen_python_suffix ""

set pythons_ports {}
foreach s ${pythons_suffixes} {
    lappend pythons_ports python${s}
}

foreach s ${pythons_suffixes} {
    set p python${s}
    set v [join [split ${s} ""] "."]
    set i [lsearch -exact ${pythons_ports} ${p}]
    set c [lreplace ${pythons_ports} ${i} ${i}]
    eval [subst {
        variant ${p} description "Build GNU Radio using Python ${v}" \
            conflicts ${c} {

            set chosen_python_suffix ${s}

            # specify the Python dependency

            depends_lib-append \
                port:${p} \
                port:py${s}-numpy

            # specify the Python version to use

            configure.args-append \
                -DPYTHON_EXECUTABLE=${prefix}/bin/python${v} \
                -DPYTHON_INCLUDE_DIR=${prefix}/Library/Frameworks/Python.framework/Versions/${v}/Headers \
                -DPYTHON_LIBRARY=${prefix}/Library/Frameworks/Python.framework/Versions/${v}/Python

            # check for variants that require Python

            if {[variant_isset docs]} {

                depends_lib-append \
                    port:py${s}-sphinx

                configure.args-append \
                    -DSPHINX_EXECUTABLE=${prefix}/bin/sphinx-build-${v}

            }

            if {[variant_isset grc]} {

                depends_lib-append \
                    port:py${s}-cheetah \
                    port:py${s}-lxml \
                    port:py${s}-gtk

            }

            if {[variant_isset qtgui]} {

                depends_lib-append \
                    port:py${s}-pyqt4

            }

            if {[variant_isset wxgui]} {

                depends_lib-append \
                    port:py${s}-wxpython-devel

            }

            # move python scripts from
            # ${prefix}/lib/python${v}/site-packages/* to
            # ${frameworks_dir}/Python.framework/Versions/${v}/
            #   lib/python${v}/site-packages/*

            post-destroot {

                xinstall -m 755 -d ${destroot}${frameworks_dir}/Python.framework/Versions/${v}/lib/python${v}
                move ${destroot}${prefix}/lib/python${v}/site-packages \
                    ${destroot}${frameworks_dir}/Python.framework/Versions/${v}/lib/python${v}

            }
        }
    }]
}

variant docs description "Install GNU Radio documentation" {

    depends_lib-append \
        port:doxygen \
        port:xmlto

    configure.args-append \
        -DENABLE_DOXYGEN=ON \
        -DENABLE_SPHINX=ON

}

if {![variant_isset docs]} {

    configure.args-append \
        -DENABLE_DOXYGEN=OFF \
        -DENABLE_SPHINX=OFF

}

variant grc description "Install GNU Radio Companion" {

    configure.args-append \
        -DENABLE_GRC=ON

}

if {![variant_isset grc]} {

    configure.args-append \
        -DENABLE_GRC=OFF

}

variant qtgui description "Install GNU Radio with support for Qt GUI" {

    depends_lib-append \
        port:qt4-mac \
        path:lib/libqwt.dylib:qwt \
        port:qwtplot3d

    configure.args-append \
        ENABLE_GR_QTGUI=ON \
        -DQT_QMAKE_EXECUTABLE=${prefix}/bin/qmake

}

if {![variant_isset qtgui]} {

    configure.args-append \
        -DENABLE_GR_QTGUI=OFF \
        -DQT_QMAKE_EXECUTABLE=

}

variant wxgui description "Install GNU Radio with support for Wx GUI" {

    depends_lib-append \
        port:wxWidgets-devel

    configure.args-append \
        -DENABLE_GR_WXGUI=ON

}

if {![variant_isset wxgui]} {

    configure.args-append \
        -DENABLE_GR_WXGUI=OFF

}

variant uhd description "Install GNU Radio with support for UHD" {

    depends_lib-append \
        path:lib/libuhd.dylib:uhd

    configure.args-append \
        -DENABLE_GR_UHD=ON \
        -DUHD_INCLUDE_DIRS=${prefix}/include \
        -DUHD_LIBRARIES=${prefix}/lib/libuhd.dylib

}

if {![variant_isset uhd]} {

    configure.args-append \
        -DENABLE_GR_UHD=OFF \
        -DUHD_INCLUDE_DIRS= \
        -DUHD_LIBRARIES=

}

variant orc description "Install GNU Radio Volk with support for ORC" {

    depends_lib-append \
        port:orc

    configure.args-append \
        -DORCC_EXECUTABLE=${prefix}/bin/orcc

}

if {![variant_isset orc]} {

    configure.args-append \
        -DORCC_EXECUTABLE=

}

variant wavelet description "Install GNU Radio Wavelet component" {

    depends_lib-append \
        port:gsl

    configure.args-append \
        ENABLE_GR_WAVELET=ON

}

if {![variant_isset wavelet]} {

    configure.args-append \
        -DENABLE_GR_WAVELET=OFF

}

variant jack description "Install GNU Radio with support for JACK audio" {

    depends_lib-append \
        port:jack

    configure.args-append \
        -DJACK_INCLUDE_DIR=${prefix}/include \
        -DJACK_LIBRARY=${prefix}/lib/libjack.dylib

}

if {![variant_isset jack]} {

    configure.args-append \
        -DJACK_INCLUDE_DIR= \
        -DJACK_LIBRARY=

}

variant portaudio description "Install GNU Radio with support for portaudio audio" {

    depends_lib-append \
        port:portaudio

    configure.args-append \
        -DPORTAUDIO_INCLUDE_DIRS=${prefix}/include \
        -DPORTAUDIO_LIBRARIES=${prefix}/lib/libportaudio.dylib

}

if {![variant_isset portaudio]} {

    configure.args-append \
        -DPORTAUDIO_INCLUDE_DIRS= \
        -DPORTAUDIO_LIBRARIES=

}

variant swig description "Install GNU Radio with support for SWIG-base Python bindings" {

    depends_lib-append \
        port:swig-python

    configure.args-append \
        -DSWIG_EXECUTABLE=${prefix}/bin/swig

}

if {![variant_isset swig]} {

    configure.args-append \
        -DSWIG_EXECUTABLE=

}

variant sdl description "Install GNU Radio with support for SDL-based video" {

    depends_lib-append \
        port:libsdl

    configure.args-append \
        -DENABLE_GR_VIDEO_SDL=ON \
        -DSDLMAIN_LIBRARY=${prefix}/lib/libSDLmain.a \
        -DSDL_INCLUDE_DIR=${prefix}/include/SDL

}

if {![variant_isset sdl]} {

    configure.args-append \
        -DENABLE_GR_VIDEO_SDL=OFF \
        -DSDLMAIN_LIBRARY= \
        -DSDL_INCLUDE_DIR=

}
