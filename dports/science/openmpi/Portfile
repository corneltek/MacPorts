# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem 1.0

# TODO: Improve universal.  The only issue is with ${prefix}/include/openmpi/mpif-config.h
#       It requires preprocessing, so it will work with #include directives
#       but not if clients use INCLUDE
#PortGroup           muniversal 1.0
universal_variant    no

name			openmpi
version			1.7.2
revision                1
set branch		[join [lrange [split ${version} .] 0 1] .]
categories		science parallel net
platforms		darwin
license			BSD
maintainers		mww openmaintainer
description		A High Performance Message Passing Library
long_description	Open MPI is a project combining technologies and resources \
			from several other projects (FT-MPI, LA-MPI, LAM/MPI, and \
			PACX-MPI) in order to build the best MPI library available. A \
			completely new MPI-2 compliant implementation, Open MPI offers \
			advantages for system and software vendors, application developers \
			and computer science researchers.

homepage		http://www.open-mpi.org/
set subdir		ompi/v${branch}/downloads/
master_sites		http://www.open-mpi.org/software/${subdir} \
			http://www.open-mpi.de/software/${subdir} \
			http://icl.cs.utk.edu/open-mpi/${subdir}
# keep md5 & sha1 checksums as they are published on http://www.open-mpi.org/software/ompi/v1.7/
checksums           md5     b897b92100bd13b367e651df483421d5 \
                    sha1    89676c1171784b1c26e1598caf88e87f897f6653 \
                    rmd160  ab20fb0a9a4adf23267e5f7b998c23e2ce397e93 \
                    sha256  82a1c477dcadad2032ab24d9be9e39c1042865965841911f072c49aa3544fd85

use_bzip2		yes

pre-extract { file mkdir ${workpath}/build }

# https://trac.macports.org/ticket/39089
compiler.blacklist	gcc-4.0

compiler.blacklist-append  llvm-gcc-4.2 macports-llvm-gcc-4.2

configure.dir	${workpath}/build
configure.cmd	${worksrcpath}/configure
configure.args	--enable-mpi-f77 --enable-mpi-f90 \
		--sysconfdir=${prefix}/etc/${name} \
		--includedir=${prefix}/include/${name} \
		--bindir=${prefix}/lib/${name}/bin \
		--mandir=${prefix}/share/man

build.dir	${configure.dir}

destroot.dir	${build.dir}
set wrappers	{mpicc mpicxx mpic++ mpif77 mpif90}
post-destroot {
	foreach bin {mpirun mpiexec} {
		system -W ${destroot}${prefix}/bin \
			"ln -sf ${prefix}/lib/${name}/bin/orterun open${bin}"
	}
	foreach bin ${wrappers} {
		system -W ${destroot}${prefix}/bin \
			"ln -sf ${prefix}/lib/${name}/bin/opal_wrapper open${bin}"
		system -W ${destroot}${prefix}/share/${name} \
			"ln -sf ${prefix}/share/${name}/${bin}-wrapper-data.txt \
			open${bin}-wrapper-data.txt"
	}

	file delete ${destroot}${prefix}/share/vampirtrace/config.log
}

conflicts       mpich mpich2 mpich3 lammpi mpich-devel mpich3-devel

variant threads description {enable threads for MPI applications} {
	configure.args-append --enable-mpi-thread-multiple
}

variant valgrind description {enable valgrind support} {
	depends_lib-append    path:${prefix}/lib/pkgconfig/valgrind.pc:valgrind
	configure.args-append --enable-debug --enable-memchecker --with-valgrind=${prefix}
}

set gcc_versions {4.3 4.4 4.5 4.6 4.7 4.8 4.9}
set default_fortran_variant +gcc48
set g95_conflicts {}

foreach ver ${gcc_versions} {
    set ver_no_dot [join [split ${ver} "."] ""]

    set variant_line {variant gcc${ver_no_dot} description "build with gfortran from gcc${ver_no_dot}" conflicts g95}

    foreach over ${gcc_versions} {
        if {${ver} == ${over}} {
            continue
        }

        set over_no_dot [join [split ${over} "."] ""]
        append variant_line " conflicts gcc${over_no_dot}"
    }
    append variant_line { {}}

    eval $variant_line

    append g95_conflicts " conflicts gcc${ver_no_dot}"

    if {[variant_isset gcc${ver_no_dot}]} {
        if {${default_fortran_variant} != "+gcc${ver_no_dot}"} {
            set default_fortran_variant ""
        }
    }
}

eval [concat {variant g95 description {build with g95}} $g95_conflicts {{}}]

if {[variant_isset g95]} {
    if {${default_fortran_variant} != "+g95"} {
        set default_fortran_variant ""
    }
}

if {${default_fortran_variant} != ""} {
    default_variants "${default_fortran_variant}"
}

foreach ver ${gcc_versions} {
    set ver_no_dot [join [split ${ver} "."] ""]

    if {[variant_isset gcc${ver_no_dot}]} {
        depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
        depends_build-append port:gcc${ver_no_dot}

        configure.fc  ${prefix}/bin/gfortran-mp-${ver}
        configure.f77 ${prefix}/bin/gfortran-mp-${ver}
        configure.f90 ${prefix}/bin/gfortran-mp-${ver}
    }
}

if {[variant_isset g95]} {
    depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
    depends_build-append port:g95

    configure.fc ${prefix}/bin/g95
    configure.f77 ${prefix}/bin/g95
    configure.f90 ${prefix}/bin/g95
}

livecheck.type	regex
livecheck.url	http://www.open-mpi.org/software/ompi/v1.7/
livecheck.regex	openmpi-(\[0-9\.\]+).tar.bz2

# remove -arch from ldflags, ticket #22833
configure.ld_archflags
# avoid building against older installed version, ticket #23864
configure.cppflags-delete -I${prefix}/include
configure.ldflags-delete -L${prefix}/lib

configure.ccache no
