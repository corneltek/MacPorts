From 20d0cb2d0c60c0feeb5f6ff5518b9d3b41574e2b Mon Sep 17 00:00:00 2001
From: Karl Wette <karl.wette@ligo.org>
Date: Sun, 30 Mar 2014 00:20:56 +0100
Subject: [PATCH] SWIG: make wrappings compatible with SWIG v3.0.0

- %typemaps_string_alloc() has an extra argument
- structs containing pointer-to-const members now
  need SWIGLAL(IMMUTABLE_MEMBERS(...))

(cherry picked from commit 4558d05958962d8240e19651c72dc1699fa63807)
---
 lalpulsar/src/ComputeSky.h               | 3 +++
 lalpulsar/src/DopplerFullScan.h          | 2 +-
 lalpulsar/src/DopplerLatticeCovering.h   | 3 +++
 lalpulsar/src/DopplerScan.h              | 2 +-
 lalpulsar/src/GeneratePulsarSignal.h     | 3 +++
 lalpulsar/src/PtoleMetric.h              | 3 +++
 lalpulsar/src/PulsarSimulateCoherentGW.h | 3 +++
 lalpulsar/src/PulsarTimes.h              | 3 +++
 8 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/lalpulsar/src/ComputeSky.h b/lalpulsar/src/ComputeSky.h
index 5cf8c29..4ece575 100644
--- a/lalpulsar/src/ComputeSky.h
+++ b/lalpulsar/src/ComputeSky.h
@@ -125,6 +125,9 @@ extern "C" {
 /**
  * This structure contains the parameters for the LALComputeSky() routine.
  */
+#ifdef SWIG /* SWIG interface directives */
+SWIGLAL(IMMUTABLE_MEMBERS(tagCSParams, edat));
+#endif /* SWIG */
 typedef struct
 tagCSParams
 {
diff --git a/lalpulsar/src/DopplerFullScan.h b/lalpulsar/src/DopplerFullScan.h
index 345cc45..2a901bd 100644
--- a/lalpulsar/src/DopplerFullScan.h
+++ b/lalpulsar/src/DopplerFullScan.h
@@ -56,7 +56,7 @@ extern "C" {
 
 /** initialization struct for full InitDopplerScan() [UNDER CONSTRUCTION] */
 #ifdef SWIG /* SWIG interface directives */
-SWIGLAL(IMMUTABLE_MEMBERS(tagDopplerFullScanInit, gridFile));
+SWIGLAL(IMMUTABLE_MEMBERS(tagDopplerFullScanInit, Detector, ephemeris, gridFile));
 #endif /* SWIG */
 typedef struct tagDopplerFullScanInit {
   DopplerRegion searchRegion;		/**< Doppler-space region to be covered + scanned */
diff --git a/lalpulsar/src/DopplerLatticeCovering.h b/lalpulsar/src/DopplerLatticeCovering.h
index 278e0aa..939546a 100644
--- a/lalpulsar/src/DopplerLatticeCovering.h
+++ b/lalpulsar/src/DopplerLatticeCovering.h
@@ -38,6 +38,9 @@ extern "C" {
 /*---------- DEFINES ----------*/
 
 /*---------- external types ----------*/
+#ifdef SWIG /* SWIG interface directives */
+SWIGLAL(IMMUTABLE_MEMBERS(tagDopplerLatticeInit, ephemeris));
+#endif /* SWIG */
 typedef struct tagDopplerLatticeInit {
   DopplerRegion searchRegion;		/**< Doppler-space region to be covered + scanned */
   REAL8 metricMismatch;			/**< for GRID_METRIC and GRID_ISOTROPIC */
diff --git a/lalpulsar/src/DopplerScan.h b/lalpulsar/src/DopplerScan.h
index 4636eea..ce6d26b 100644
--- a/lalpulsar/src/DopplerScan.h
+++ b/lalpulsar/src/DopplerScan.h
@@ -131,7 +131,7 @@ typedef struct tagDopplerSkyGrid {
 
 /** initialization-structure passed to InitDopplerSkyScan() */
 #ifdef SWIG /* SWIG interface directives */
-SWIGLAL(IMMUTABLE_MEMBERS(tagDopplerSkyScanInit, skyGridFile));
+SWIGLAL(IMMUTABLE_MEMBERS(tagDopplerSkyScanInit, Detector, ephemeris, skyGridFile));
 #endif /* SWIG */
 typedef struct tagDopplerSkyScanInit {
   CHAR *skyRegionString;	/**< sky-region to search: format polygon '(a1,d1), (a2,d2), ..' */
diff --git a/lalpulsar/src/GeneratePulsarSignal.h b/lalpulsar/src/GeneratePulsarSignal.h
index 788d441..3213a5f 100644
--- a/lalpulsar/src/GeneratePulsarSignal.h
+++ b/lalpulsar/src/GeneratePulsarSignal.h
@@ -296,6 +296,9 @@ typedef struct tagPulsarSignalParams {
 /**
  * Parameters defining the SFTs to be returned from LALSignalToSFTs().
  */
+#ifdef SWIG /* SWIG interface directives */
+SWIGLAL(IMMUTABLE_MEMBERS(tagSFTParams, timestamps, noiseSFTs, window));
+#endif /* SWIG */
 typedef struct tagSFTParams {
   REAL8 Tsft;			 /**< length of each SFT in seconds */
   const LIGOTimeGPSVector *timestamps; /**< timestamps to produce SFTs for (can be NULL) */
diff --git a/lalpulsar/src/PtoleMetric.h b/lalpulsar/src/PtoleMetric.h
index 22efe2d..6064841 100644
--- a/lalpulsar/src/PtoleMetric.h
+++ b/lalpulsar/src/PtoleMetric.h
@@ -107,6 +107,9 @@ typedef enum
  * those under \ref StackMetric_h; it contains the bare
  * necessities, not needing function pointers etc.
  */
+#ifdef SWIG /* SWIG interface directives */
+SWIGLAL(IMMUTABLE_MEMBERS(tagPtoleMetricIn, site, ephemeris));
+#endif /* SWIG */
 typedef struct
 tagPtoleMetricIn
 {
diff --git a/lalpulsar/src/PulsarSimulateCoherentGW.h b/lalpulsar/src/PulsarSimulateCoherentGW.h
index fc6d967..8f8b71c 100644
--- a/lalpulsar/src/PulsarSimulateCoherentGW.h
+++ b/lalpulsar/src/PulsarSimulateCoherentGW.h
@@ -283,6 +283,9 @@ typedef struct tagPulsarCoherentGW {
  * This structure contains information required to determine the response
  * of a detector to a gravitational waveform.
  */
+#ifdef SWIG /* SWIG interface directives */
+SWIGLAL(IMMUTABLE_MEMBERS(tagPulsarDetectorResponse, transfer, site, ephemerides));
+#endif /* SWIG */
 typedef struct tagPulsarDetectorResponse {
   const COMPLEX8FrequencySeries *transfer;    /**< The frequency-dependent transfer function of the interferometer, in ADC counts per unit strain amplitude at any given frequency;
                                          * if absent, the response will be given in raw strain rather than ADC output */
diff --git a/lalpulsar/src/PulsarTimes.h b/lalpulsar/src/PulsarTimes.h
index 940d53a..47aed54 100644
--- a/lalpulsar/src/PulsarTimes.h
+++ b/lalpulsar/src/PulsarTimes.h
@@ -162,6 +162,9 @@ extern "C" {
  * discussion of those fields must be deferred to the documentation of
  * the individual modules that use those particular fields.
  */
+#ifdef SWIG /* SWIG interface directives */
+SWIGLAL(IMMUTABLE_MEMBERS(tagPulsarTimesParamStruc, ephemeris, site));
+#endif /* SWIG */
 typedef struct tagPulsarTimesParamStruc {
   LIGOTimeGPS epoch; 	/**< A reference detector time; all
                          * other times in the transformation are represented as \c REAL8
-- 
1.9.1

