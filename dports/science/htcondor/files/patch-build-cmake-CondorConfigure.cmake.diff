--- build/cmake/CondorConfigure.cmake.orig	2013-10-27 19:39:00.000000000 -0700
+++ build/cmake/CondorConfigure.cmake	2013-10-27 19:40:24.000000000 -0700
@@ -270,15 +270,6 @@
 	check_cxx_compiler_flag(-std=c++11 cxx_11)
 	if (cxx_11)
 
-		# Clang requires some additional C++11 flags, as the default stdlib
-		# is from an old GCC version.
-		if ( ${OS_NAME} STREQUAL "DARWIN" AND "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" )
-			set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++ -lc++")
-			set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -lc++")
-			set(CMAKE_STATIC_LINKER_FLAGS "${CMAKE_STATIC_LINKER_FLAGS} -lc++")
-			set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lc++")
-		endif()
-
 		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
 
 		check_cxx_source_compiles("
@@ -291,13 +282,6 @@
 		}
 		" PREFER_CPP11 )
 
-		# Note - without adding -lc++ to the CXX flags, the linking of the test
-		# above will fail for clang.  It doesn't seem strictly necessary though,
-		# so we remove this afterward.
-		if ( ${OS_NAME} STREQUAL "DARWIN" AND "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" )
-			string(REPLACE "-lc++" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
-		endif()
-
 	endif (cxx_11)
 
 	if (NOT PREFER_CPP11)
