# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           mpi 1.0

name                quantum-espresso
version             5.3.0
revision            0
categories          science
platforms           darwin
license             GPL-2
maintainers         dstrubbe

description         Plane-wave density-functional theory code

long_description    An integrated suite of open-source computer codes for electronic-structure \
                    calculations and materials modeling at the nanoscale. It is based on density-functional \
                    theory, plane waves, and pseudopotentials. \
                    This package will build pw, pp, ld1, upf, cp, and ph.

homepage            http://www.quantum-espresso.org
# get link from http://www.qe-forge.org/gf/project/q-e/frs/?action=FrsReleaseBrowse&frs_package_id=18
set url http://www.qe-forge.org/gf/download/frsrelease/204

master_sites        ${url}/912:espresso ${url}/904:atomic ${url}/905:PHonon
distfiles           espresso-${version}${extract.suffix}:espresso \
                    atomic-${version}${extract.suffix}:atomic \
                    PHonon-${version}${extract.suffix}:PHonon

checksums           espresso-${version}${extract.suffix} \
                       rmd160  6ae9741654234bb780bc87b79b640218bf3fa781 \
                       sha256  547363c4822d7ffd9ca85bc77a0c6b91b2885b69ccf6783eeddcdddece308fd8 \
                    atomic-${version}${extract.suffix} \
                       rmd160  d6802aec5efe0025d0b747aea4cba44bfadb6a3c \
                       sha256  8f1a564f668b979b8eaeebd6b6f68c2a60eecd14d6d3c451a7a1e8de06f24d23 \
                    PHonon-${version}${extract.suffix} \
                       rmd160  e55c7f3fb816a96e995d136495232f2139c5dd46 \
                       sha256  17e198e421064de072d730c75da0b52a437cf3abe0a030306de97ff22efe9b15

# or vecLibFort, or OpenBLAS(-devel)
depends_lib-append  port:atlas port:fftw-3

# remove erroneous check on consistency of F90 and MPIF90;
# remove erroneous use of cpp instead of '-x f95-cpp-input'
patchfiles          patch-install-configure.diff \
                    patch-Makefile.diff \
                    patch-PHonon-examples-GRID_example-run_example_3.diff \
                    patch-CPV-src-Makefile.diff

compilers.choose    cc cpp fc
# g95 is not compatible with OpenMP
mpi.setup           default require_fortran -g95

configure.optflags  -O3

pre-test {
    if {[mpi_variant_isset]} {
        if {![catch {sysctl hw.ncpu} result]} {
            set njobs $result
            set n2jobs [expr {$result*2}]
        } else {
            set njobs 1
            set n2jobs 1
        }
        reinplace -W ${worksrcpath} "s|PARA_PREFIX=\" \"|PARA_PREFIX=\"${mpi.exec} -n ${njobs}\"|" environment_variables
        reinplace -W ${worksrcpath} "s|PARA_IMAGE_PREFIX=\"mpirun -np 4\"|PARA_IMAGE_PREFIX=\"${mpi.exec} -n ${n2jobs}\"|" environment_variables
    }
}

# there is now a testsuite, 'make test-suite'
test.run            yes

# note: this will download some pseudopotentials and maybe other stuff
test {
    ui_msg "Running PW examples"
    system -W ${worksrcpath}/PW/examples "./run_all_examples"

    # some PHonon tests need gnuplot, actually.
    ui_msg "Running PHonon examples"
    system -W ${worksrcpath}/PHonon/examples "./run_all_examples"
    ui_msg "Inspect logfile to see if tests passed."
}

distname espresso-${version}

post-extract {
    move ${worksrcpath}/../PHonon    ${worksrcpath}
    move ${worksrcpath}/../QHA       ${worksrcpath}
    move ${worksrcpath}/../PlotPHon  ${worksrcpath}
    move ${worksrcpath}/../atomic    ${worksrcpath}
}

pre-configure {
    set linalg ${prefix}/lib/libsatlas.dylib
    # using cpp separately does not work because it tries to output .f90 to .F90, which is the same file in OSX
    configure.args-append  FC=${configure.fc} F90FLAGS="${configure.fcflags} -x f95-cpp-input" \
        F77="${configure.fc}" FFLAGS="${configure.fflags}" F90="${configure.fc}" \
        CC="${configure.cc}" CFLAGS="${configure.cflags}" \
        BLAS_LIBS="${linalg}" LAPACK_LIBS="${linalg}" FFT_LIBS="${prefix}/lib/libfftw3.dylib" \
        --prefix=${destroot}${prefix}/bin --with-scalapack=no
    # install anything else? e.g. pseudos?
    if {[mpi_variant_isset]} {
        configure.args-append  --enable-parallel MPIF90="${configure.fc}"
    } else {
        configure.args-append  --disable-parallel
    }
}

variant scalapack description {Build with ScaLAPACK for parallel linear algebra} {
    depends_lib-append     port:scalapack
    configure.args-delete  --with-scalapack=no
    configure.args-append  SCALAPACK_LIBS="${prefix}/lib/libscalapack.dylib"
    if {![mpi_variant_isset]} {
        ui_error "+scalapack requires an MPI variant. Choose +mpich, +mpich_devel, +openmpi, or +openmpi_devel."
        return -code error "+scalapack requires an MPI variant."
    }
    mpi.enforce_variant     scalapack
}

if {[mpi_variant_isset]} {
    default_variants-append +scalapack
}

use_parallel_build no
build.target  all-j
# as patched, builds pw pp ld1 upf ph

# threads (including fftw/blas)

#BEWARE: you are not using multi-threaded FFTs!

#variant threads description {Build with support for OpenMP threads} {
    # not compatible with g95. What about threaded FFTW3?
#    configure.args-append   --enable-openmp
#    configure.fcflags-append -fopenmp
#    configure.args-append   --with-linalg-libs="-L${prefix}/lib -ltatlas"
#}

livecheck.type      regex
livecheck.url       ${homepage}/news/
livecheck.regex     Version (\[0-9.\]+) of Quantum ESPRESSO is available for download.
