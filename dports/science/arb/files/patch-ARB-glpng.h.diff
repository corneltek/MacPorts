--- GL/glpng/glpng.h.orig	2012-11-17 16:18:10.000000000 -0500
+++ GL/glpng/glpng.h	2012-11-17 16:20:13.000000000 -0500
@@ -47,28 +47,28 @@
 #endif
 
     /* Mipmapping parameters */
-#define PNG_NOMIPMAPS      0 /* No mipmapping                        */
-#define PNG_BUILDMIPMAPS  -1 /* Calls a clone of gluBuild2DMipmaps() */
-#define PNG_SIMPLEMIPMAPS -2 /* Generates mipmaps without filtering  */
+#define GLPNG_NOMIPMAPS      0 /* No mipmapping                        */
+#define GLPNG_BUILDMIPMAPS  -1 /* Calls a clone of gluBuild2DMipmaps() */
+#define GLPNG_SIMPLEMIPMAPS -2 /* Generates mipmaps without filtering  */
 
     /* Who needs an "S" anyway? */
-#define PNG_NOMIPMAP     PNG_NOMIPMAPS
-#define PNG_BUILDMIPMAP  PNG_BUILDMIPMAPS
-#define PNG_SIMPLEMIPMAP PNG_SIMPLEMIPMAPS
+#define GLPNG_NOMIPMAP     GLPNG_NOMIPMAPS
+#define GLPNG_BUILDMIPMAP  GLPNG_BUILDMIPMAPS
+#define GLPNG_SIMPLEMIPMAP GLPNG_SIMPLEMIPMAPS
 
     /* Transparency parameters */
-#define PNG_CALLBACK  -3 /* Call the callback function to generate alpha   */
-#define PNG_ALPHA     -2 /* Use alpha channel in PNG file, if there is one */
-#define PNG_SOLID     -1 /* No transparency                                */
-#define PNG_STENCIL    0 /* Sets alpha to 0 for r=g=b=0, 1 otherwise       */
-#define PNG_BLEND1     1 /* a = r+g+b                                      */
-#define PNG_BLEND2     2 /* a = (r+g+b)/2                                  */
-#define PNG_BLEND3     3 /* a = (r+g+b)/3                                  */
-#define PNG_BLEND4     4 /* a = r*r+g*g+b*b                                */
-#define PNG_BLEND5     5 /* a = (r*r+g*g+b*b)/2                            */
-#define PNG_BLEND6     6 /* a = (r*r+g*g+b*b)/3                            */
-#define PNG_BLEND7     7 /* a = (r*r+g*g+b*b)/4                            */
-#define PNG_BLEND8     8 /* a = sqrt(r*r+g*g+b*b)                          */
+#define GLPNG_CALLBACK  -3 /* Call the callback function to generate alpha   */
+#define GLPNG_ALPHA     -2 /* Use alpha channel in GLPNG file, if there is one */
+#define GLPNG_SOLID     -1 /* No transparency                                */
+#define GLPNG_STENCIL    0 /* Sets alpha to 0 for r=g=b=0, 1 otherwise       */
+#define GLPNG_BLEND1     1 /* a = r+g+b                                      */
+#define GLPNG_BLEND2     2 /* a = (r+g+b)/2                                  */
+#define GLPNG_BLEND3     3 /* a = (r+g+b)/3                                  */
+#define GLPNG_BLEND4     4 /* a = r*r+g*g+b*b                                */
+#define GLPNG_BLEND5     5 /* a = (r*r+g*g+b*b)/2                            */
+#define GLPNG_BLEND6     6 /* a = (r*r+g*g+b*b)/3                            */
+#define GLPNG_BLEND7     7 /* a = (r*r+g*g+b*b)/4                            */
+#define GLPNG_BLEND8     8 /* a = sqrt(r*r+g*g+b*b)                          */
 
     typedef struct {
         unsigned int Width;
