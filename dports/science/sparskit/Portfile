# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0

name                sparskit
version             2
categories          science
platforms           darwin
maintainers         gmail.com:dstrubbe
license             LGPL-2.1+

description         A basic tool-kit for sparse matrix computations

long_description    A basic tool-kit for sparse matrix computations: programs \
                    for converting data structures, printing simple \
                    statistics on a matrix, plotting a matrix profile, \
                    performing basic linear algebra operations with sparse \
                    matrices and so on.

homepage            http://www-users.cs.umn.edu/~saad/software/SPARSKIT
master_sites        ${homepage}
distname            SPARSKIT${version}

checksums           rmd160  95554593896300d7823f40956a428e8e7c57bb78 \
                    sha1    702bb646024f62fafbd827aa29d4f8994a74b90a

use_configure       no

patchfiles          patch-makefile.diff \
                    patch-INFO-makefile.diff \
                    patch-INOUT-makefile.diff \
                    patch-MATGEN-FEM-makefile.diff

build.args          OPT="-c -O3"

use_parallel_build  yes

test.run            yes
test.args           FFLAGS=-O3
# test requires FC, FFLAGS set because test makefiles lack explicit rule for .f -> .o and these are in the implicit rule

destroot {
    xinstall ${worksrcpath}/libskit.a ${destroot}${prefix}/lib/
}

set gcc_versions {4.3 4.4 4.5 4.6 4.7 4.8 4.9}
set default_fortran_variant +gcc48
set g95_conflicts {}

foreach ver ${gcc_versions} {
    set ver_no_dot [join [split ${ver} "."] ""]

    set variant_line {variant gcc${ver_no_dot} description "build with gfortran from gcc${ver_no_dot}" conflicts g95}

    foreach over ${gcc_versions} {
        if {${ver} == ${over}} {
            continue
        }

        set over_no_dot [join [split ${over} "."] ""]
        append variant_line " conflicts gcc${over_no_dot}"
    }
    append variant_line { {}}

    eval $variant_line

    append g95_conflicts " conflicts gcc${ver_no_dot}"

    if {[variant_isset gcc${ver_no_dot}]} {
        if {${default_fortran_variant} != "+gcc${ver_no_dot}"} {
            set default_fortran_variant ""
        }
    }
}

eval [concat {variant g95 description {build with g95}} $g95_conflicts {{}}]

if {[variant_isset g95]} {
    if {${default_fortran_variant} != "+g95"} {
        set default_fortran_variant ""
    }
}

if {${default_fortran_variant} != ""} {
    default_variants-append "${default_fortran_variant}"
}

foreach ver ${gcc_versions} {
    set ver_no_dot [join [split ${ver} "."] ""]

    if {[variant_isset gcc${ver_no_dot}]} {
        depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
        depends_build-append port:gcc${ver_no_dot}

        build.args-append  F77=${prefix}/bin/gfortran-mp-${ver}
        test.args-append   F77=${prefix}/bin/gfortran-mp-${ver} FC=${prefix}/bin/gfortran-mp-${ver}
    }
}

if {[variant_isset g95]} {
    depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
    depends_build-append port:g95

    build.args-append  F77=${prefix}/bin/g95
    test.args-append   F77=${prefix}/bin/g95 FC=${prefix}/bin/g95
}

livecheck.type      regex
livecheck.url       [lindex ${master_sites} 0]
livecheck.regex     SPARSKIT(\[0-9.\]+)${extract.suffix}
