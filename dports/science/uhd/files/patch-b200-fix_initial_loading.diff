--- host/lib/usrp/b200/b200_impl.cpp.orig
+++ host/lib/usrp/b200/b200_impl.cpp
@@ -125,8 +125,7 @@ static device_addrs_t b200_find(const device_addr_t &hint)
     // so that re-enumeration after fw load can occur successfully.
     // This requirement is a courtesy of libusb1.0 on windows.
     size_t found = 0;
-    std::vector<usb_device_handle::sptr> b200_device_handles = get_b200_device_handles(hint);
-    BOOST_FOREACH(usb_device_handle::sptr handle, b200_device_handles) {
+    BOOST_FOREACH(usb_device_handle::sptr handle, get_b200_device_handles(hint)) {
         //extract the firmware path for the b200
         std::string b200_fw_image;
         try{
@@ -157,7 +156,7 @@ static device_addrs_t b200_find(const device_addr_t &hint)
     //search for the device until found or timeout
     while (boost::get_system_time() < timeout_time and b200_addrs.empty() and found != 0)
     {
-        BOOST_FOREACH(usb_device_handle::sptr handle, b200_device_handles)
+        BOOST_FOREACH(usb_device_handle::sptr handle, get_b200_device_handles(hint))
         {
             usb_control::sptr control;
             try{control = usb_control::make(handle, 0);}
