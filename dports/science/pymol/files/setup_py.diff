--- setup.py.orig
+++ setup.py
@@ -47,18 +47,6 @@
     pmap(_single_compile, objects)
     return objects
 
-# handle extra arguments
-class options:
-    osx_frameworks = False
-
-try:
-    import argparse
-    parser = argparse.ArgumentParser()
-    parser.add_argument('--osx-frameworks', action="store_true")
-    options, sys.argv = parser.parse_known_args(namespace=options)
-except ImportError:
-    print "argparse not available"
-
 jobs = int(os.getenv('JOBS', 0))
 pmap = map if jobs == 1 else multiprocessing.pool.ThreadPool(jobs or None).map
 
@@ -246,22 +234,17 @@
     try:
         prefix_path = os.environ['PREFIX_PATH'].split(os.pathsep)
     except KeyError:
-        prefix_path = ["/usr", "/usr/X11", "/opt/local", "/sw"]
+        prefix_path = ["@PREFIX@", "/usr", "/usr/X11"]
 
     for prefix in prefix_path:
         inc_dirs += filter(os.path.isdir, [prefix + s for s in ["/include", "/include/freetype2"]])
         lib_dirs += filter(os.path.isdir, [prefix + s for s in ["/lib64", "/lib"]])
 
-    if sys.platform == 'darwin' and options.osx_frameworks:
-        ext_link_args += [
-            "-framework", "OpenGL",
-            "-framework", "GLUT",
-        ]
-    else:
-        glut = posix_find_lib(['glut', 'freeglut'], lib_dirs)
-        pyogl_libs += ["GL", "GLU", glut]
+    glut = posix_find_lib(['glut', 'freeglut'], lib_dirs)
 
     libs += ["GLEW"]
+    pyogl_libs += ["GL", "GLU", glut]
+
     libs += pyogl_libs
 
     ext_comp_args += ["-ffast-math", "-funroll-loops", "-O3", "-fcommon"]
