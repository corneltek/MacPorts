# HG changeset patch
# User Sean Farley <sean.michael.farley@gmail.com>
# Date 1397874113 18000
#      Fri Apr 18 21:21:53 2014 -0500
# Node ID 5eceb5b8043a7a763ac0c1e18fbac272477670f5
# Parent  d903f416ef63711865f0b8325cd5bb06132af03e
contrib: for the love of god and everything holy don't use '#' for continuation

diff --git a/contrib/gaussclumps/lib/backtrans.f b/contrib/gaussclumps/lib/backtrans.f
--- a/contrib/gaussclumps/lib/backtrans.f
+++ b/contrib/gaussclumps/lib/backtrans.f
@@ -1,7 +1,7 @@
 	subroutine backtrans(image,nimage,points,temp,npts,blanking,
-     #         rms,npix1,npix2,npix3,refpix,val,inc)
+     &         rms,npix1,npix2,npix3,refpix,val,inc)
 	real*4 refpix(3),val(3),inc(3)
 	integer(kind=4), intent(in) :: nimage
 	real*4 image (nimage), points(3,nimage)
 	real*4 temp(npix1,npix2,npix3)
 
diff --git a/contrib/gaussclumps/lib/cubcurfit.f b/contrib/gaussclumps/lib/cubcurfit.f
--- a/contrib/gaussclumps/lib/cubcurfit.f
+++ b/contrib/gaussclumps/lib/cubcurfit.f
@@ -39,11 +39,11 @@ c
 c
 c     test for convergence
 c
    31 continue
 	ddel=abs(a(1)-a(2))*(a(1)+a(2))/
-     #       (wid(1)+wid(2)+0.5*(a(1)+a(2))**2)
+     &       (wid(1)+wid(2)+0.5*(a(1)+a(2))**2)
 	do 32 i=1,nterms
 	 li=lista(i)
          del = abs(a(li)-b(li))
 	if (li.le.3) then
 	 del = del/abs(a(li)) / (1.+wid(li)/a(li)**2)
@@ -78,11 +78,11 @@ c
           beta(j) = 0.
 	endif
        do 35 k=1,j
 	lk=lista(k)
 	if ( (lk.eq.11 .or. lk.eq.7) .and. 
-     #       (lj.eq.11 .or. lj.eq.7) ) then
+     &       (lj.eq.11 .or. lj.eq.7) ) then
 	  alpha(j,k)=8.*sm*a(lk)*a(lj)
 	else if (lk.ge.8 .and. lj.eq.lk) then
 	  alpha(j,k)=2.*4.*sc/wid(lj-7)
 	else
           alpha(j,k) = 0.
@@ -100,26 +100,26 @@ c
 	lj=lista(j)
       beta(j)=beta(j)+deriv(lj)*(res*weight(ix)*rr)
       do 46 k=1,j
 	lk=lista(k)
    46 alpha(j,k)=
-     #    alpha(j,k)+deriv(lj)*deriv(lk)*(weight(ix)*rr)
+     &    alpha(j,k)+deriv(lj)*deriv(lk)*(weight(ix)*rr)
    50 continue
       do 53 j=1,nterms
       do 53 k=1,j
    53 alpha(k,j)=alpha(j,k)
 c
 c     evaluate chi square at starting point.
 c
 	if (chisqr.eq.0.) then
 	  chisq1=
-     #   fchisq(y,npts,free,yfit,weight,ipt,1.e30,bigger,s0,a)
+     &   fchisq(y,npts,free,yfit,weight,ipt,1.e30,bigger,s0,a)
 	else
 	      chisq1=chisqr
 	endif
 	write (termou,'(1x,a,1p,8g9.2)') 
-     #    'chisqr ',chisq1,a(1),a(2),a(4),a(3),a(5),a(6)
+     &    'chisqr ',chisq1,a(1),a(2),a(4),a(3),a(5),a(6)
 c
 c     invert modified curvature matrix to find new parameters.
 c
       int = 0
    71 int = int + 1
@@ -178,11 +178,11 @@ c     if chi square increased, increase 
 	call quadini(b)
       do 92 i=1,npts
       ix = ipt(i)
    92 yfit(ix)=functn(ix,b,x,nterms)
       chisqr=
-     #  fchisq(y,npts,free,yfit,weight,ipt,chisq1,bigger,s0,b)
+     &  fchisq(y,npts,free,yfit,weight,ipt,chisq1,bigger,s0,b)
 	if (.not.bigger) goto 31
 96   	flambda=flambda*fnu
       go to 71
 c
   101 if(iter-itmax)103,102,102
@@ -287,11 +287,11 @@ c
   130	continue
   140	return
 	end
 
 	function 
-     #   fchisq (y,npts,free,yfit,weight,ipt,chiold,bigger,s0,a)
+     &   fchisq (y,npts,free,yfit,weight,ipt,chiold,bigger,s0,a)
 	common /termpointer/ lista,peak,cent,wid
 	dimension lista(11),cent(3),wid(3)
 	real*4 peak
 	dimension a(11)
 	dimension y(1), yfit(1), weight(1), ipt(1)
diff --git a/contrib/gaussclumps/lib/cubfit.f b/contrib/gaussclumps/lib/cubfit.f
--- a/contrib/gaussclumps/lib/cubfit.f
+++ b/contrib/gaussclumps/lib/cubfit.f
@@ -1,8 +1,8 @@
 	 subroutine cubfit (image,nimage,npts,nterms,a,sigmaa,
-     #               flambdin,imagfit,chisqr,eps,itmax,points,s0,
-     #               conv,p0,imax,ap,ap1)
+     &               flambdin,imagfit,chisqr,eps,itmax,points,s0,
+     &               conv,p0,imax,ap,ap1)
         use gildas_def
         use gkernel_interfaces
 	integer(kind=4), intent(in) :: nimage
 	real*4 image(nimage),imagfit(nimage),points(3,nimage)
 	dimension a(11),sigmaa(11),s0(3)
@@ -42,18 +42,18 @@ 11		x(k)=points(k,i)-a(7+k)
 		  wsum=wsum+weight(i)
 		endif
 	endif
 1	continue
 	write (2,*) 
-     #    'I-CUBFIT, ',npsel,' points selected with > ',p0,' * peak, ',
-     #    ' within ',sqrt(ap1),' * initial fwhm. sum of weights ',wsum
+     &    'I-CUBFIT, ',npsel,' points selected with > ',p0,' * peak, ',
+     &    ' within ',sqrt(ap1),' * initial fwhm. sum of weights ',wsum
 
 	flambda=flambdin
 
 	call curfit (image,npsel,nterms,a,sigmaa,flambda,
-     #               imagfit,chisqr,eps,itmax,points,
-     #               conv,weight,ipt,s0,wsum)
+     &               imagfit,chisqr,eps,itmax,points,
+     &               conv,weight,ipt,s0,wsum)
 	do 2 i=1,npts
 2	imagfit(i)=functn(i,a,points,nterms)-a(11)**2
 
         deallocate(ipt,weight)
 
diff --git a/contrib/gaussclumps/lib/cubfunc.f b/contrib/gaussclumps/lib/cubfunc.f
--- a/contrib/gaussclumps/lib/cubfunc.f
+++ b/contrib/gaussclumps/lib/cubfunc.f
@@ -27,12 +27,12 @@ c offset is a(11)**2
 	do 1 i=1,2
 	x(i)=points(i,ip)-a(7+i)
 1	x(3)=x(3)-a(4+i)*x(i)
 
 	functn=aq(1)*x(1)*x(1)+aq(2)*x(2)*x(2)
-     #     +2.*aq(3)*x(1)*x(2)
-     #     +x(3)**2*vv
+     &     +2.*aq(3)*x(1)*x(2)
+     &     +x(3)**2*vv
 
 	functn=a(7)**2*expz(-functn)+a(11)**2
 
 	return
 	end
@@ -66,11 +66,11 @@ 1	x(3)=x(3)-a(4+i)*x(i)
 
 	deriv(1)=f*(aa*(s*x(2)-c*x(1)))**2/2.772589*2.*a(1)
 	deriv(2)=f*(bb*(s*x(1)+c*x(2)))**2/2.772589*2.*a(2)
 	deriv(3)=f*(x(3)*vv)**2/2.772589*2.*a(3)
 	deriv(4)=-f*(2.*aq(3)*(x(1)*x(1)-x(2)*x(2)) +
-     #               2.*(aq(2)-aq(1))*x(1)*x(2))
+     &               2.*(aq(2)-aq(1))*x(1)*x(2))
 	deriv(7)=2.*f/a(7)
 	deriv(10)=f*2.*vv*x(3)
 
 	do 2 i=1,2
 	      deriv(7+i)=-f*2.*vv*x(3)*a(4+i)
diff --git a/contrib/gaussclumps/lib/findmax.f b/contrib/gaussclumps/lib/findmax.f
--- a/contrib/gaussclumps/lib/findmax.f
+++ b/contrib/gaussclumps/lib/findmax.f
@@ -1,7 +1,7 @@
 	subroutine findmax (image,nimage,imax,npts,points,badpts,
-     #    rms,sum)
+     &    rms,sum)
 	integer(kind=4), intent(in) :: nimage
 	real*4    image(nimage),points(3,nimage)
 	integer*2 badpts (nimage)
 	real*4    max,min
 
@@ -20,13 +20,13 @@
 	endif
 	sum=sum+image(i)
 1	continue
 
 	write (2,*) 'I-FINDMAX, maximum found at ',
-     #    points(1,imax),points(2,imax),points(3,imax),' ',max*rms
+     &    points(1,imax),points(2,imax),points(3,imax),' ',max*rms
 	write (2,*) 'I-FINDMAX, minimum found at ',
-     #    points(1,imin),points(2,imin),points(3,imin),' ',min*rms
+     &    points(1,imin),points(2,imin),points(3,imin),' ',min*rms
 	write (2,*) 'I-FINDMAX, integral ',sum*rms
 	write (6,*) 'I-FINDMAX, integral ',sum*rms
 
 	return
 	end
diff --git a/contrib/gaussclumps/lib/getpar.f b/contrib/gaussclumps/lib/getpar.f
--- a/contrib/gaussclumps/lib/getpar.f
+++ b/contrib/gaussclumps/lib/getpar.f
@@ -1,8 +1,8 @@
 	subroutine getpar (imafile,rms,beamfwhm,velres,fbeam,fvel,
-     #               fitflag,s0,thresh,p0,ap,ap1,itmaxcl,itmaxfit,
-     #               eps,flambda,blanking,tol,savres,savfit,minsum)
+     &               fitflag,s0,thresh,p0,ap,ap1,itmaxcl,itmaxfit,
+     &               eps,flambda,blanking,tol,savres,savfit,minsum)
 	character*30 imafile
 	character*1 yn1,yn2,yn3,yn4,yn5
 	logical savres
 	logical savfit
 	real*4  minsum
@@ -54,20 +54,20 @@ 1001	format (1x,a)
 	if (yn5.eq.'N'.or.yn5.eq.'n') savfit=.false.
 
 	open (unit=2,file='clumps_output',status='new')
 	open (unit=3,file='clumps_list',status='new')
 	write (3,1020) rms,beamfwhm,fbeam,velres,fvel,
-     #               thresh,p0,sqrt(ap),sqrt(ap1),s0
+     &               thresh,p0,sqrt(ap),sqrt(ap1),s0
 	write (2,1020) rms,beamfwhm,fbeam,velres,fvel,
-     #               thresh,p0,sqrt(ap),sqrt(ap1),s0
+     &               thresh,p0,sqrt(ap),sqrt(ap1),s0
 	write (6,1020) rms,beamfwhm,fbeam,velres,fvel,
-     #               thresh,p0,sqrt(ap),sqrt(ap1),s0
+     &               thresh,p0,sqrt(ap),sqrt(ap1),s0
 1020	format (1x,' rms: ',1p,g10.3,', beamfwhm: ',2(g10.3,1x),
-     #       ', velres: ',2(g10.3,1x),/,
-     #    1x,' threshhold: ',g10.3,', contrast: ',g10.3,
-     #       ', weigth-aperture: ',g10.3,
-     #       1x,g10.3,/,1x,' stiffness: ',3g10.3)
+     &       ', velres: ',2(g10.3,1x),/,
+     &    1x,' threshhold: ',g10.3,', contrast: ',g10.3,
+     &       ', weigth-aperture: ',g10.3,
+     &       1x,g10.3,/,1x,' stiffness: ',3g10.3)
 	close (unit=1)
 	return
 
 999	write (6,*) 'I-GETPAR: error reading clumps_inp '
 	close (unit=1)
diff --git a/contrib/gaussclumps/lib/iterate.f b/contrib/gaussclumps/lib/iterate.f
--- a/contrib/gaussclumps/lib/iterate.f
+++ b/contrib/gaussclumps/lib/iterate.f
@@ -1,7 +1,7 @@
 	subroutine iterate(image,nimage,imax,iclump,thresh,itmaxcl,
-     #    iter,rms,sum,minsum)
+     &    iter,rms,sum,minsum)
 
         real*4  minsum
 	integer(kind=4), intent(in) :: nimage
 	real*4  image(nimage)
 	logical iter
@@ -10,20 +10,20 @@
 	iter=.true.
 
         if (iclump.eq.1) sum_thresh = minsum*sum
 	if (image(imax).lt.thresh/rms) then
 		write (2,*) 
-     #    'I-ITERATE, threshhold reached after ',iclump,' iterations '
+     &    'I-ITERATE, threshhold reached after ',iclump,' iterations '
 		iter=.false.
 	else if (iclump.gt.itmaxcl) then
 		write (2,*)
-     #          'I-ITERATE, maximum number of clumps; stop iterating '
+     &          'I-ITERATE, maximum number of clumps; stop iterating '
 		iter=.false.
         else if (sum.le.sum_thresh) then
 		write (2,*)
-     #          'I-ITERATE, integrated intensity lower than ',minsum,
-     #          '% of start value after ',iclump,' iterations.' 
+     &          'I-ITERATE, integrated intensity lower than ',minsum,
+     &          '% of start value after ',iclump,' iterations.' 
 		iter=.false.
 	endif
 
 	return
 	end
diff --git a/contrib/gaussclumps/lib/listclump.f b/contrib/gaussclumps/lib/listclump.f
--- a/contrib/gaussclumps/lib/listclump.f
+++ b/contrib/gaussclumps/lib/listclump.f
@@ -1,7 +1,7 @@
 	subroutine listclump (iclump,a,sigmaa,imafile,
-     #                        chisqr,imgname,rms)
+     &                        chisqr,imgname,rms)
 
 	common /termpointer/ lista,peak,cent,wid
 	dimension lista(11),cent(3),wid(3)
 	real*4 peak
 
@@ -37,27 +37,27 @@ 1	sig(i)='            '
 2	continue
 
 	call convert (a,b,rms)
 
 	write (2,1010) iclump,(b(wp(i)),i=1,10),(a(wp(i)),i=1,11),
-     #  chisqr,(sig(wp(i)),i=1,11)
+     &  chisqr,(sig(wp(i)),i=1,11)
 
 	write (3,2010) iclump,(b(bwp(i)),i=1,11)
 
 1000	format (1x,'   clump   ','      x     ','      y     ',
-     #  '      v     ','  amplitude ','   delta x  ','   delta y  ',
-     #  '     phi    ','    dv/dr   ','    fwhm    ','   delta v  ',//,
-     #  '           ','     x     ','     y     ',
-     #  '     v     ',' amplitude ','    a11    ','    a22    ',
-     #  '    a12    ','   dv/dx   ','   dv/dy   ','    a33    ',/,
-     #          1x,' chisqr   ',/)
+     &  '      v     ','  amplitude ','   delta x  ','   delta y  ',
+     &  '     phi    ','    dv/dr   ','    fwhm    ','   delta v  ',//,
+     &  '           ','     x     ','     y     ',
+     &  '     v     ',' amplitude ','    a11    ','    a22    ',
+     &  '    a12    ','   dv/dx   ','   dv/dy   ','    a33    ',/,
+     &          1x,' chisqr   ',/)
 1010	format 
-     #  (/,1x,i5,6x,1p,10(g12.5),//,11x,11(g11.4),/,1x,g10.4,11a11)
+     &  (/,1x,i5,6x,1p,10(g12.5),//,11x,11(g11.4),/,1x,g10.4,11a11)
 2000	format (1x,' no.','       x  ','       y  ',
-     #  '     v  ','    amp.  ','     dx ','     dy ',
-     #  '   phi ','  fwhm ','    dv/dr ','  phiv ','   dv ')
+     &  '     v  ','    amp.  ','     dx ','     dy ',
+     &  '   phi ','  fwhm ','    dv/dr ','  phiv ','   dv ')
 2010	format 
 c              x,y            v         amp
-     #  (1x,i4,2(1x,f9.2),(1x,f7.2),(1x,f9.4),2(1x,f7.2),(1x,f6.1),
-     #  (1x,f6.2),(1x,f9.4),(1x,f6.1),(1x,f5.2))
+     &  (1x,i4,2(1x,f9.2),(1x,f7.2),(1x,f9.4),2(1x,f7.2),(1x,f6.1),
+     &  (1x,f6.2),(1x,f9.4),(1x,f6.1),(1x,f5.2))
 	return
 	end
diff --git a/contrib/gaussclumps/lib/replace.f b/contrib/gaussclumps/lib/replace.f
--- a/contrib/gaussclumps/lib/replace.f
+++ b/contrib/gaussclumps/lib/replace.f
@@ -1,8 +1,8 @@
 	subroutine replace (image,nimage,imagfit,points,npts,blanking,
-     #                rms,npix,refpix,val,inc,imgname,iclump,
-     #                savres,savfit)
+     &                rms,npix,refpix,val,inc,imgname,iclump,
+     &                savres,savfit)
         use gildas_def
         use gkernel_interfaces
 	integer(kind=4), intent(in) :: nimage
 	real*4 image(nimage),imagfit(nimage),points(3,nimage)
 	integer npix(3)
@@ -36,26 +36,26 @@
 1	fit(i)=fit(i)+imagfit(i)
 	write (6,*) 'I-REPLACE: fit subtracted '
 	
 	if (savres) then
 	call backtrans (image,nimage,points,temp,npts,blanking,
-     #         rms,npix1,npix2,npix3,refpix,val,inc)
+     &         rms,npix1,npix2,npix3,refpix,val,inc)
 
 	write (header,1000) imgname(1:40),iclump,' clumps subtracted '
 1000	format (a40,': ',i6,a)
 	call writeimg (temp,nimage,npix,refpix,val,inc,'clumps_tmp',
-     #    header)
+     &    header)
 	write (6,*) 'I-REPLACE: residual image saved on clumps_tmp'
 		endif
 
 		if (savfit) then
 	call backtrans (fit,nimage,points,temp,npts,blanking,
-     #         rms,npix1,npix2,npix3,refpix,val,inc)
+     &         rms,npix1,npix2,npix3,refpix,val,inc)
 
 	write (header,1000) imgname(1:40),iclump,' fitted clumps '
 	call writeimg (temp,nimage,npix,refpix,val,inc,'clumps_img',
-     #    header)
+     &    header)
 	write (6,*) 'I-REPLACE: fitted image saved on clumps_img'
 	endif
 
 	deallocate(temp,fit)
 	
diff --git a/contrib/gaussclumps/lib/setinit.f b/contrib/gaussclumps/lib/setinit.f
--- a/contrib/gaussclumps/lib/setinit.f
+++ b/contrib/gaussclumps/lib/setinit.f
@@ -1,8 +1,8 @@
 	subroutine setinit (a,nimage,fitflag,beamfwhm,velres,
-     #                      fbeam,fvel,nterms,
-     #                      image,imax,points)
+     &                      fbeam,fvel,nterms,
+     &                      image,imax,points)
 *
 *   initialize fit 
 *
 	
 	common /termpointer/ lista,peak,cent,wid
diff --git a/contrib/gaussclumps/lib/transfer.f b/contrib/gaussclumps/lib/transfer.f
--- a/contrib/gaussclumps/lib/transfer.f
+++ b/contrib/gaussclumps/lib/transfer.f
@@ -1,7 +1,7 @@
 	subroutine transfer (image,nimage,points,temp,npts,blanking,
-     #         tol,rms,npix1,npix2,npix3,refpix,val,inc)
+     &         tol,rms,npix1,npix2,npix3,refpix,val,inc)
 	integer(kind=4), intent(in) :: nimage
 	real*4 refpix(3),val(3),inc(3)
 	real*4 image (nimage), points(3,nimage)
 	real*4 temp(npix1,npix2,npix3)
 
diff --git a/contrib/gaussclumps/lib/writeimg.f b/contrib/gaussclumps/lib/writeimg.f
--- a/contrib/gaussclumps/lib/writeimg.f
+++ b/contrib/gaussclumps/lib/writeimg.f
@@ -1,16 +1,16 @@
 	subroutine writeimg(temp,nimage,npix,refpix,val,inc,filnam,
-     #    header)
+     &    header)
 	integer(kind=4), intent(in) :: nimage
 	real*4 temp(nimage)
 	integer npix(3)
 	real*4 refpix(3),val(3),inc(3)
 	character*(*) filnam
 	character*80 header
 
 	open (unit=1,file=filnam,
-     #        form='unformatted',status='unknown')
+     &        form='unformatted',status='unknown')
 
 	write (1) header
  	do 1 i=1,3
 1	write (1) npix(i),refpix(i),val(i),inc(i)
  
