# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem              1.0
PortGroup               cmake 1.0
PortGroup               mpi 1.0
PortGroup               github 1.0

compilers.choose        cc cxx

name                    apbs
subport                 apbs-mpi {}
# Set revision separately for each subport, below.
set branch              [join [lrange [split ${version} .] 0 1] .]
categories              science
license                 BSD
maintainers             gmail.com:howarth.at.macports openmaintainer

description             Adaptive Poisson-Boltzmann Solver
long_description        APBS is a software package for the numerical \
                        solution of the Poisson-Boltzmann equation, \
                        a popular continuum model for describing \
                        electrostatic interactions between molecular \
                        solutes over a wide range of length scales.

platforms               darwin

github.setup            Electrostatics apbs-pdb2pqr d4e78c62e6a07f92c26924318d83a159fa6af063
version                 1.4.1
homepage                http://www.poissonboltzmann.org

checksums               rmd160  5c4d583e12deb3fbc2b5a8031882311cbfd22c7e \
                        sha256  f98ce6a51d8f813e1b4fa626c054ddbf7a985403ca30f890733cb1abf2bd6e05

depends_lib             port:maloc \
                        port:readline

# BEM needs 'gfortran', hard-coded, and configure fails without it if BEM is enabled, with a syntax error
#CMake Error at CMakeLists.txt:217 (get_filename_component):
#  get_filename_component called with incorrect number of arguments
configure.args-append   -DENABLE_OPENMP:BOOL=OFF \
                        -DENABLE_BEM=OFF

# make sure this comes after further options that the cmake portgroup adds, to specify directory correctly
configure.post_args     ./apbs

test.run  yes
test {
    ln ${worksrcpath}/apbs/tools/manip/inputgen.py ${worksrcpath}/apbs/tests/
    ln ${worksrcpath}/apbs/tools/manip/psize.py    ${worksrcpath}/apbs/tests/
    system -W ${worksrcpath}/apbs/tests "python apbs_tester.py"
    system -W ${worksrcpath}/apbs/tests "cat test.log"
    system -W ${worksrcpath}/apbs/tests "if grep FAILED test.log; then echo \"FAIL\"; exit 1; fi"
}

set bins {analysis benchmark born coulomb del2dx dx2mol dx2uhbd dxmath
    mergedx mergedx2 mgmesh multivalue similarity smooth tensor2dx
    uhbd_asc2bin value}

switch ${subport} {
    apbs {
        compilers.setup

        revision                0

        configure.args-append   -DENABLE_MPI:BOOL=OFF

        post-destroot {
            set tools ${destroot}${prefix}/share/${subport}/tools

            move ${tools}/manip/psize.py ${destroot}${prefix}/bin/apbs-psize.py
            file attributes ${destroot}${prefix}/bin/apbs-psize.py \
                -permissions 755

            foreach {bin} ${bins} {
                move ${tools}/bin/${bin} ${destroot}${prefix}/bin/apbs-${bin}
                file attributes ${destroot}${prefix}/bin/apbs-${bin} \
                    -permissions 755
            }
        }
    }
    apbs-mpi {
        mpi.setup               require

        revision                0

        description             ${description} (MPI version)

        depends_run             port:apbs

        compilers.enforce_c     apbs

        pre-configure {
            configure.args-append   -DENABLE_MPI:BOOL=ON \
                    -DCMAKE_C_COMPILER=${configure.cc} \
                    -DCMAKE_CXX_COMPILER=${configure.cxx} \
                    -DMPI_C_COMPILER=${mpi.cc} \
                    -DMPI_CXX_COMPILER=${mpi.cxx}
        }

        destroot {
            xinstall ${worksrcpath}/bin/apbs \
                ${destroot}${prefix}/bin/apbs-mpi
            foreach {bin} ${bins} {
                xinstall ${worksrcpath}/tools/bin/${bin} \
                    ${destroot}${prefix}/bin/apbs-mpi-${bin}
            }
            xinstall -d ${destroot}${prefix}/share/${subport}
            copy ${worksrcpath}/examples \
                    ${worksrcpath}/tools \
                    ${worksrcpath}/doc \
                ${destroot}${prefix}/share/${subport}
        }
    }
}

# check for real releases, not github commits
livecheck.type   regex
livecheck.url    http://www.poissonboltzmann.org/news/
livecheck.regex  APBS (\[0-9.\]+)
