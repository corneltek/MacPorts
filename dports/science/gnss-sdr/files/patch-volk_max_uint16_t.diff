--- src/algorithms/acquisition/gnuradio_blocks/galileo_e5a_noncoherent_iq_acquisition_caf_cc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/galileo_e5a_noncoherent_iq_acquisition_caf_cc.cc
@@ -424,11 +424,11 @@ int galileo_e5a_noncoherentIQ_acquisition_caf_cc::general_work(int noutput_items
 
             // initialize acquisition algorithm
             int doppler;
-            unsigned int indext = 0;
-            unsigned int indext_IA = 0;
-            unsigned int indext_IB = 0;
-            unsigned int indext_QA = 0;
-            unsigned int indext_QB = 0;
+            uint16_t indext = 0;
+            uint16_t indext_IA = 0;
+            uint16_t indext_IB = 0;
+            uint16_t indext_QA = 0;
+            uint16_t indext_QB = 0;
             float magt = 0.0;
             float magt_IA = 0.0;
             float magt_IB = 0.0;
--- src/algorithms/acquisition/gnuradio_blocks/galileo_pcps_8ms_acquisition_cc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/galileo_pcps_8ms_acquisition_cc.cc
@@ -242,9 +242,9 @@ int galileo_pcps_8ms_acquisition_cc::general_work(int noutput_items,
         {
             // initialize acquisition algorithm
             int doppler;
-            unsigned int indext = 0;
-            unsigned int indext_A = 0;
-            unsigned int indext_B = 0;
+            uint16_t indext = 0;
+            uint16_t indext_A = 0;
+            uint16_t indext_B = 0;
             float magt = 0.0;
             float magt_A = 0.0;
             float magt_B = 0.0;
--- src/algorithms/acquisition/gnuradio_blocks/pcps_acquisition_cc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/pcps_acquisition_cc.cc
@@ -284,7 +284,7 @@ int pcps_acquisition_cc::general_work(int noutput_items,
         {
             // initialize acquisition algorithm
             int doppler;
-            unsigned int indext = 0;
+            uint16_t indext = 0;
             float magt = 0.0;
             const gr_complex *in = (const gr_complex *)input_items[0]; //Get the input samples pointer
 
--- src/algorithms/acquisition/gnuradio_blocks/pcps_acquisition_fine_doppler_cc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/pcps_acquisition_fine_doppler_cc.cc
@@ -222,8 +222,8 @@ double pcps_acquisition_fine_doppler_cc::search_maximum()
     float magt = 0.0;
     float fft_normalization_factor;
     int index_doppler = 0;
-    unsigned int tmp_intex_t;
-    unsigned int index_time = 0;
+    uint16_t tmp_intex_t;
+    uint16_t index_time = 0;
 
     for (int i=0;i<d_num_doppler_points;i++)
         {
@@ -359,7 +359,7 @@ int pcps_acquisition_fine_doppler_cc::estimate_Doppler(gr_vector_const_void_star
 
     volk_32fc_magnitude_squared_32f(p_tmp_vector, fft_operator->get_outbuf(), fft_size_extended);
 
-    unsigned int tmp_index_freq = 0;
+    uint16_t tmp_index_freq = 0;
     volk_32f_index_max_16u(&tmp_index_freq, p_tmp_vector, fft_size_extended);
 
     //case even
--- src/algorithms/acquisition/gnuradio_blocks/pcps_acquisition_sc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/pcps_acquisition_sc.cc
@@ -281,7 +281,7 @@ int pcps_acquisition_sc::general_work(int noutput_items,
         {
             // initialize acquisition algorithm
             int doppler;
-            unsigned int indext = 0;
+            uint16_t indext = 0;
             float magt = 0.0;
             const lv_16sc_t *in = (const lv_16sc_t *)input_items[0]; //Get the input samples pointer
             int effective_fft_size = ( d_bit_transition_flag ? d_fft_size/2 : d_fft_size );
--- src/algorithms/acquisition/gnuradio_blocks/pcps_assisted_acquisition_cc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/pcps_assisted_acquisition_cc.cc
@@ -268,8 +268,8 @@ double pcps_assisted_acquisition_cc::search_maximum()
     float magt = 0.0;
     float fft_normalization_factor;
     int index_doppler = 0;
-    unsigned int tmp_intex_t;
-    unsigned int index_time = 0;
+    uint16_t tmp_intex_t;
+    uint16_t index_time = 0;
 
     for (int i=0;i<d_num_doppler_points;i++)
         {
--- src/algorithms/acquisition/gnuradio_blocks/pcps_cccwsr_acquisition_cc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/pcps_cccwsr_acquisition_cc.cc
@@ -254,9 +254,9 @@ int pcps_cccwsr_acquisition_cc::general_work(int noutput_items,
         {
             // initialize acquisition algorithm
             int doppler;
-            unsigned int indext = 0;
-            unsigned int indext_plus = 0;
-            unsigned int indext_minus = 0;
+            uint16_t indext = 0;
+            uint16_t indext_plus = 0;
+            uint16_t indext_minus = 0;
             float magt = 0.0;
             float magt_plus = 0.0;
             float magt_minus = 0.0;
--- src/algorithms/acquisition/gnuradio_blocks/pcps_multithread_acquisition_cc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/pcps_multithread_acquisition_cc.cc
@@ -200,7 +200,7 @@ void pcps_multithread_acquisition_cc::acquisition_core()
 {
     // initialize acquisition algorithm
     int doppler;
-    unsigned int indext = 0;
+    uint16_t indext = 0;
     float magt = 0.0;
     float fft_normalization_factor = (float)d_fft_size * (float)d_fft_size;
     gr_complex* in = d_in_buffer[d_well_count];
--- src/algorithms/acquisition/gnuradio_blocks/pcps_opencl_acquisition_cc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/pcps_opencl_acquisition_cc.cc
@@ -386,7 +386,7 @@ void pcps_opencl_acquisition_cc::acquisition_core_volk()
 {
     // initialize acquisition algorithm
     int doppler;
-    unsigned int indext = 0;
+    uint16_t indext = 0;
     float magt = 0.0;
     float fft_normalization_factor = static_cast<float>(d_fft_size) * static_cast<float>(d_fft_size);
     gr_complex* in = d_in_buffer[d_well_count];
@@ -508,7 +508,7 @@ void pcps_opencl_acquisition_cc::acquisition_core_opencl()
 {
     // initialize acquisition algorithm
     int doppler;
-    unsigned int indext = 0;
+    uint16_t indext = 0;
     float magt = 0.0;
     float fft_normalization_factor = (static_cast<float>(d_fft_size_pow2) * static_cast<float>(d_fft_size)); //This works, but I am not sure why.
     gr_complex* in = d_in_buffer[d_well_count];
--- src/algorithms/acquisition/gnuradio_blocks/pcps_quicksync_acquisition_cc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/pcps_quicksync_acquisition_cc.cc
@@ -301,7 +301,7 @@ int pcps_quicksync_acquisition_cc::general_work(int noutput_items,
             /* initialize acquisition  implementing the QuickSync algorithm*/
             //DLOG(INFO) << "START CASE 1";
             int doppler;
-            unsigned int indext = 0;
+            uint16_t indext = 0;
             float magt = 0.0;
             const gr_complex *in = (const gr_complex *)input_items[0]; //Get the input samples pointer
 
--- src/algorithms/acquisition/gnuradio_blocks/pcps_tong_acquisition_cc.cc.orig
+++ src/algorithms/acquisition/gnuradio_blocks/pcps_tong_acquisition_cc.cc
@@ -279,7 +279,7 @@ int pcps_tong_acquisition_cc::general_work(int noutput_items,
         {
             // initialize acquisition algorithm
             int doppler;
-            unsigned int indext = 0;
+            uint16_t indext = 0;
             float magt = 0.0;
             const gr_complex *in = (const gr_complex *)input_items[0]; //Get the input samples pointer
             float fft_normalization_factor = static_cast<float>(d_fft_size) * static_cast<float>(d_fft_size);
