--- sconstruct.orig	2012-10-17 10:28:31.000000000 -0400
+++ sconstruct	2013-01-13 17:36:49.000000000 -0500
@@ -100,7 +100,7 @@
     SYS = SYSTEM
 
     # Mac OS X installation path.
-    INSTALL_PATH = sys.prefix + sep + 'local'
+    INSTALL_PATH = '@DEST_ROOT@@PREFIX@' + sep + 'lib'
 
 
 # All other operating systems.
@@ -120,13 +120,12 @@
 RELAX_PATH = INSTALL_PATH + sep + 'relax'
 
 # Installation path for binaries.
-BIN_PATH = INSTALL_PATH + sep + 'bin'
+BIN_PATH = '@DEST_ROOT@@PREFIX@' + sep + 'bin'
 
 # Symbolic link installation path.
 SYMLINK = BIN_PATH + sep + 'relax'
 
 
-
 # The distribution files.
 #########################
 
@@ -533,11 +532,11 @@
                  'relax_fit.c']
 
         # Construct the python include path (for Python.h).
-        py_include_minpath = sys.prefix + path.sep + 'include'
+        py_include_minpath = '@PYTHON_INCL@' + path.sep + '..'
         py_include_fullpath = py_include_minpath + path.sep + 'python' + `sys.version_info[0]` + '.' + `sys.version_info[1]`
 
         # Construct the python bin path.
-        py_bin_minpath = sys.prefix + path.sep + 'bin'
+        py_bin_minpath = '@PREFIX@'+ path.sep + 'bin'
         py_bin_fullpath = py_bin_minpath + path.sep + 'python' + `sys.version_info[0]` + '.' + `sys.version_info[1]`
 
         # Get the numpy include path (for numpy/arrayobject.h).
--- relax.orig	2012-06-11 05:51:33.000000000 -0400
+++ relax	2012-06-16 17:03:52.000000000 -0400
@@ -1,4 +1,4 @@
-#! /usr/bin/env python
+#!@PREFIX@/bin/python2.7
 
 # Import the relax module.
 import relax
--- scons/install.py.orig	2012-06-11 05:50:51.000000000 -0400
+++ scons/install.py	2012-06-14 08:49:48.000000000 -0400
@@ -113,11 +113,11 @@
     ###############
 
     # Run relax to create the *.pyc files.
-    print("\nCreating the byte-compiled *.pyc files.")
-    python_path = sys.prefix + path.sep + 'bin' + path.sep + 'python' + `sys.version_info[0]` + '.' + `sys.version_info[1]`
-    cmd = "cd %s; %s -m compileall . ; %s -O -m compileall ." % (env['RELAX_PATH'], python_path, python_path)
-    print(cmd)
-    system(cmd)
+    #print("\nCreating the byte-compiled *.pyc files.")
+    #python_path = sys.prefix + path.sep + 'bin' + path.sep + 'python' + `sys.version_info[0]` + '.' + `sys.version_info[1]`
+    #cmd = "cd %s; %s -m compileall . ; %s -O -m compileall ." % (env['RELAX_PATH'], python_path, python_path)
+    #print(cmd)
+    #system(cmd)
 
     # Final printout.
     print("\n\n\n")
--- dep_check.py.orig	2013-01-13 17:20:47.000000000 -0500
+++ dep_check.py	2013-01-13 17:18:10.000000000 -0500
@@ -142,7 +142,7 @@
 try:
     import scipy
     scipy_module = True
-except ImportError:
+except:
     scipy_module = False
 
 # Numeric python package check.
@@ -157,7 +157,7 @@
     from Scientific.Visualization import VMD    # This requires Numeric to be installed (at least in Scientific 2.7.8).
     del VMD
     vmd_module = True
-except ImportError:
+except:
     vmd_module = False
 
 # mpi4py.
@@ -217,12 +217,19 @@
 # ctypes module.
 try:
     import ctypes
-    from ctypes import Structure
     ctypes_module = True
 except ImportError:
     message = sys.exc_info()[1]
     ctypes_module = False
     ctypes_module_message = message.args[0]
+try:
+    from ctypes import Structure
+    ctypes_structure_module = True
+except ImportError:
+    message = sys.exc_info()[1]
+    ctypes_structure_module = False
+    ctypes_structure_module_message = message.args[0]
+
 
 
 
--- info.py.orig	2012-10-17 10:28:31.000000000 -0400
+++ info.py	2013-01-13 17:18:10.000000000 -0500
@@ -28,11 +28,13 @@
 # Python module imports.
 if dep_check.ctypes_module:
     import ctypes
-    from ctypes import Structure
     if hasattr(ctypes, 'windll'):
         import ctypes.wintypes
 else:
     ctypes = None
+if dep_check.ctypes_structure_module:
+    from ctypes import Structure
+else:
     Structure = object
 import numpy
 from os import environ, waitpid
