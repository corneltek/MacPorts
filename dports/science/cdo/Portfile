# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem                  1.0

name                        cdo
version                     1.5.5
revision                    2
platforms                   darwin
maintainers                 takeshi
license                     GPL-2
categories                  science
description                 Climate Data Operators
homepage                    https://code.zmaw.de/projects/cdo
master_sites                https://code.zmaw.de/attachments/download/2879
checksums           md5     8072ebfebfa6a2c9b4ee4098d9fec338 \
                    sha1    f8bc37985b0d6799df80b9083ff5a34f61dd207e \
                    rmd160  dcc6e30ace830df12d5714a983189cd6ed333871
long_description \
    CDO is a collection of command line Operators               \
    to manipulate and analyse Climate Data files.               \
    Supported data formats are GRIB, netCDF, SERVICE, EXTRA and IEG. \
    There are more than 600 operators available.

fetch.ignore_sslcert        yes

depends_lib                 port:netcdf \
                            port:proj47

configure.args              --with-netcdf=${prefix} \
                            --disable-dependency-tracking \
                            --with-proj=${prefix}/lib/proj47 \
                            --with-hdf5=${prefix} \
                            --with-zlib=${prefix}

# Test if hdf5-18 is installed with +openmpi or +mpich2
if {[file exists ${prefix}/bin/h5pcc]} {
    default_variants +mpi
}

post-destroot {
    xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}/doc
    eval xinstall -m 644 [glob ${worksrcpath}/doc/*.pdf] ${destroot}${prefix}/share/doc/${name}/doc
    foreach f {AUTHORS  ChangeLog NEWS OPERATORS README} {
        eval xinstall -m 644 [glob ${worksrcpath}/${f}] ${destroot}${prefix}/share/doc/${name}
    }
}

variant grib2 description {enable experimental grib2 support} {
    depends_lib-append      port:grib_api
    configure.args-append   --with-jasper=${prefix} \
                            --with-grib_api=${prefix}
    configure.ldflags-append    -lpng -lopenjpeg
}

variant mpi description {compile with h5pcc} {
    configure.cc            ${prefix}/bin/h5pcc
}

livecheck.type              regex
livecheck.url               ${homepage}
livecheck.regex             {Version ([0-9]+\.[0-9]+\.[0-9]+\.*[0-9]*)}
