# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0

# TODO: Improve universal.  The only issue is with ${prefix}/include/openmpi/mpif-config.h
#       It requires preprocessing, so it will work with #include directives
#       but not if clients use INCLUDE
#PortGroup           muniversal 1.0
universal_variant   no

PortGroup           compiler_blacklist_versions 1.0
PortGroup           select 1.0

name                openmpi-devel
version             1.9a1
revision            30023
distname            openmpi-${version}r${revision}
categories          science parallel net
platforms           darwin
license             BSD
maintainers         mww openmaintainer
description         A High Performance Message Passing Library
long_description    Open MPI is a project combining technologies and resources \
            from several other projects (FT-MPI, LA-MPI, LAM/MPI, and \
            PACX-MPI) in order to build the best MPI library available. A \
            completely new MPI-2 compliant implementation, Open MPI offers \
            advantages for system and software vendors, application developers \
            and computer science researchers.

homepage            http://www.open-mpi.org/
master_sites        http://www.open-mpi.org/nightly/trunk \
                    http://www.open-mpi.de/nightly/trunk

# keep md5 & sha1 checksums as they are published on http://www.open-mpi.org/software/ompi/v1.7/
checksums           md5     79d2f028767daa689ed3b80b531c3bb8 \
                    sha1    ebdb45b6052aecacedb88731e644f05ee6d7cd84 \
                    rmd160  e12074baee45045239594d0e83c07d35ddb0d6e8 \
                    sha256  62b6d21bbe15f813699b2d1ca49c2d5eb6b2d9c5bf937eb4785711c37103c4d9

use_bzip2           yes

pre-extract { file mkdir ${workpath}/build }

# https://trac.macports.org/ticket/39089
compiler.blacklist  gcc-4.0

compiler.blacklist-append  llvm-gcc-4.2 macports-llvm-gcc-4.2

# As OpenMPI creates compiler wrappers, there are lots of
# variants for what compiler the user would like to wrap.

subport ${name}-gcc43   {}
subport ${name}-gcc44   {}
subport ${name}-gcc45   {}
subport ${name}-gcc46   {}
subport ${name}-gcc47   {}
subport ${name}-gcc48   {}
subport ${name}-gcc49   {}
subport ${name}-clang   {}
subport ${name}-clang31 {}
subport ${name}-clang32 {}
subport ${name}-clang33 {}
subport ${name}-clang34 {}
subport ${name}-clang35 {}
subport ${name}-llvm    {}
subport ${name}-default {}
subport ${name}-dragonegg31 {}
subport ${name}-dragonegg32 {}
subport ${name}-dragonegg33 {}
# subport ${name}-dragonegg34 {}
# subport ${name}-dragonegg35 {}

# Compiler variant set
#   name     depends_lib    configure.compiler  Description
array set clist {
    clang   {clang}
    clang31 {macports-clang-3.1}
    clang32 {macports-clang-3.2}
    clang33 {macports-clang-3.3}
    clang34 {macports-clang-3.4}
    clang35 {macports-clang-3.5}
    gcc43   {macports-gcc-4.3}
    gcc44   {macports-gcc-4.4}
    gcc45   {macports-gcc-4.5}
    gcc46   {macports-gcc-4.6}
    gcc47   {macports-gcc-4.7}
    gcc48   {macports-gcc-4.8}
    gcc49   {macports-gcc-4.9}
    llvm    {llvm-gcc-4.2}
    dragonegg31 {macports-dragonegg-3.1}
    dragonegg32 {macports-dragonegg-3.2}
    dragonegg33 {macports-dragonegg-3.3}
    dragonegg34 {macports-dragonegg-3.4}
    dragonegg35 {macports-dragonegg-3.5}
}

configure.dir       ${workpath}/build
configure.cmd       ${worksrcpath}/configure
configure.args      --enable-mpi-fortran \
                    "FFLAGS='' F77=''"

# remove -arch from ldflags, ticket #22833
configure.ld_archflags
# avoid building against older installed version, ticket #23864
configure.cppflags-delete -I${prefix}/include
configure.ldflags-delete -L${prefix}/lib

configure.ccache no

build.dir           ${configure.dir}

destroot.dir        ${build.dir}

conflicts           mpich2 mpich3 lammpi mpich3-devel

if {${subport} != ${name}} {
    set cname                   [lindex [split ${subport} -] end]
    if {${cname} == "default"} {
        set cname                   mp
    }
    depends_lib                 port:hwloc
    depends_run                 port:mpi_select
    select.group                mpi
    select.file                 ${filespath}/${name}-${cname}

    if {${subport} != "${name}-default"} {
        configure.compiler      [lindex $clist($cname) 0]
        append long_description "\\n\\nTHIS SUBPORT WRAPS ${cname}'s C/C++"
        depends_lib-append      port:${name}-default
    } else {
        append long_description \
"\\n\\nTHIS SUBPORT WRAPS MACPORTS' DEFAULT COMPILER FOR C/C++"
    }

    configure.args-append   \
        --bindir=${prefix}/libexec/${name}-${cname} \
        --libdir=${prefix}/lib/${name}-${cname} \
        --sysconfdir=${prefix}/etc/${name}-${cname} \
        --includedir=${prefix}/include/${name}-${cname} \
        --datadir=${prefix}/share/${name}-${cname} \
        --docdir=${prefix}/share/docdelete \
        --mandir=${prefix}/share/mandelete \
        --with-hwloc=${prefix}

    post-destroot {
        # This version doesn't supply manpages
        delete ${destroot}${prefix}/share/mandelete
        delete ${destroot}${prefix}/share/docdelete
        set vampirlog ${destroot}${prefix}/share/${name}-${cname}/vampirtrace/config.log
        if { [ file exists $vampirlog ] } {
            delete $vampirlog
        }

        foreach bin {mpiexec mpicc mpicxx mpif77 mpif90} {
            system -W ${destroot}${prefix}/bin \
                "ln -sf ${prefix}/libexec/$name-$cname/$bin $bin-$name-$cname"
        }
    }

    if { [string first gcc $cname] == 0 } {
        configure.args-delete   --disable-mpi-fortran
        configure.args-append   --enable-mpi-fortran
        select.file             ${filespath}/${name}-${cname}-fortran
        variant fortran description {
            Stub : fortran always enabled for gcc-based version
        } {}
        default_variants-append     +fortran
    } elseif { [string first dragon $cname] == 0 } {
        configure.args-delete   --disable-mpi-fortran
        configure.args-append   --enable-mpi-fortran
        select.file             ${filespath}/${name}-${cname}-fortran
        variant fortran description {
            Stub : fortran always enabled for dragonegg-based version
        } {}
        default_variants-append     +fortran
    } else {
        set gcc_versions {4.3 4.4 4.5 4.6 4.7 4.8 4.9}
        set default_fortran_variant +gcc48
        set g95_conflicts {}

        foreach ver ${gcc_versions} {
            set ver_no_dot [join [split ${ver} "."] ""]

            set variant_line {variant gcc${ver_no_dot} description \
              "build with gfortran from gcc${ver_no_dot}" conflicts g95}

            foreach over ${gcc_versions} {
                if {${ver} == ${over}} {
                    continue
                }

                set over_no_dot [join [split ${over} "."] ""]
                append variant_line " conflicts gcc${over_no_dot}"
            }
            append variant_line { {}}

            eval $variant_line

            append g95_conflicts " conflicts gcc${ver_no_dot}"

            if {[variant_isset gcc${ver_no_dot}]} {
                if {${default_fortran_variant} != "+gcc${ver_no_dot}"} {
                    set default_fortran_variant ""
                }
            }
        }

        eval [concat {variant g95 description {build with g95}} \
              $g95_conflicts {{}}]

        if {[variant_isset g95]} {
            if {${default_fortran_variant} != "+g95"} {
                set default_fortran_variant ""
            }
        }

        if {${default_fortran_variant} != ""} {
            default_variants "${default_fortran_variant}"
        }

        foreach ver ${gcc_versions} {
            set ver_no_dot [join [split ${ver} "."] ""]

            if {[variant_isset gcc${ver_no_dot}]} {
                depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
                depends_build-append port:gcc${ver_no_dot}

                configure.args-delete   --disable-mpi-fortran
                configure.args-append   --enable-mpi-fortran
                select.file             ${filespath}/${name}-${cname}-fortran

                configure.fc  ${prefix}/bin/gfortran-mp-${ver}
            }
        }

        if {[variant_isset g95]} {
            depends_lib-append path:lib/libgcc/libgcc_s.1.dylib:libgcc
            depends_build-append port:g95

            configure.args-delete   --disable-mpi-fortran
            configure.args-append   --enable-mpi-fortran
            select.file             ${filespath}/${name}-${cname}-fortran

            configure.fc ${prefix}/bin/g95
        }
    }

notes "

+--- OpenMPI Usage note ----
| The mpi\[cc|cxx|f77|f90\] weappers are installed as
| mpi\[cc|cxx|f77|f90\]-${cname}. To make ${subport} the default (i.e. the
| version you get when you run 'mpicc/mpicxx'), please run:
|
| sudo port select --set mpi [file tail ${select.file}]
+-------------------------

"

    variant threads description {enable threads for MPI applications} {
        configure.args-append --enable-mpi-thread-multiple
    }

    variant valgrind description {enable valgrind support} {
        depends_lib-append    path:${prefix}/lib/pkgconfig/valgrind.pc:valgrind
        configure.args-append --enable-debug --enable-memchecker --with-valgrind=${prefix}
    }

    livecheck.type      regex
    livecheck.url       http://www.open-mpi.org/software/ompi/v1.7/
    livecheck.regex     openmpi-(\[0-9\.\]+).tar.bz2

} else {
    replaced_by         openmpi-devel-default
    PortGroup           obsolete 1.0
}
