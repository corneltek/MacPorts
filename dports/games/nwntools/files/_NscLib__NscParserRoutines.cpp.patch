--- _NscLib/NscParserRoutines.cpp.orig	2005-02-05 08:33:24.000000000 +1100
+++ _NscLib/NscParserRoutines.cpp	2014-12-17 14:39:36.000000000 +1100
@@ -396,142 +396,142 @@ bool NscBuildSyntaxError (int nToken, YY
 
 		switch (nToken)
 		{
-			case IDENTIFIER:
+			case yy::parser::token::IDENTIFIER:
 				if (yylval)
 					pszToken = yylval ->GetIdentifier ();
 				else
 					pszToken = "identifier";
 				break;
 
-			case INTEGER_CONST:
+			case yy::parser::token::INTEGER_CONST:
 				pszToken = "integer constant";
 				break;
 
-			case FLOAT_CONST:
+			case yy::parser::token::FLOAT_CONST:
 				pszToken = "float constant";
 				break;
 
-			case STRING_CONST:
+			case yy::parser::token::STRING_CONST:
 				pszToken = "string constant";
 				break;
 
-			case ADDEQ:
+			case yy::parser::token::ADDEQ:
 				pszToken = "+=";
 				break;
 
-			case SUBEQ:
+			case yy::parser::token::SUBEQ:
 				pszToken = "-=";
 				break;
 
-			case MULEQ:
+			case yy::parser::token::MULEQ:
 				pszToken = "*=";
 				break;
 
-			case DIVEQ:
+			case yy::parser::token::DIVEQ:
 				pszToken = "/=";
 				break;
 
-			case MODEQ:
+			case yy::parser::token::MODEQ:
 				pszToken = "%=";
 				break;
 
-			case XOREQ:
+			case yy::parser::token::XOREQ:
 				pszToken = "^=";
 				break;
 
-			case ANDEQ:
+			case yy::parser::token::ANDEQ:
 				pszToken = "&=";
 				break;
 
-			case OREQ:
+			case yy::parser::token::OREQ:
 				pszToken = "|=";
 				break;
 
-			case SL:
+			case yy::parser::token::SL:
 				pszToken = "<<";
 				break;
 
-			case SR:
+			case yy::parser::token::SR:
 				pszToken = ">>";
 				break;
 
-			case USR:
+			case yy::parser::token::USR:
 				pszToken = ">>>";
 				break;
 
-			case SLEQ:
+			case yy::parser::token::SLEQ:
 				pszToken = "<<=";
 				break;
 
-			case SREQ:
+			case yy::parser::token::SREQ:
 				pszToken = ">>=";
 				break;
 
-			case USREQ:
+			case yy::parser::token::USREQ:
 				pszToken = ">>>=";
 				break;
 
-			case EQ:
+			case yy::parser::token::EQ:
 				pszToken = "==";
 				break;
 
-			case NOTEQ:
+			case yy::parser::token::NOTEQ:
 				pszToken = "!=";
 				break;
 
-			case LTEQ:
+			case yy::parser::token::LTEQ:
 				pszToken = "<=";
 				break;
 
-			case GTEQ:
+			case yy::parser::token::GTEQ:
 				pszToken = ">=";
 				break;
 
-			case ANDAND:
+			case yy::parser::token::ANDAND:
 				pszToken = "&&";
 				break;
 
-			case OROR:
+			case yy::parser::token::OROR:
 				pszToken = "||";
 				break;
 
-			case PLUSPLUS:
+			case yy::parser::token::PLUSPLUS:
 				pszToken = "++";
 				break;
 
-			case MINUSMINUS:
+			case yy::parser::token::MINUSMINUS:
 				pszToken = "--";
 				break;
 
-			case FLOAT_TYPE:
+			case yy::parser::token::FLOAT_TYPE:
 				pszToken = "float";
 				break;
 
-			case INT_TYPE:
+			case yy::parser::token::INT_TYPE:
 				pszToken = "int";
 				break;
 
-			case OBJECT_TYPE:
+			case yy::parser::token::OBJECT_TYPE:
 				pszToken = "object";
 				break;
 
-			case STRING_TYPE:
+			case yy::parser::token::STRING_TYPE:
 				pszToken = "string";
 				break;
 
-			case VOID_TYPE:
+			case yy::parser::token::VOID_TYPE:
 				pszToken = "void";
 				break;
 
-			case STRUCT_TYPE:
+			case yy::parser::token::STRUCT_TYPE:
 				pszToken = "struct";
 				break;
 
-			case VECTOR_TYPE:
+			case yy::parser::token::VECTOR_TYPE:
 				pszToken = "vector";
 				break;
 
-			case ENGINE_TYPE:
+			case yy::parser::token::ENGINE_TYPE:
 				if (yylval)
 				{
 					int nIndex = yylval ->GetType () - NscType_Engine_0;
@@ -541,63 +541,63 @@ bool NscBuildSyntaxError (int nToken, YY
 					pszToken = "engine-type";
 				break;
 
-			case ACTION_TYPE:
+			case yy::parser::token::ACTION_TYPE:
 				pszToken = "action";
 				break;
 
-			case OBJECT_SELF_CONST:
+			case yy::parser::token::OBJECT_SELF_CONST:
 				pszToken = "OBJECT_SELF";
 				break;
 
-			case OBJECT_INVALID_CONST:
+			case yy::parser::token::OBJECT_INVALID_CONST:
 				pszToken = "OBJECT_INVALID";
 				break;
 
-			case BREAK:
+			case yy::parser::token::BREAK:
 				pszToken = "break";
 				break;
 
-			case CASE:
+			case yy::parser::token::CASE:
 				pszToken = "case";
 				break;
 
-			case CONTINUE:
+			case yy::parser::token::CONTINUE:
 				pszToken = "continue";
 				break;
 
-			case DEFAULT:
+			case yy::parser::token::DEFAULT:
 				pszToken = "default";
 				break;
 
-			case DO:
+			case yy::parser::token::DO:
 				pszToken = "do";
 				break;
 
-			case ELSE:
+			case yy::parser::token::ELSE:
 				pszToken = "else";
 				break;
 
-			case FOR:
+			case yy::parser::token::FOR:
 				pszToken = "for";
 				break;
 
-			case IF:
+			case yy::parser::token::IF:
 				pszToken = "if";
 				break;
 
-			case RETURN:
+			case yy::parser::token::RETURN:
 				pszToken = "return";
 				break;
 
-			case SWITCH:
+			case yy::parser::token::SWITCH:
 				pszToken = "switch";
 				break;
 
-			case WHILE:
+			case yy::parser::token::WHILE:
 				pszToken = "while";
 				break;
 
-			case NWCONST:
+			case yy::parser::token::NWCONST:
 				pszToken = "const";
 				break;
 
@@ -657,31 +657,31 @@ YYSTYPE NscBuildType (int nType, YYSTYPE
 
 	switch (nType)
 	{
-		case VOID_TYPE:
+		case yy::parser::token::VOID_TYPE:
 			pOut ->SetType (NscType_Void);
 			break;
 
-		case INT_TYPE:
+		case yy::parser::token::INT_TYPE:
 			pOut ->SetType (NscType_Integer);
 			break;
 
-		case FLOAT_TYPE:
+		case yy::parser::token::FLOAT_TYPE:
 			pOut ->SetType (NscType_Float);
 			break;
 
-		case OBJECT_TYPE:
+		case yy::parser::token::OBJECT_TYPE:
 			pOut ->SetType (NscType_Object);
 			break;
 
-		case STRING_TYPE:
+		case yy::parser::token::STRING_TYPE:
 			pOut ->SetType (NscType_String);
 			break;
 
-		case VECTOR_TYPE:
+		case yy::parser::token::VECTOR_TYPE:
 			pOut ->SetType (NscType_Vector);
 			break;
 
-		case ACTION_TYPE:
+		case yy::parser::token::ACTION_TYPE:
 			if (!g_pCtx ->IsNWScript ())
 			{
 				g_pCtx ->GenerateError ("\"action\" identifier only "
@@ -692,7 +692,7 @@ YYSTYPE NscBuildType (int nType, YYSTYPE
                 pOut ->SetType (NscType_Action);
 			break;
 
-		case STRUCT_TYPE:
+		case yy::parser::token::STRUCT_TYPE:
 			assert (pId != NULL);
 			{
 				if (!g_pCtx ->IsPhase2 () && !g_pCtx ->IsNWScript ())
@@ -723,7 +723,7 @@ YYSTYPE NscBuildType (int nType, YYSTYPE
 			}
 			break;
 
-		case ENGINE_TYPE:
+		case yy::parser::token::ENGINE_TYPE:
 			assert (pId != NULL);
 			{
 				pOut ->SetType (pId ->GetType ());
@@ -2923,7 +2923,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case SL:
+		case yy::parser::token::SL:
 			if (nLhsType == NscType_Integer && nRhsType == NscType_Integer)
 			{
 				if (g_pCtx ->GetOptExpression () &&
@@ -2948,7 +2948,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case SR:
+		case yy::parser::token::SR:
 			if (nLhsType == NscType_Integer && nRhsType == NscType_Integer)
 			{
 #ifdef NOT_ENABLED_YET
@@ -2975,7 +2975,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case USR:
+		case yy::parser::token::USR:
 			if (nLhsType == NscType_Integer && nRhsType == NscType_Integer)
 			{
 #ifdef NOT_ENABLED_YET
@@ -3086,7 +3086,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case LTEQ:
+		case yy::parser::token::LTEQ:
 			if (nLhsType == NscType_Integer && nRhsType == NscType_Integer)
 			{
 				if (g_pCtx ->GetOptExpression () &&
@@ -3128,7 +3128,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case GTEQ:
+		case yy::parser::token::GTEQ:
 			if (nLhsType == NscType_Integer && nRhsType == NscType_Integer)
 			{
 				if (g_pCtx ->GetOptExpression () &&
@@ -3170,7 +3170,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case EQ:
+		case yy::parser::token::EQ:
 			if (nLhsType == NscType_Integer && nRhsType == NscType_Integer)
 			{
 				if (g_pCtx ->GetOptExpression () &&
@@ -3260,7 +3260,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case NOTEQ:
+		case yy::parser::token::NOTEQ:
 			if (nLhsType == NscType_Integer && nRhsType == NscType_Integer)
 			{
 				if (g_pCtx ->GetOptExpression () &&
@@ -3440,7 +3440,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case MULEQ:
+		case yy::parser::token::MULEQ:
 			if (nLhsType == NscType_Vector && nRhsType == NscType_Float)
 			{
 				NscPushAssignment (pOut, NscPCode_AsnMultiply, 
@@ -3468,7 +3468,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case DIVEQ:
+		case yy::parser::token::DIVEQ:
 			if (nLhsType == NscType_Vector && nRhsType == NscType_Float)
 			{
 				NscPushAssignment (pOut, NscPCode_AsnDivide, 
@@ -3496,7 +3496,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case MODEQ:
+		case yy::parser::token::MODEQ:
 			if (nLhsType == NscType_Integer && nRhsType == NscType_Integer)
 			{
 				NscPushAssignment (pOut, NscPCode_AsnModulus, 
@@ -3509,7 +3509,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case ADDEQ:
+		case yy::parser::token::ADDEQ:
 			if (nLhsType == NscType_Vector && nRhsType == NscType_Vector)
 			{
 				NscPushAssignment (pOut, NscPCode_AsnAdd, 
@@ -3542,7 +3542,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case SUBEQ:
+		case yy::parser::token::SUBEQ:
 			if (nLhsType == NscType_Vector && nRhsType == NscType_Vector)
 			{
 				NscPushAssignment (pOut, NscPCode_AsnSubtract, 
@@ -3570,7 +3570,7 @@ YYSTYPE NscBuildBinaryOp (int nToken, YY
 			}
 			break;
 
-		case SLEQ:
+		case yy::parser::token::SLEQ:
 			pszOp = "<<=";
 			nOp = NscPCode_AsnShiftLeft;
 asn_shift_operator:;
@@ -3586,17 +3586,17 @@ asn_shift_operator:;
 			}
 			break;
 
-		case SREQ:
+		case yy::parser::token::SREQ:
 			pszOp = ">>=";
 			nOp = NscPCode_AsnShiftRight;
 			goto asn_shift_operator;
 
-		case USREQ:
+		case yy::parser::token::USREQ:
 			pszOp = ">>>=";
 			nOp = NscPCode_AsnUnsignedShiftRight;
 			goto asn_shift_operator;
 
-		case ANDEQ:
+		case yy::parser::token::ANDEQ:
 			pszOp = "&=";
 			nOp = NscPCode_AsnBitwiseAND;
 asn_bitwise_expression:;
@@ -3612,12 +3612,12 @@ asn_bitwise_expression:;
 			}
 			break;
 
-		case XOREQ:
+		case yy::parser::token::XOREQ:
 			pszOp = "^=";
 			nOp = NscPCode_AsnBitwiseXOR;
 			goto asn_bitwise_expression;
 
-		case OREQ:
+		case yy::parser::token::OREQ:
 			pszOp = "|=";
 			nOp = NscPCode_AsnBitwiseOR;
 			goto asn_bitwise_expression;
@@ -3696,12 +3696,12 @@ YYSTYPE NscBuildLogicalOp (int nToken, Y
 
 		const char *pszOp;
 		NscPCode nOp;
-		if (nToken == ANDAND)
+		if (nToken == yy::parser::token::ANDAND)
 		{
 			pszOp = "&&";
 			nOp = NscPCode_LogicalAND;
 		}
-		else if (nToken == OROR)
+		else if (nToken == yy::parser::token::OROR)
 		{
 			pszOp = "||";
 			nOp = NscPCode_LogicalOR;
@@ -3750,12 +3750,12 @@ YYSTYPE NscBuildLogicalOp (int nToken, Y
 			// If the operation is known to be true or false by the lhs
 			//
 
-			else if (nToken == ANDAND && nLhsConstant == 0)
+			else if (nToken == yy::parser::token::ANDAND && nLhsConstant == 0)
 			{
 				pOut ->PushConstantInteger (0);
 				pOut ->SetType (NscType_Integer);
 			}
-			else if (nToken == OROR && nLhsConstant == 1)
+			else if (nToken == yy::parser::token::OROR && nLhsConstant == 1)
 			{
 				pOut ->PushConstantInteger (1);
 				pOut ->SetType (NscType_Integer);
@@ -4706,7 +4706,7 @@ YYSTYPE NscBuild5Block (int nToken, YYST
 	bool fCheckCond;
 	switch (nToken)
 	{
-		case IF:
+		case yy::parser::token::IF:
 			nPCode = NscPCode_If;
 			nFenceType = NscFenceType_If;
 			pszToken = "if";
@@ -4714,7 +4714,7 @@ YYSTYPE NscBuild5Block (int nToken, YYST
 			fCheckCond = pPrev == NULL;
 			break;
 
-		case WHILE:
+		case yy::parser::token::WHILE:
 			nPCode = NscPCode_While;
 			nFenceType = NscFenceType_While;
 			pszToken = "while";
@@ -4722,7 +4722,7 @@ YYSTYPE NscBuild5Block (int nToken, YYST
 			fCheckCond = pPrev == NULL;
 			break;
 
-		case DO:
+		case yy::parser::token::DO:
 			nPCode = NscPCode_Do;
 			nFenceType = NscFenceType_Do;
 			pszToken = "do";
@@ -4730,7 +4730,7 @@ YYSTYPE NscBuild5Block (int nToken, YYST
 			fCheckCond = pPrev != NULL;
 			break;
 
-		case FOR:
+		case yy::parser::token::FOR:
 			nPCode = NscPCode_For;
 			nFenceType = NscFenceType_For;
 			pszToken = "for";
@@ -4738,7 +4738,7 @@ YYSTYPE NscBuild5Block (int nToken, YYST
 			fCheckCond = pPrev == NULL;
 			break;
 
-		case SWITCH:
+		case yy::parser::token::SWITCH:
 			nPCode = NscPCode_Switch;
 			nFenceType = NscFenceType_Switch;
 			pszToken = "switch";
@@ -4787,7 +4787,7 @@ YYSTYPE NscBuild5Block (int nToken, YYST
 		// for this
 		//
 
-		if (nToken == SWITCH)
+		if (nToken == yy::parser::token::SWITCH)
 		{
 			NscSymbolFence *pFence = g_pCtx ->GetCurrentFence ();
 			pFence ->nPrevLocals++;
@@ -4806,7 +4806,7 @@ YYSTYPE NscBuild5Block (int nToken, YYST
 	// then set return
 	//
 
-	if (nToken == IF && pFalse)
+	if (nToken == yy::parser::token::IF && pFalse)
 	{
 		if (fHadReturn)
 			NscSetFenceReturn (true);
@@ -4992,7 +4992,7 @@ YYSTYPE NscBuildCase (int nToken, YYSTYP
 		// If this is a case
 		//
 
-		if (nToken == CASE)
+		if (nToken == yy::parser::token::CASE)
 		{
 
 			//
@@ -5061,7 +5061,7 @@ YYSTYPE NscBuildCase (int nToken, YYSTYP
 			// Test for only one default
 			//
 
-			if (nToken == DEFAULT)
+			if (nToken == yy::parser::token::DEFAULT)
 			{
 				if (pFence ->fHasDefault)
 				{
@@ -5086,9 +5086,9 @@ YYSTYPE NscBuildCase (int nToken, YYSTYP
 			//
 
 			NscPCode nPCode;
-			if (nToken == CASE)
+			if (nToken == yy::parser::token::CASE)
 				nPCode = NscPCode_Case;
-			else if (nToken == DEFAULT)
+			else if (nToken == yy::parser::token::DEFAULT)
 				nPCode = NscPCode_Default;
 			else
 			{
@@ -5262,9 +5262,9 @@ YYSTYPE NscBuildBreakContinue (int nToke
 	//
 
 	NscPCode nPCode;
-	if (nToken == BREAK)
+	if (nToken == yy::parser::token::BREAK)
 		nPCode = NscPCode_Break;
-	else if (nToken == CONTINUE)
+	else if (nToken == yy::parser::token::CONTINUE)
 		nPCode = NscPCode_Continue;
 	else
 	{
@@ -5279,7 +5279,7 @@ YYSTYPE NscBuildBreakContinue (int nToke
 	NscSymbolFence *pFence = g_pCtx ->GetCurrentFence ();
 	while (pFence)
 	{
-		if ((pFence ->nFenceType == NscFenceType_Switch && nToken == BREAK) ||
+		if ((pFence ->nFenceType == NscFenceType_Switch && nToken == yy::parser::token::BREAK) ||
 			pFence ->nFenceType == NscFenceType_Do ||
 			pFence ->nFenceType == NscFenceType_While ||
 			pFence ->nFenceType == NscFenceType_For)
@@ -5288,12 +5288,12 @@ YYSTYPE NscBuildBreakContinue (int nToke
 	}
 	if (pFence == NULL)
 	{
-		if (nToken == BREAK)
+		if (nToken == yy::parser::token::BREAK)
 		{
             g_pCtx ->GenerateError ("\"break\" statement only allowed in "
 			    "\"switch\", \"do\", \"while\", and \"for\" statements");
 		}
-		else if (nToken == CONTINUE)
+		else if (nToken == yy::parser::token::CONTINUE)
 		{
             g_pCtx ->GenerateError ("\"continue\" statement only allowed in "
 			    "\"do\", \"while\", and \"for\" statements");
