--- _NscLib/NscParser.ypp.orig	2005-11-12 10:25:46.000000000 +1100
+++ _NscLib/NscParser.ypp	2014-12-17 15:29:03.000000000 +1100
@@ -273,15 +273,15 @@ shift_expression:
 		}
 	| shift_expression SL additive_expression
 		{ 
-			$$ = NscBuildBinaryOp (SL, $1, $3); 
+			$$ = NscBuildBinaryOp (token::SL, $1, $3); 
 		}
 	| shift_expression SR additive_expression
 		{ 
-			$$ = NscBuildBinaryOp (SR, $1, $3); 
+			$$ = NscBuildBinaryOp (token::SR, $1, $3); 
 		}
 	| shift_expression USR additive_expression
 		{ 
-			$$ = NscBuildBinaryOp (USR, $1, $3); 
+			$$ = NscBuildBinaryOp (token::USR, $1, $3); 
 		}
 	;
 
@@ -300,11 +300,11 @@ relational_expression:
 		}
 	| relational_expression LTEQ shift_expression
 		{ 
-			$$ = NscBuildBinaryOp (LTEQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::LTEQ, $1, $3); 
 		}
 	| relational_expression GTEQ shift_expression
 		{ 
-			$$ = NscBuildBinaryOp (GTEQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::GTEQ, $1, $3); 
 		}
 	;
 
@@ -315,11 +315,11 @@ equality_expression:
 		}
 	| equality_expression EQ relational_expression
 		{ 
-			$$ = NscBuildBinaryOp (EQ, $1, $3);
+			$$ = NscBuildBinaryOp (token::EQ, $1, $3);
 		}
 	| equality_expression NOTEQ relational_expression
 		{ 
-			$$ = NscBuildBinaryOp (NOTEQ, $1, $3);
+			$$ = NscBuildBinaryOp (token::NOTEQ, $1, $3);
 		}
 	;
 
@@ -363,7 +363,7 @@ logical_and_expression:
 		}
 	| logical_and_expression ANDAND inclusive_or_expression
 		{ 
-			$$ = NscBuildLogicalOp (ANDAND, $1, $3); 
+			$$ = NscBuildLogicalOp (token::ANDAND, $1, $3); 
 		}
 	;
 
@@ -374,7 +374,7 @@ logical_or_expression:
 		}
 	| logical_or_expression OROR logical_and_expression
 		{ 
-			$$ = NscBuildLogicalOp (OROR, $1, $3); 
+			$$ = NscBuildLogicalOp (token::OROR, $1, $3); 
 		}
 	;
 
@@ -400,47 +400,47 @@ assignment_expression:
 		}
 	| unary_expression MULEQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (MULEQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::MULEQ, $1, $3); 
 		}
 	| unary_expression DIVEQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (DIVEQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::DIVEQ, $1, $3); 
 		}
 	| unary_expression MODEQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (MODEQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::MODEQ, $1, $3); 
 		}
 	| unary_expression ADDEQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (ADDEQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::ADDEQ, $1, $3); 
 		}
 	| unary_expression SUBEQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (SUBEQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::SUBEQ, $1, $3); 
 		}
 	| unary_expression SLEQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (SLEQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::SLEQ, $1, $3); 
 		}
 	| unary_expression SREQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (SREQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::SREQ, $1, $3); 
 		}
 	| unary_expression USREQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (USREQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::USREQ, $1, $3); 
 		}
 	| unary_expression ANDEQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (ANDEQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::ANDEQ, $1, $3); 
 		}
 	| unary_expression XOREQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (XOREQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::XOREQ, $1, $3); 
 		}
 	| unary_expression OREQ assignment_expression
 		{ 
-			$$ = NscBuildBinaryOp (OREQ, $1, $3); 
+			$$ = NscBuildBinaryOp (token::OREQ, $1, $3); 
 		}
 	;
 
@@ -480,39 +480,39 @@ qualified_type_specifier:
 type_specifier:
 	VOID_TYPE 
 		{
-			$$ = NscBuildType (VOID_TYPE, NULL); 
+			$$ = NscBuildType (token::VOID_TYPE, NULL); 
 		}
 	| INT_TYPE 
 		{
-			$$ = NscBuildType (INT_TYPE, NULL); 
+			$$ = NscBuildType (token::INT_TYPE, NULL); 
 		}
 	| FLOAT_TYPE 
 		{
-			$$ = NscBuildType (FLOAT_TYPE, NULL); 
+			$$ = NscBuildType (token::FLOAT_TYPE, NULL); 
 		}
 	| OBJECT_TYPE 
 		{ 
-			$$ = NscBuildType (OBJECT_TYPE, NULL); 
+			$$ = NscBuildType (token::OBJECT_TYPE, NULL); 
 		}
 	| STRING_TYPE 
 		{ 
-			$$ = NscBuildType (STRING_TYPE, NULL); 
+			$$ = NscBuildType (token::STRING_TYPE, NULL); 
 		}
 	| ACTION_TYPE 
 		{ 
-			$$ = NscBuildType (ACTION_TYPE, NULL); 
+			$$ = NscBuildType (token::ACTION_TYPE, NULL); 
 		}
 	| VECTOR_TYPE 
 		{ 
-			$$ = NscBuildType (VECTOR_TYPE, NULL); 
+			$$ = NscBuildType (token::VECTOR_TYPE, NULL); 
 		}
 	| struct_type_start IDENTIFIER 
 		{ 
-			$$ = NscBuildType (STRUCT_TYPE, $2); 
+			$$ = NscBuildType (token::STRUCT_TYPE, $2); 
 		}
 	| ENGINE_TYPE 
 		{
-			$$ = NscBuildType (ENGINE_TYPE, $1); 
+			$$ = NscBuildType (token::ENGINE_TYPE, $1); 
 		}
 	;
 	
@@ -600,11 +600,11 @@ labeled_statement:
 case_statement:
 	CASE { NscBuildSaveLine (0); } constant_expression ':' 
 		{ 
-			$$ = NscBuildCase (CASE, $3); 
+			$$ = NscBuildCase (token::CASE, $3); 
 		}
 	| DEFAULT { NscBuildSaveLine (0); } ':' 
 		{
-			$$ = NscBuildCase (DEFAULT, NULL); 
+			$$ = NscBuildCase (token::DEFAULT, NULL); 
 		}
 	;
 	
@@ -680,15 +680,15 @@ expression_statement:
 selection_statement:
 	if_start statement_blank_error
 		{ 
-			$$ = NscBuild5Block (IF, $1, 0, NULL, NULL, NULL, $2, NULL); 
+			$$ = NscBuild5Block (token::IF, $1, 0, NULL, NULL, NULL, $2, NULL); 
 		}
 	| if_else_start statement_blank_error 
 		{
-			$$ = NscBuild5Block (IF, $1, 0, NULL, NULL, NULL, NULL, $2);
+			$$ = NscBuild5Block (token::IF, $1, 0, NULL, NULL, NULL, NULL, $2);
 		}
 	| switch_start statement 
 		{
-			$$ = NscBuild5Block (SWITCH, $1, 0, NULL, NULL, NULL, $2, NULL); 
+			$$ = NscBuild5Block (token::SWITCH, $1, 0, NULL, NULL, NULL, $2, NULL); 
 		}
 	;
 	
@@ -696,21 +696,21 @@ if_else_start:
 	if_start statement_blank_error ELSE 
 		{
 			NscBuildSaveLine (0); 
-			$$ = NscBuild5Block (IF, $1, 1, NULL, NULL, NULL, $2, NULL); 
+			$$ = NscBuild5Block (token::IF, $1, 1, NULL, NULL, NULL, $2, NULL); 
 		}
 	;
 		
 if_start:
 	IF '(' { NscBuildSaveLine (0); } expression ')' 
 		{ 
-			$$ = NscBuild5Block (IF, NULL, 1, NULL, $4, NULL, NULL, NULL); 
+			$$ = NscBuild5Block (token::IF, NULL, 1, NULL, $4, NULL, NULL, NULL); 
 		}
 	;
 	
 switch_start:
 	SWITCH { NscBuildSaveLine (0); } '(' expression ')' 
 		{
-			$$ = NscBuild5Block (SWITCH, NULL, 1, NULL, $4, NULL, NULL, NULL); 
+			$$ = NscBuild5Block (token::SWITCH, NULL, 1, NULL, $4, NULL, NULL, NULL); 
 		}
 	;
 	
@@ -723,50 +723,50 @@ switch_start:
 iteration_statement:
 	while_start statement 
 		{
-			$$ = NscBuild5Block (WHILE, $1, 0, NULL, NULL, NULL, $2, NULL); 
+			$$ = NscBuild5Block (token::WHILE, $1, 0, NULL, NULL, NULL, $2, NULL); 
 		}
 	| do_start statement WHILE { NscBuildSaveLine (0); } '(' expression ')' ';' 
 		{
-			$$ = NscBuild5Block (DO, $1, 0, NULL, $6, NULL, $2, NULL); 
+			$$ = NscBuild5Block (token::DO, $1, 0, NULL, $6, NULL, $2, NULL); 
 		}
 	| for_start statement 
 		{
-			$$ = NscBuild5Block (FOR, $1, 0, NULL, NULL, NULL, $2, NULL); 
+			$$ = NscBuild5Block (token::FOR, $1, 0, NULL, NULL, NULL, $2, NULL); 
 		}
 	;
 	
 for_start:
 	for_start_start ';' ';' ')' 
 		{
-			$$ = NscBuild5Block (FOR, NULL, 1, NULL, NULL, NULL, NULL, NULL); 
+			$$ = NscBuild5Block (token::FOR, NULL, 1, NULL, NULL, NULL, NULL, NULL); 
 		}
 	| for_start_start expression ';' ';' ')' 
 		{ 
-			$$ = NscBuild5Block (FOR, NULL, 1, $2, NULL, NULL, NULL, NULL); 
+			$$ = NscBuild5Block (token::FOR, NULL, 1, $2, NULL, NULL, NULL, NULL); 
 		}
 	| for_start_start ';' expression ';' ')'
 		{ 
-			$$ = NscBuild5Block (FOR, NULL, 1, NULL, $3, NULL, NULL, NULL);
+			$$ = NscBuild5Block (token::FOR, NULL, 1, NULL, $3, NULL, NULL, NULL);
 		}
 	| for_start_start expression ';' expression ';' ')' 
 		{
-			$$ = NscBuild5Block (FOR, NULL, 1, $2, $4, NULL, NULL, NULL); 
+			$$ = NscBuild5Block (token::FOR, NULL, 1, $2, $4, NULL, NULL, NULL); 
 		}
 	| for_start_start ';' ';' expression ')' 
 		{
-			$$ = NscBuild5Block (FOR, NULL, 1, NULL, NULL, $4, NULL, NULL); 
+			$$ = NscBuild5Block (token::FOR, NULL, 1, NULL, NULL, $4, NULL, NULL); 
 		}
 	| for_start_start expression ';' ';' expression ')' 
 		{
-			$$ = NscBuild5Block (FOR, NULL, 1, $2, NULL, $5, NULL, NULL); 
+			$$ = NscBuild5Block (token::FOR, NULL, 1, $2, NULL, $5, NULL, NULL); 
 		}
 	| for_start_start ';' expression ';' expression ')' 
 		{
-			$$ = NscBuild5Block (FOR, NULL, 1, NULL, $3, $5, NULL, NULL); 
+			$$ = NscBuild5Block (token::FOR, NULL, 1, NULL, $3, $5, NULL, NULL); 
 		}
 	| for_start_start expression ';' expression ';' expression ')' 
 		{
-			$$ = NscBuild5Block (FOR, NULL, 1, $2, $4, $6, NULL, NULL); 
+			$$ = NscBuild5Block (token::FOR, NULL, 1, $2, $4, $6, NULL, NULL); 
 		}
 	;
 	
@@ -780,14 +780,14 @@ for_start_start:
 while_start:
 	WHILE '(' { NscBuildSaveLine (0); } expression ')' 
 		{ 
-			$$ = NscBuild5Block (WHILE, NULL, 1, NULL, $4, NULL, NULL, NULL); 
+			$$ = NscBuild5Block (token::WHILE, NULL, 1, NULL, $4, NULL, NULL, NULL); 
 		}
 	;
 	
 do_start:
 	DO 
 		{ 
-			$$ = NscBuild5Block (DO, NULL, 1, NULL, NULL, NULL, NULL, NULL); 
+			$$ = NscBuild5Block (token::DO, NULL, 1, NULL, NULL, NULL, NULL, NULL); 
 		}
 	;
 		
@@ -800,11 +800,11 @@ do_start:
 jump_statement:
 	CONTINUE { NscBuildSaveLine (0); } ';'
 		{
-			$$ = NscBuildBreakContinue (CONTINUE);
+			$$ = NscBuildBreakContinue (token::CONTINUE);
 		}
 	| BREAK { NscBuildSaveLine (0); } ';' 
 		{
-			$$ = NscBuildBreakContinue (BREAK); 
+			$$ = NscBuildBreakContinue (token::BREAK); 
 		}
 	| return_start ';' 
 		{
