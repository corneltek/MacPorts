--- Makefile.am.orig	2009-06-26 09:19:42.000000000 -0400
+++ Makefile.am	2010-05-01 08:14:04.000000000 -0400
@@ -44,6 +44,8 @@
 noinst_HEADERS += asserts.h
 noinst_HEADERS += types.h
 test_types_SOURCES = \
+	types.cc \
+	rmath.cc \
 	test-types.cc \
 	#
 TESTS += test-types
@@ -51,6 +53,8 @@
 noinst_PROGRAMS += test-error
 noinst_HEADERS += error.h
 test_error_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	test-error.cc \
 	#
@@ -59,6 +63,8 @@
 noinst_PROGRAMS += test-estring
 noinst_HEADERS += estring.h
 test_estring_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	test-estring.cc \
@@ -68,6 +74,8 @@
 noinst_PROGRAMS += test-rmath
 noinst_HEADERS += rmath.h
 test_rmath_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	test-rmath.cc \
@@ -77,6 +85,8 @@
 noinst_PROGRAMS += test-strfmt
 noinst_HEADERS += estring.h
 test_strfmt_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	test-strfmt.cc \
@@ -85,6 +95,8 @@
 
 noinst_PROGRAMS += test-strfmt-001
 test_strfmt_001_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -95,6 +107,8 @@
 
 noinst_PROGRAMS += test-strfmt-002
 test_strfmt_002_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -105,6 +119,8 @@
 
 noinst_PROGRAMS += test-strfmt-003
 test_strfmt_003_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -115,6 +131,8 @@
 
 noinst_PROGRAMS += test-strfmt-004
 test_strfmt_004_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -127,6 +145,8 @@
 noinst_HEADERS += fs.h
 noinst_HEADERS +=	test-fs-cwd.h
 test_fs_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -144,6 +164,8 @@
 noinst_PROGRAMS += test-tstamp
 noinst_HEADERS += tstamp.h
 test_tstamp_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	tstamp.cc \
@@ -155,6 +177,8 @@
 noinst_HEADERS += exec.h
 noinst_HEADERS += fdstream.h
 test_exec_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -168,6 +192,8 @@
 noinst_HEADERS += strfmt.h
 noinst_HEADERS += timer.h
 test_timer_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	fs.cc \
 	estring.cc \
@@ -181,6 +207,8 @@
 
 noinst_PROGRAMS += test-rconfig-001
 test_rconfig_001_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -193,6 +221,8 @@
 
 noinst_PROGRAMS += test-rconfig-002
 test_rconfig_002_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -205,6 +235,8 @@
 
 noinst_PROGRAMS += test-rconfig-003
 test_rconfig_003_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -217,6 +249,8 @@
 
 noinst_PROGRAMS += test-rconfig-004
 test_rconfig_004_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -229,6 +263,8 @@
 
 noinst_PROGRAMS += test-rconfig-005
 test_rconfig_005_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -241,6 +277,8 @@
 
 noinst_PROGRAMS += test-rconfig-006
 test_rconfig_006_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -253,6 +291,8 @@
 
 noinst_PROGRAMS += test-rconfig-007
 test_rconfig_007_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -265,6 +305,8 @@
 
 noinst_PROGRAMS += test-rconfig-008
 test_rconfig_008_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -277,6 +319,8 @@
 
 noinst_PROGRAMS += test-rconfig-009
 test_rconfig_009_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -289,6 +333,8 @@
 
 noinst_PROGRAMS += test-rconfig-010
 test_rconfig_010_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -301,6 +347,8 @@
 
 noinst_PROGRAMS += test-rconfig-011
 test_rconfig_011_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -313,6 +361,8 @@
 
 noinst_PROGRAMS += test-rconfig-012
 test_rconfig_012_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -325,6 +375,8 @@
 
 noinst_PROGRAMS += test-rconfig-013
 test_rconfig_013_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -337,6 +389,8 @@
 
 noinst_PROGRAMS += test-rconfig-014
 test_rconfig_014_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -349,6 +403,8 @@
 
 noinst_PROGRAMS += test-rconfig-015
 test_rconfig_015_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -361,6 +417,8 @@
 
 noinst_PROGRAMS += test-rconfig-016
 test_rconfig_016_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -373,6 +431,8 @@
 
 noinst_PROGRAMS += test-rconfig-017
 test_rconfig_017_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -385,6 +445,8 @@
 
 noinst_PROGRAMS += test-rconfig-018
 test_rconfig_018_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -397,6 +459,8 @@
 
 noinst_PROGRAMS += test-rconfig-019
 test_rconfig_019_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -409,6 +473,8 @@
 
 noinst_PROGRAMS += test-rconfig-020
 test_rconfig_020_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -421,6 +487,8 @@
 
 noinst_PROGRAMS += test-rconfig-021
 test_rconfig_021_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -433,6 +501,8 @@
 
 noinst_PROGRAMS += test-rconfig-022
 test_rconfig_022_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -445,6 +515,8 @@
 
 noinst_PROGRAMS += test-rconfig-023
 test_rconfig_023_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -457,6 +529,8 @@
 
 noinst_PROGRAMS += test-rconfig-024
 test_rconfig_024_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -469,6 +543,8 @@
 
 noinst_PROGRAMS += test-rconfig-025
 test_rconfig_025_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -481,6 +557,8 @@
 
 noinst_PROGRAMS += test-rconfig-026
 test_rconfig_026_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -493,6 +571,8 @@
 
 noinst_PROGRAMS += test-rconfig-027
 test_rconfig_027_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -505,6 +585,8 @@
 
 noinst_PROGRAMS += test-rconfig-028
 test_rconfig_028_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -517,6 +599,8 @@
 
 noinst_PROGRAMS += test-rconfig-029
 test_rconfig_029_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -529,6 +613,8 @@
 
 noinst_PROGRAMS += test-rconfig-030
 test_rconfig_030_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -541,6 +627,8 @@
 
 noinst_PROGRAMS += test-rconfig-031
 test_rconfig_031_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -553,6 +641,8 @@
 
 noinst_PROGRAMS += test-rconfig-032
 test_rconfig_032_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -565,6 +655,8 @@
 
 noinst_PROGRAMS += test-rconfig-033
 test_rconfig_033_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -577,6 +669,8 @@
 
 noinst_PROGRAMS += test-rconfig-034
 test_rconfig_034_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -589,6 +683,8 @@
 
 noinst_PROGRAMS += test-rconfig-035
 test_rconfig_035_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -601,6 +697,8 @@
 
 noinst_PROGRAMS += test-rconfig-036
 test_rconfig_036_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -613,6 +711,8 @@
 
 noinst_PROGRAMS += test-rconfig-037
 test_rconfig_037_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -625,6 +725,8 @@
 
 noinst_PROGRAMS += test-rconfig-038
 test_rconfig_038_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -637,6 +739,8 @@
 
 noinst_PROGRAMS += test-rconfig-039
 test_rconfig_039_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -649,6 +753,8 @@
 
 noinst_PROGRAMS += test-rconfig-040
 test_rconfig_040_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -661,6 +767,8 @@
 
 noinst_PROGRAMS += test-rconfig-041
 test_rconfig_041_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -673,6 +781,8 @@
 
 noinst_PROGRAMS += test-rconfig-042
 test_rconfig_042_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -685,6 +795,8 @@
 
 noinst_PROGRAMS += test-rconfig-043
 test_rconfig_043_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -697,6 +809,8 @@
 
 noinst_PROGRAMS += test-rconfig-044
 test_rconfig_044_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -709,6 +823,8 @@
 
 noinst_PROGRAMS += test-rconfig-045
 test_rconfig_045_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -721,6 +837,8 @@
 
 noinst_PROGRAMS += test-rconfig-046
 test_rconfig_046_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -733,6 +851,8 @@
 
 noinst_PROGRAMS += test-rconfig-047
 test_rconfig_047_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -745,6 +865,8 @@
 
 noinst_PROGRAMS += test-rconfig-048
 test_rconfig_048_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -757,6 +879,8 @@
 
 noinst_PROGRAMS += test-rconfig-049
 test_rconfig_049_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -769,6 +893,8 @@
 
 noinst_PROGRAMS += test-rconfig-050
 test_rconfig_050_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -781,6 +907,8 @@
 
 noinst_PROGRAMS += test-rconfig-051
 test_rconfig_051_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -793,6 +921,8 @@
 
 noinst_PROGRAMS += test-rconfig-052
 test_rconfig_052_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -805,6 +935,8 @@
 
 noinst_PROGRAMS += test-rconfig-053
 test_rconfig_053_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -817,6 +949,8 @@
 
 noinst_PROGRAMS += test-rconfig-054
 test_rconfig_054_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -829,6 +963,8 @@
 
 noinst_PROGRAMS += test-rconfig-055
 test_rconfig_055_SOURCES = \
+	types.cc \
+	rmath.cc \
  	error.cc \
  	estring.cc \
  	tstamp.cc \
@@ -841,6 +977,8 @@
 
 noinst_PROGRAMS += test-rconfig-056
 test_rconfig_056_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	tstamp.cc \
@@ -853,6 +991,8 @@
 noinst_PROGRAMS += test-logger
 noinst_HEADERS += logger.h
 test_logger_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	tstamp.cc \
@@ -870,6 +1010,8 @@
 noinst_PROGRAMS += test-table
 noinst_HEADERS += table.h
 test_table_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	table.cc \
@@ -884,6 +1026,8 @@
 
 noinst_PROGRAMS += test-vaulter-001
 test_vaulter_001_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -904,6 +1048,8 @@
 
 noinst_PROGRAMS += test-vaulter-002
 test_vaulter_002_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -924,6 +1070,8 @@
 
 noinst_PROGRAMS += test-vaulter-003
 test_vaulter_003_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -944,6 +1092,8 @@
 
 noinst_PROGRAMS += test-vaulter-004
 test_vaulter_004_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -964,6 +1114,8 @@
 
 noinst_PROGRAMS += test-vaulter-005
 test_vaulter_005_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -984,6 +1136,8 @@
 
 noinst_PROGRAMS += test-vaulter-006
 test_vaulter_006_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -1007,6 +1161,8 @@
 noinst_HEADERS += cataloger.h
 noinst_HEADERS += reporter.h
 test_rvm_001_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -1029,6 +1185,8 @@
 
 noinst_PROGRAMS += test-rvm-002
 test_rvm_002_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -1054,6 +1212,8 @@
 noinst_HEADERS += cataloger.h
 noinst_HEADERS += reporter.h
 test_rvm_003_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
@@ -1077,6 +1237,8 @@
 bin_PROGRAMS += rvm
 noinst_HEADERS += help.h
 rvm_SOURCES = \
+	types.cc \
+	rmath.cc \
 	error.cc \
 	estring.cc \
 	fs.cc \
--- rmath.h.orig	2009-06-12 15:11:00.000000000 -0400
+++ rmath.h	2010-05-01 08:17:12.000000000 -0400
@@ -79,10 +79,7 @@
 
 /** Return the largest possible number that a float may hold. */
 template<>
-const float max_limit<float>()
-{
-	return(FLT_MAX);
-}
+const float max_limit<float>();
 
 /** Return the smallest positive number that a float may hold.
  *
@@ -92,17 +89,11 @@
  * use lowest_value<T>() instead.
  */
 template<>
-const float min_limit<float>()
-{
-	return(FLT_MIN);
-}
+const float min_limit<float>();
 
 /** Return the largest possible number that a double may hold. */
 template<>
-const double max_limit<double>()
-{
-	return(DBL_MAX);
-}
+const double max_limit<double>();
 
 /** Return the smallest positive number that a double may hold.
  *
@@ -112,10 +103,7 @@
  * use lowest_value<T>() instead.
  */
 template<>
-const double min_limit<double>()
-{
-	return(DBL_MIN);
-}
+const double min_limit<double>();
 
 // ---------------------------------------------------------------------------
 
--- test-error.cc.orig	2009-06-12 11:17:07.000000000 -0400
+++ test-error.cc	2010-05-01 15:42:51.000000000 -0400
@@ -213,9 +213,9 @@
 		test4();
 		test5();
 		test6();
-#ifdef HAVE_EXCEPTION_ON_ALLOC_FAILURE
-		test7();
-#endif
+// #ifdef HAVE_EXCEPTION_ON_ALLOC_FAILURE
+// 		test7();
+// #endif
 		test8();
 	}
 	catch(error e) {
--- types.h.orig	2009-06-12 09:41:12.000000000 -0400
+++ types.h	2010-05-01 08:16:35.000000000 -0400
@@ -101,9 +101,7 @@
 { return(false); }
 
 /** Return true for any variable that is a char */
-template<>
-bool is_signed_char(const char& a_arg) 
-{ return(true); }
+bool is_signed_char(const char& a_arg);
 
 /** Return false for any variable that is not an unsigned char */
 template<typename T>
@@ -111,9 +109,7 @@
 { return(false); }
 
 /** Return true for any variable that is an unsigned char */
-template<>
-bool is_unsigned_char(const unsigned char& a_arg) 
-{ return(true); }
+bool is_unsigned_char(const unsigned char& a_arg);
 
 /** Return true for any variable that is either a signed or unsigned char */
 template<typename T>
@@ -128,9 +124,7 @@
 { return(false); }
 
 /** Return true for any variable that is a short */
-template<>
-bool is_signed_short(const short& a_arg) 
-{ return(true); }
+bool is_signed_short(const short& a_arg);
 
 /** Return false for any variable that is not an unsigned short */
 template<typename T>
@@ -138,9 +132,7 @@
 { return(false); }
 
 /** Return true for any variable that is an unsigned short */
-template<>
-bool is_unsigned_short(const unsigned short& a_arg) 
-{ return(true); }
+bool is_unsigned_short(const unsigned short& a_arg);
 
 /** Return true for any variable that is either a signed or unsigned short */
 template<typename T>
@@ -155,9 +147,7 @@
 { return(false); }
 
 /** Return true for any variable that is a int */
-template<>
-bool is_signed_int(const int& a_arg) 
-{ return(true); }
+bool is_signed_int(const int& a_arg);
 
 /** Return false for any variable that is not an unsigned int */
 template<typename T>
@@ -165,9 +155,7 @@
 { return(false); }
 
 /** Return true for any variable that is an unsigned int */
-template<>
-bool is_unsigned_int(const unsigned int& a_arg) 
-{ return(true); }
+bool is_unsigned_int(const unsigned int& a_arg);
 
 /** Return true for any variable that is either a signed or unsigned int */
 template<typename T>
@@ -182,9 +170,7 @@
 { return(false); }
 
 /** Return true for any variable that is a long */
-template<>
-bool is_signed_long(const long& a_arg) 
-{ return(true); }
+bool is_signed_long(const long& a_arg);
 
 /** Return false for any variable that is not an unsigned long */
 template<typename T>
@@ -192,9 +178,7 @@
 { return(false); }
 
 /** Return true for any variable that is an unsigned long */
-template<>
-bool is_unsigned_long(const unsigned long& a_arg) 
-{ return(true); }
+bool is_unsigned_long(const unsigned long& a_arg);
 
 /** Return true for any variable that is either a signed or unsigned long */
 template<typename T>
@@ -209,9 +193,7 @@
 { return(false); }
 
 /** Return true for any variable that is a long long */
-template<>
-bool is_signed_long_long(const long long& a_arg) 
-{ return(true); }
+bool is_signed_long_long(const long long& a_arg);
 
 /** Return false for any variable that is not an unsigned long long */
 template<typename T>
@@ -219,9 +201,7 @@
 { return(false); }
 
 /** Return true for any variable that is an unsigned long long */
-template<>
-bool is_unsigned_long_long(const unsigned long long& a_arg) 
-{ return(true); }
+bool is_unsigned_long_long(const unsigned long long& a_arg);
 
 /** Return true for any variable that is either a signed or unsigned long long */
 template<typename T>
@@ -236,9 +216,7 @@
 { return(false); }
 
 /** Return true for any variable that is a float */
-template<>
-bool is_float(const float& a_arg) 
-{ return(true); }
+bool is_float(const float& a_arg);
 
 // -----
 
@@ -248,9 +226,7 @@
 { return(false); }
 
 /** Return true for any variable that is a double */
-template<>
-bool is_double(const double& a_arg) 
-{ return(true); }
+bool is_double(const double& a_arg);
 
 // -----
 
@@ -260,9 +236,7 @@
 { return(false); }
 
 /** Return true for any variable that is a bool */
-template<>
-bool is_bool(const bool& a_arg)
-{ return(true); }
+bool is_bool(const bool& a_arg);
 
 // -----
 
@@ -300,57 +274,31 @@
 static const char * type_name(const T & a_arg)
 { return("unknown"); }
 
-template<>
-const char * type_name(const unsigned char & a_arg)
-{ return("unsigned char"); }
-
-template<>
-const char * type_name(const char & a_arg)
-{ return("char"); }
-
-template<>
-const char * type_name(const unsigned short & a_arg)
-{ return("unsigned short"); }
-
-template<>
-const char * type_name(const short & a_arg)
-{ return("short"); }
-
-template<>
-const char * type_name(const unsigned int & a_arg)
-{ return("unsigned int"); }
-
-template<>
-const char * type_name(const int & a_arg)
-{ return("int"); }
-
-template<>
-const char * type_name(const unsigned long & a_arg)
-{ return("unsigned long"); }
-
-template<>
-const char * type_name(const long & a_arg)
-{ return("long"); }
-
-template<>
-const char * type_name(const unsigned long long & a_arg)
-{ return("unsigned long long"); }
-
-template<>
-const char * type_name(const long long & a_arg)
-{ return("long long"); }
-
-template<>
-const char * type_name(const float & a_arg)
-{ return("float"); }
-
-template<>
-const char * type_name(const double & a_arg)
-{ return("double"); }
-
-template<>
-const char * type_name(const bool & a_arg)
-{ return("bool"); }
+const char * type_name(const unsigned char & a_arg);
+
+const char * type_name(const char & a_arg);
+
+const char * type_name(const unsigned short & a_arg);
+
+const char * type_name(const short & a_arg);
+
+const char * type_name(const unsigned int & a_arg);
+
+const char * type_name(const int & a_arg);
+
+const char * type_name(const unsigned long & a_arg);
+
+const char * type_name(const long & a_arg);
+
+const char * type_name(const unsigned long long & a_arg);
+
+const char * type_name(const long long & a_arg);
+
+const char * type_name(const float & a_arg);
+
+const char * type_name(const double & a_arg);
+
+const char * type_name(const bool & a_arg);
 
 // ----------------------------------------------------------------------------
 
