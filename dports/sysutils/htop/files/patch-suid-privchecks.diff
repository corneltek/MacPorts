diff --git a/OpenFilesScreen.c b/OpenFilesScreen.c
index a312d0f..25b1904 100644
--- a/OpenFilesScreen.c
+++ b/OpenFilesScreen.c
@@ -76,8 +76,13 @@ static void OpenFilesScreen_draw(OpenFilesScreen* this) {
 static OpenFiles_ProcessData* OpenFilesScreen_getProcessData(int pid) {
    char command[1025];
    snprintf(command, 1024, "lsof -p %d -F 2> /dev/null", pid);
+   uid_t euid = geteuid();
+   seteuid(getuid());
    FILE* fd = popen(command, "r");
+   seteuid(euid);
    OpenFiles_ProcessData* process = calloc(sizeof(OpenFiles_ProcessData), 1);
+   if (fd)
+   {
    OpenFiles_FileData* file = NULL;
    OpenFiles_ProcessData* item = process;
    process->failed = true;
@@ -107,6 +112,7 @@ static OpenFiles_ProcessData* OpenFilesScreen_getProcessData(int pid) {
       item->data[cmd] = entry;
    }
    pclose(fd);
+   }
    return process;
 }
 
diff --git a/Process.c b/Process.c
index cd9a887..42c4fe0 100644
--- a/Process.c
+++ b/Process.c
@@ -587,12 +587,16 @@ Process_toggleTag( Process * this ) {
 
 bool
 Process_setPriority( Process * this, int priority ) {
-  int old_prio = getpriority( PRIO_PROCESS, this->pid );
-  int err = setpriority( PRIO_PROCESS, this->pid, priority );
-  if ( err == 0 && old_prio != getpriority( PRIO_PROCESS, this->pid ) ) {
-    this->nice = priority;
+  if ( Process_getuid == 0 || Process_getuid == this->st_uid ) {
+    int old_prio = getpriority( PRIO_PROCESS, this->pid );
+    int err = setpriority( PRIO_PROCESS, this->pid, priority );
+    if ( err == 0 && old_prio != getpriority( PRIO_PROCESS, this->pid ) ) {
+      this->nice = priority;
+    }
+    return ( err == 0 );
   }
-  return ( err == 0 );
+  else
+    return false;
 }
 
 unsigned long
@@ -607,7 +611,8 @@ Process_setAffinity( Process * this, unsigned long mask ) {
 
 void
 Process_sendSignal( Process * this, int signal ) {
-  kill( this->pid, signal );
+    if ( Process_getuid == 0 || Process_getuid == this->st_uid )
+        kill( this->pid, signal );
 }
 
 int
diff --git a/TraceScreen.c b/TraceScreen.c
index 19254f9..0fd86b6 100644
--- a/TraceScreen.c
+++ b/TraceScreen.c
@@ -70,6 +70,7 @@ void TraceScreen_run(TraceScreen* this) {
    int child = fork();
    if (child == -1) return;
    if (child == 0) {
+      seteuid(getuid());
       dup2(fdpair[1], STDERR_FILENO);
       fcntl(fdpair[1], F_SETFL, O_NONBLOCK);
       sprintf(buffer, "%d", this->process->pid);
