# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim: fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem 1.0

name                mozjs17
version             17.0.0
categories          lang
platforms           darwin
license             MPL-2.0
maintainers         gmail.org:juanrgar \
                    openmaintainer
description         JavaScript-C Engine
long_description    SpiderMonkey is Mozilla's JavaScript engine written in C/C++. \
                    It is used in various Mozilla products, including Firefox, \
                    and is available under the MPL2.

homepage            http://www.mozilla.org/js/spidermonkey/
master_sites        http://ftp.mozilla.org/pub/mozilla.org/js/ \
                    ftp://ftp.mozilla.org/pub/mozilla.org/js/

checksums           rmd160  2fa3a891da2a7a09019f67c1555c03bcdc51e6c5 \
                    sha256  321e964fe9386785d3bf80870640f2fa1c683e32fe988eeb201b04471c172fba

depends_build       port:autoconf213 \
                    port:xorg-libXt \
                    port:pkgconfig

depends_lib         port:nspr \
                    port:libffi

distname            mozjs${version}
worksrcdir          ${distname}/js/src

use_autoconf        yes
autoconf.cmd        autoconf213
compiler.blacklist  *gcc-*
configure.args      --with-system-nspr \
                    --enable-system-ffi \
                    --disable-readline \
                    --enable-threadsafe

if {[info exists configure.cxx_stdlib]} {
    # The build sets the deployment target to < 10.7, which causes
    # -stdlib=libc++ to fail
    configure.cxx_stdlib    libstdc++
} elseif {[string match *clang* ${configure.compiler}]} {
    configure.cxxflags-append   -stdlib=libstdc++
}

patchfiles          fix-goto-scope-jsinterp.cpp.diff

variant readline description {Link js shell to system readline library} {
    depends_lib-append port:readline
    configure.args-delete --disable-readline
    configure.args-append --enable-readline
}

variant llvm_hacks description {Enable workarounds required for several LLVM instrumentations} {
    configure.args-append --enable-llvm-hacks
}

variant profiling description {Set compile flags necessary for using sampling profilers (e.g. shark, perf)} {
    configure.args-append --enable-profiling
}

# universal build not available due to the following error:
# checking for the size of void*... configure: error: No size found for void*
universal_variant   no

# Use absolute path for install_name
post-patch {
    reinplace "s|@executable_path|${prefix}/lib|g" ${worksrcpath}/config/rules.mk
}

