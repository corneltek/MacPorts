# $Id$

PortSystem        1.0

name              eiffelstudio64
set minor_version 79451
version           6.4.${minor_version}
revision          1
set branch        [join [lrange [split ${version} .] 0 1] ""]
categories        lang
license           GPL
platforms         darwin
maintainers       jann \
                  ethz.ch:dfurrer
description       The ISE Eiffel Compiler and IDE
long_description  EiffelStudio is a development environment for the \
                  Eiffel programming language developed by Eiffel Software. \
                  EiffelStudio includes a combination of tools integrated under \
                  a single user interface: compiler, interpreter, debugger, \
                  browser, metrics tool, profiler, diagram tool. \
                  The user interface rests on a number of specific UI paradigms, \
                  in particular "pick-and-drop" for effective browsing.
homepage          http://www.eiffel.com
master_sites      sourceforge:eiffelstudio:source \
                  http://download.origo.ethz.ch/eiffelstudio/1286/:source \
                  http://n.ethz.ch/student/roederja/download/:launcher \
                  http://www.jann-roeder.net/download/:launcher
depends_lib       port:gtk2 \
                  port:xorg-libXtst
depends_build     bin:bzip2:bzip2 \
                  port:pkgconfig
extract.suffix    .tar
extract.cmd       tar
extract.post_args
extract.pre_args  -xf
distname          PorterPackage_${branch}_${minor_version}
set eiffel_launch eiffel_launcher_20091003.tar.bz2
distfiles         ${distname}${extract.suffix}:source \
                  ${eiffel_launch}:launcher
extract.only      ${distname}${extract.suffix}
worksrcdir        PorterPackage

checksums         ${distname}${extract.suffix} rmd160 5fed6992a7bfaa8d174a5857c31eaca072777a06 \
                  ${eiffel_launch} rmd160 f52af5b8b09ecdd21af4b1d89d2716597a9c1340

use_configure     no

platform i386     {
                    if {${build_arch} == "i386"} {
                        set env(ISE_PLATFORM) macosx-x86
                    } elseif {${build_arch} == "x86_64"} {
                        set env(ISE_PLATFORM) macosx-x86-64
                    }
                  }

platform powerpc  {
                    set env(ISE_PLATFORM) macosx-ppc
                  }
                  
patch             {
                    # This is a temporary workaround to support 64bit architectures until new porter packages are available
                    system "cd ${worksrcpath} && tar -xjf c.tar.bz2"
                    system "cd ${worksrcpath} && patch -p0 < ${portpath}/files/C.diff"
                    system "cd ${worksrcpath} && tar -cjf c.tar.bz2 C"
                    file delete -force -- ${worksrcpath}/C
                  }

build             {
                    set env(ISE_EIFFEL) ${worksrcpath}/Eiffel${branch}
                    set env(GOBO) $env(ISE_EIFFEL)/library/gobo
                    set env(PATH) $env(ISE_EIFFEL)/studio/spec/$env(ISE_PLATFORM)/bin:$env(PATH)

                    system "cd ${worksrcpath} && ${worksrcpath}/compile_exes $env(ISE_PLATFORM)"
                    file attributes ${worksrcpath}/Eiffel${branch}/studio/spec/$env(ISE_PLATFORM)/bin/ec -permissions 0755

                    # Extract Eiffel Launcher
                    system "tar -xjf ${distpath}/${eiffel_launch} -C ${worksrcpath}/Eiffel${branch}/"
                  }

destroot          {
                    xinstall -m 755 -d ${destroot}${applications_dir}
                    file copy ${worksrcpath}/Eiffel${branch} ${destroot}${applications_dir}/

                    # Run ranlib on the libraries
                    system "ranlib ${destroot}${applications_dir}/Eiffel${branch}/studio/spec/$env(ISE_PLATFORM)/lib/*.a"
                    
                    # Fix permissions of precompile directory
                    set env(ISE_EIFFEL) ${destroot}${applications_dir}/Eiffel${branch}
                    file attributes $env(ISE_EIFFEL)/precomp/spec/$env(ISE_PLATFORM) -permissions g+w
                    file attributes $env(ISE_EIFFEL)/experimental/precomp/spec/$env(ISE_PLATFORM) -permissions g+w
                  }

post-activate     {
                    ui_msg " ################################################################################## \n\
                        To complete the installation you have to add the following to your .bashrc or .profile file : \n\
                        export ISE_PLATFORM=$env(ISE_PLATFORM) \n\
                        export ISE_EIFFEL=${applications_dir}/Eiffel${branch} \n\
                        export GOBO=\$ISE_EIFFEL/library/gobo/svn \n\
                        export PATH=\$PATH:\$ISE_EIFFEL/studio/spec/\$ISE_PLATFORM/bin:\$GOBO/../spec/\$ISE_PLATFORM/bin \n\
                        ################################################################################## \n"
                  }
