# $Id: Portfile,v 1.2 2004/01/04 00:10:20 gwright Exp $

PortSystem	1.0
name		logtalk
version		2.15.5

categories	lang
maintainers	pmoura@mac.com
platforms	darwin freebsd linux
description	Logtalk - Open source object-oriented extension to Prolog

long_description	\
		Logtalk is an open source object-oriented extension to the 	\
		Prolog programming language. Integrating logic programming 	\
		with object-oriented and event-driven programming, it is 	\
		compatible with most Prolog compilers. It supports both 	\
		prototypes and classes. In addition, it supports component-	\
		based programming through category-based composition.
		

homepage	http://www.logtalk.org/
master_sites	http://www.logtalk.org/files/

checksums	md5 dd4d3819e139f52b18f2062eb4dec6ee

distname	lgt2155

configure	{}

build		{}

destroot	{
	system "mkdir ${destroot}${prefix}/share/${distname}"
	cd ${destroot}${prefix}/share/${distname}

	system "cp ${workpath}/${worksrcdir}/LICENSE ."
	system "cp ${workpath}/${worksrcdir}/QUICK_START ."
	system "cp ${workpath}/${worksrcdir}/README ."
	system "cp ${workpath}/${worksrcdir}/RELEASE_NOTES ."
	system "cp ${workpath}/${worksrcdir}/UPGRADING ."
	system "cp -R ${workpath}/${worksrcdir}/manuals ."
	system "cp -R ${workpath}/${worksrcdir}/examples ."
	system "chmod -R g+w examples"

	system "mkdir ${destroot}${prefix}/lib/${distname}"
	cd ${destroot}${prefix}/lib/${distname}

	system "cp -R ${workpath}/${worksrcdir}/compiler ."
	system "cp -R ${workpath}/${worksrcdir}/configs ."
	system "cp -R ${workpath}/${worksrcdir}/library ."
	system "cp -R ${workpath}/${worksrcdir}/wenv ."
	system "cp -R ${workpath}/${worksrcdir}/xml ."
	system "chmod -R g+w library"

	if {[variant_isset gprolog]} {
		system "mkdir -p ${destroot}${prefix}/lib/${distname}/bin"
		cd ${destroot}${prefix}/lib/${distname}/bin
		system "cp ${workpath}/${worksrcdir}/gplgt ."
	}

	if {[variant_isset swi-prolog]} {
		system "mkdir -p ${destroot}${prefix}/lib/${distname}/bin"
		cd ${destroot}${prefix}/lib/${distname}/bin
		system "cp ${workpath}/${worksrcdir}/logtalkswi.rc ."
		system "cp ${workpath}/${worksrcdir}/swilgt ."
		system "mv ${workpath}/${worksrcdir}/logtalkswi.pl ."
	}

	if {[variant_isset yap]} {
		system "mkdir -p ${destroot}${prefix}/lib/${distname}/bin"
		cd ${destroot}${prefix}/lib/${distname}/bin
		system "cp ${workpath}/${worksrcdir}/logtalkyap.rc ."
		system "cp ${workpath}/${worksrcdir}/yaplgt ."
	}
}

post-destroot	{
	cd ${destroot}/${prefix}/lib
	system "ln -s ${distname} logtalk"

	cd ../share
	system "ln -s ${distname} logtalk"

	if {[variant_isset gprolog]} {
		cd ../bin
		system "ln -s ../lib/${distname}/bin/gplgt gplgt"
	}

	if {[variant_isset swi-prolog]} {
		cd ../bin
		system "ln -s ../lib/${distname}/bin/swilgt swilgt"
	}

	if {[variant_isset yap]} {
		cd ../bin
		system "ln -s ../lib/${distname}/bin/yaplgt yaplgt"
	}
}

variant	gprolog	{
	depends_lib-append bin:gplc:gprolog
	
	post-build {
		cd ${workpath}/${worksrcdir}

		system "cp configs/gnu.config configs/gnu.pl"
		system "echo ':- built_in.' > compiler/logtalkgp.pl"
		system "cat compiler/logtalk.pl >> compiler/logtalkgp.pl"
		system "gplc -o gplgt configs/gnu.pl compiler/logtalkgp.pl"
		system "rm configs/gnu.pl"
		system "rm compiler/logtalkgp.pl"
	}
}

variant	swi-prolog	{
	depends_lib-append bin:swipl:swi-prolog
	
	post-build {
		cd ${workpath}/${worksrcdir}

		system "echo ':- system_module.' > logtalkswi.pl"
		system "cat compiler/logtalk.pl >> logtalkswi.pl"
		system "echo ':- consult(${prefix}/lib/logtalk/configs/swi.config).' > logtalkswi.rc"
		system "echo ':- consult(${prefix}/lib/logtalk/configs/swihook.pl).' >> logtalkswi.rc"
		system "echo ':- consult(${prefix}/lib/logtalk/bin/logtalkswi.pl).' >> logtalkswi.rc"
		reinplace "s|\(|('|g" logtalkswi.rc
		reinplace "s|\)|')|g" logtalkswi.rc

		system "echo '#/bin/sh' > swilgt"
		system "echo 'swipl -f ${prefix}/lib/logtalk/bin/logtalkswi.rc' >> swilgt"
		system "chmod a+x swilgt"
	}
}

variant	yap	{
	depends_lib-append bin:yap:yap
	
	post-build {
		cd ${workpath}/${worksrcdir}

		system "echo ':- reconsult(${prefix}/lib/logtalk/configs/yap430.config).' > logtalkyap.rc"
		system "echo ':- reconsult(${prefix}/lib/logtalk/compiler/logtalk.pl).' >> logtalkyap.rc"
		reinplace "s|\(|('|g" logtalkyap.rc
		reinplace "s|\)|')|g" logtalkyap.rc

		system "echo '#/bin/sh' > yaplgt"
		system "echo 'yap -l ${prefix}/lib/logtalk/bin/logtalkyap.rc' >> yaplgt"
		system "chmod a+x yaplgt"
	}
}
