--- projects/compiler-rt/make/platform/clang_darwin.mk.orig	2012-09-09 12:50:49.000000000 -0700
+++ projects/compiler-rt/make/platform/clang_darwin.mk	2012-09-09 12:51:36.000000000 -0700
@@ -58,11 +58,11 @@ Configs += profile_osx
 UniversalArchs.profile_osx := $(call CheckArches,i386 x86_64,profile_osx)
 
 # Configurations which define the ASAN support functions.
-Configs += asan_osx
-UniversalArchs.asan_osx := $(call CheckArches,i386 x86_64,asan_osx)
-
-Configs += asan_osx_dynamic
-UniversalArchs.asan_osx_dynamic := $(call CheckArches,i386 x86_64,asan_osx_dynamic)
+#Configs += asan_osx
+#UniversalArchs.asan_osx := $(call CheckArches,i386 x86_64,asan_osx)
+#
+#Configs += asan_osx_dynamic
+#UniversalArchs.asan_osx_dynamic := $(call CheckArches,i386 x86_64,asan_osx_dynamic)
 
 # If RC_SUPPORTED_ARCHS is defined, treat it as a list of the architectures we
 # are intended to support and limit what we try to build to that.
@@ -97,10 +97,10 @@ OSX_DEPLOYMENT_ARGS += -isysroot $(ProjS
 CFLAGS.eprintf		:= $(CFLAGS) $(OSX_DEPLOYMENT_ARGS)
 CFLAGS.10.4		:= $(CFLAGS) $(OSX_DEPLOYMENT_ARGS)
 # FIXME: We can't build ASAN with our stub SDK yet.
-CFLAGS.asan_osx         := $(CFLAGS) -mmacosx-version-min=10.5 -fno-builtin
-CFLAGS.asan_osx_dynamic := \
-	$(CFLAGS) -mmacosx-version-min=10.5 -fno-builtin \
-	-DMAC_INTERPOSE_FUNCTIONS=1
+#CFLAGS.asan_osx         := $(CFLAGS) -mmacosx-version-min=10.5 -fno-builtin
+#CFLAGS.asan_osx_dynamic := \
+#	$(CFLAGS) -mmacosx-version-min=10.5 -fno-builtin \
+#	-DMAC_INTERPOSE_FUNCTIONS=1
 
 CFLAGS.osx.i386		:= $(CFLAGS) $(OSX_DEPLOYMENT_ARGS)
 CFLAGS.osx.x86_64	:= $(CFLAGS) $(OSX_DEPLOYMENT_ARGS)
@@ -110,8 +110,8 @@ CFLAGS.profile_osx.i386   := $(CFLAGS) $
 CFLAGS.profile_osx.x86_64 := $(CFLAGS) $(OSX_DEPLOYMENT_ARGS)
 
 # Configure the asan_osx_dynamic library to be built shared.
-SHARED_LIBRARY.asan_osx_dynamic := 1
-LDFLAGS.asan_osx_dynamic := -framework Foundation -lc++
+#SHARED_LIBRARY.asan_osx_dynamic := 1
+#LDFLAGS.asan_osx_dynamic := -framework Foundation -lc++
 
 FUNCTIONS.eprintf := eprintf
 FUNCTIONS.10.4 := eprintf floatundidf floatundisf floatundixf
@@ -120,11 +120,11 @@ FUNCTIONS.osx	:= mulosi4 mulodi4 muloti4
 
 FUNCTIONS.profile_osx := GCDAProfiling
 
-FUNCTIONS.asan_osx := $(AsanFunctions) $(InterceptionFunctions) \
-                                       $(SanitizerCommonFunctions)
-FUNCTIONS.asan_osx_dynamic := $(AsanFunctions) $(InterceptionFunctions) \
-                              $(SanitizerCommonFunctions) \
-	                      $(AsanDynamicFunctions)
+#FUNCTIONS.asan_osx := $(AsanFunctions) $(InterceptionFunctions) \
+#                                       $(SanitizerCommonFunctions)
+#FUNCTIONS.asan_osx_dynamic := $(AsanFunctions) $(InterceptionFunctions) \
+#                              $(SanitizerCommonFunctions) \
+#	                      $(AsanDynamicFunctions)
 
 CCKEXT_COMMON_FUNCTIONS := \
 	absvdi2 \
--- tools/clang/runtime/compiler-rt/Makefile.orig	2012-09-09 12:41:38.000000000 -0700
+++ tools/clang/runtime/compiler-rt/Makefile	2012-09-09 12:42:04.000000000 -0700
@@ -75,7 +75,7 @@ ifeq ($(OS),Darwin)
 RuntimeDirs += darwin
 RuntimeLibrary.darwin.Configs := \
 	eprintf 10.4 osx cc_kext \
-	asan_osx profile_osx
+	profile_osx
 endif
 
 # On Linux, include a library which has all the runtime functions.

