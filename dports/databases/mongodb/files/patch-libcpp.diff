https://github.com/mongodb/mongo/commit/c70a72b151fcfab26d0db5e8ceeb7c04a96ce449
--- src/mongo/platform/unordered_map.h.orig
+++ src/mongo/platform/unordered_map.h
@@ -15,10 +15,15 @@
 
 #pragma once
 
-// NOTE(acm): Before gcc-4.7, __cplusplus is always defined to be 1,
-// so we can't reliably detect C++11 support by exclusively checking
-// the value of __cplusplus.
-#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
+// We need to drag in a C++ header so we can examine __GXX_EXPERIMENTAL_CXX0X__ or
+// _LIBCPP_VERSION meaningfully. The <new> header is pretty lightweight, mostly unavoidable,
+// and almost certain to bring in the standard library configuration macros.
+#include <new>
+
+// NOTE(acm): Before gcc-4.7, __cplusplus is always defined to be 1, so we can't reliably
+// detect C++11 support by exclusively checking the value of __cplusplus. Additionaly, libc++,
+// whether in C++11 or C++03 mode, doesn't use TR1 and drops things into std instead.
+#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__) || defined(_LIBCPP_VERSION)
 
 #include <unordered_map>
 
--- src/mongo/platform/unordered_set.h.orig
+++ src/mongo/platform/unordered_set.h
@@ -15,10 +15,15 @@
 
 #pragma once
 
-// NOTE(acm): Before gcc-4.7, __cplusplus is always defined to be 1,
-// so we can't reliably detect C++11 support by exclusively checking
-// the value of __cplusplus.
-#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
+// We need to drag in a C++ header so we can examine __GXX_EXPERIMENTAL_CXX0X__ or
+// _LIBCPP_VERSION meaningfully. The <new> header is pretty lightweight, mostly unavoidable,
+// and almost certain to bring in the standard library configuration macros.
+#include <new>
+
+// NOTE(acm): Before gcc-4.7, __cplusplus is always defined to be 1, so we can't reliably
+// detect C++11 support by exclusively checking the value of __cplusplus. Additionaly, libc++,
+// whether in C++11 or C++03 mode, doesn't use TR1 and drops things into std instead.
+#if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__) || defined(_LIBCPP_VERSION)
 
 #include <unordered_set>
 
--- src/third_party/s2/hash.h.orig
+++ src/third_party/s2/hash.h
@@ -7,12 +7,12 @@
 #include "mongo/platform/unordered_set.h"
 #define hash_set mongo::unordered_set
 
-#if defined OS_LINUX || defined OS_MACOSX || defined __sunos__ || defined __freebsd__
-#define HASH_NAMESPACE_START namespace std { namespace tr1 {
-#define HASH_NAMESPACE_END }}
-#elif defined OS_WINDOWS
+#if (defined(OS_MACOSX) && defined(_LIBCPP_VERSION)) || defined(OS_WINDOWS)
 #define HASH_NAMESPACE_START namespace std {
 #define HASH_NAMESPACE_END }
+#elif defined OS_LINUX || defined OS_MACOSX || defined __sunos__ || defined __freebsd__
+#define HASH_NAMESPACE_START namespace std { namespace tr1 {
+#define HASH_NAMESPACE_END }}
 #endif
 
 // Places that hash-related functions are defined:

