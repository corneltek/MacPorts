https://github.com/google/leveldb/issues/412
https://github.com/google/leveldb/pull/413
--- build_detect_platform.orig	2016-08-11 09:33:30.000000000 -0500
+++ build_detect_platform	2016-10-16 16:31:41.000000000 -0500
@@ -8,7 +8,10 @@
 #   CXX                         C++ Compiler path
 #   PLATFORM_LDFLAGS            Linker flags
 #   PLATFORM_LIBS               Libraries flags
-#   PLATFORM_SHARED_EXT         Extension for shared libraries
+#   PLATFORM_SHARED             Set to 'true' if shared libraries shoull be
+#                               built, empty otherwise.
+#   PLATFORM_SHARED_BASE        Base filename for shared libraries (before version)
+#   PLATFORM_SHARED_EXT         Extension for shared libraries (after version)
 #   PLATFORM_SHARED_LDFLAGS     Flags for building shared library
 #                               This flag is embedded just before the name
 #                               of the shared library without intervening spaces
@@ -59,7 +62,9 @@
 PLATFORM_CXXFLAGS=
 PLATFORM_LDFLAGS=
 PLATFORM_LIBS=
-PLATFORM_SHARED_EXT="so"
+PLATFORM_SHARED=true
+PLATFORM_SHARED_BASE="libleveldb.so"
+PLATFORM_SHARED_EXT=
 PLATFORM_SHARED_LDFLAGS="-shared -Wl,-soname -Wl,"
 PLATFORM_SHARED_CFLAGS="-fPIC"
 PLATFORM_SHARED_VERSIONED=true
@@ -81,7 +86,8 @@
     Darwin)
         PLATFORM=OS_MACOSX
         COMMON_FLAGS="$MEMCMP_FLAG -DOS_MACOSX"
-        PLATFORM_SHARED_EXT=dylib
+        PLATFORM_SHARED_BASE=libleveldb
+        PLATFORM_SHARED_EXT=.dylib
         [ -z "$INSTALL_PATH" ] && INSTALL_PATH=`pwd`
         PLATFORM_SHARED_LDFLAGS="-dynamiclib -install_name $INSTALL_PATH/"
         PORT_FILE=port/port_posix.cc
@@ -142,7 +148,7 @@
         COMMON_FLAGS="$MEMCMP_FLAG -DOS_MACOSX"
         [ -z "$INSTALL_PATH" ] && INSTALL_PATH=`pwd`
         PORT_FILE=port/port_posix.cc
-        PLATFORM_SHARED_EXT=
+        PLATFORM_SHARED=false
         PLATFORM_SHARED_LDFLAGS=
         PLATFORM_SHARED_CFLAGS=
         PLATFORM_SHARED_VERSIONED=
@@ -222,6 +228,8 @@
 echo "PLATFORM_LIBS=$PLATFORM_LIBS" >> $OUTPUT
 echo "PLATFORM_CCFLAGS=$PLATFORM_CCFLAGS" >> $OUTPUT
 echo "PLATFORM_CXXFLAGS=$PLATFORM_CXXFLAGS" >> $OUTPUT
+echo "PLATFORM_SHARED=$PLATFORM_SHARED" >> $OUTPUT
+echo "PLATFORM_SHARED_BASE=$PLATFORM_SHARED_BASE" >> $OUTPUT
 echo "PLATFORM_SHARED_CFLAGS=$PLATFORM_SHARED_CFLAGS" >> $OUTPUT
 echo "PLATFORM_SHARED_EXT=$PLATFORM_SHARED_EXT" >> $OUTPUT
 echo "PLATFORM_SHARED_LDFLAGS=$PLATFORM_SHARED_LDFLAGS" >> $OUTPUT
--- Makefile.orig	2016-08-11 09:33:30.000000000 -0500
+++ Makefile	2016-10-16 16:41:58.000000000 -0500
@@ -107,13 +107,13 @@
 default: all
 
 # Should we build shared libraries?
-ifneq ($(PLATFORM_SHARED_EXT),)
+ifeq ($(PLATFORM_SHARED),true)
 
 # Many leveldb test apps use non-exported API's. Only build a subset for testing.
 SHARED_ALLOBJS := $(SHARED_LIBOBJECTS) $(SHARED_MEMENVOBJECTS) $(TESTHARNESS)
 
+SHARED_LIB1 = $(PLATFORM_SHARED_BASE)$(PLATFORM_SHARED_EXT)
 ifneq ($(PLATFORM_SHARED_VERSIONED),true)
-SHARED_LIB1 = libleveldb.$(PLATFORM_SHARED_EXT)
 SHARED_LIB2 = $(SHARED_LIB1)
 SHARED_LIB3 = $(SHARED_LIB1)
 SHARED_LIBS = $(SHARED_LIB1)
@@ -122,9 +122,8 @@
 # Update db.h if you change these.
 SHARED_VERSION_MAJOR = 1
 SHARED_VERSION_MINOR = 19
-SHARED_LIB1 = libleveldb.$(PLATFORM_SHARED_EXT)
-SHARED_LIB2 = $(SHARED_LIB1).$(SHARED_VERSION_MAJOR)
-SHARED_LIB3 = $(SHARED_LIB1).$(SHARED_VERSION_MAJOR).$(SHARED_VERSION_MINOR)
+SHARED_LIB2 = $(PLATFORM_SHARED_BASE).$(SHARED_VERSION_MAJOR)$(PLATFORM_SHARED_EXT)
+SHARED_LIB3 = $(PLATFORM_SHARED_BASE).$(SHARED_VERSION_MAJOR).$(SHARED_VERSION_MINOR)$(PLATFORM_SHARED_EXT)
 SHARED_LIBS = $(SHARED_OUTDIR)/$(SHARED_LIB1) $(SHARED_OUTDIR)/$(SHARED_LIB2) $(SHARED_OUTDIR)/$(SHARED_LIB3)
 $(SHARED_OUTDIR)/$(SHARED_LIB1): $(SHARED_OUTDIR)/$(SHARED_LIB3)
 	ln -fs $(SHARED_LIB3) $(SHARED_OUTDIR)/$(SHARED_LIB1)
@@ -136,7 +136,7 @@
 $(SHARED_OUTDIR)/$(SHARED_LIB3): $(SHARED_LIBOBJECTS)
 	$(CXX) $(LDFLAGS) $(PLATFORM_SHARED_LDFLAGS)$(SHARED_LIB2) $(SHARED_LIBOBJECTS) -o $(SHARED_OUTDIR)/$(SHARED_LIB3) $(LIBS)
 
-endif  # PLATFORM_SHARED_EXT
+endif  # PLATFORM_SHARED
 
 all: $(SHARED_LIBS) $(SHARED_PROGRAMS) $(STATIC_OUTDIR)/libleveldb.a $(STATIC_OUTDIR)/libmemenv.a $(STATIC_PROGRAMS)
 
