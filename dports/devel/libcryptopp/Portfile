# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem 1.0

name                libcryptopp
version             5.6.4
revision            1
categories          devel security
platforms           darwin
maintainers         raphael openmaintainer
description         C++ class library of cryptographic schemes
long_description    Crypto++ Library is a free C++ class library of \
                    cryptographic schemes.

homepage            http://www.cryptopp.com/
license             Boost-1

master_sites        sourceforge:cryptopp \
                    ${homepage}
distname            cryptopp[strsed ${version} {g/\.//}]

checksums           rmd160  09c9ef991f3931e22ab5633c33d890fb0ba9429e \
                    sha256  be430377b05c15971d5ccb6e44b4d95470f561024ed6d701fe3da3a188c84ad7

use_zip             yes
extract.mkdir       yes

patchfiles          patch-config.h.diff \
                    patch-GNUmakefile.diff
post-patch {
    # render the asserts inert; fixes CVE-2016-7420 (see <https://groups.google.com/forum/#!topic/cryptopp-users/NhWvEAMKcsU>)
    reinplace "s|assert\[\[:space:\]\]*(|CRYPTOPP_UNUSED(|g" {*}[glob ${worksrcpath}/*.h ${worksrcpath}/*.cpp]
}

use_configure       no

variant universal {}

proc _get_cryptopp_init_priority_flag {compiler} {
    if {[string match "macports-gcc*" $compiler]} {
        return " -DMACPORTS_GCC_COMPILER"
    }
    return ""
}

build.type          gnu
build.target        dynamic static cryptest.exe
build.env-append    CXXFLAGS="[get_canonical_archflags cxx] -DNDEBUG [_get_cryptopp_init_priority_flag ${configure.compiler}]"
build.args-append   CXX=${configure.cxx} PREFIX=${prefix}

test.run            yes
test.cmd            ./cryptest.exe
test.target         v

destroot {
    xinstall -m 755 -d ${destroot}${prefix}/include/cryptopp \
        ${destroot}${prefix}/share/doc/${name}
    xinstall -m 644 ${worksrcpath}/libcryptopp.a \
        ${worksrcpath}/libcryptopp.dylib \
        ${destroot}${prefix}/lib
    xinstall -m 644 {*}[glob ${worksrcpath}/*.h] \
        ${destroot}${prefix}/include/cryptopp/
    xinstall -m 644 -W ${worksrcpath} Readme.txt License.txt \
        ${destroot}${prefix}/share/doc/${name}/
}

livecheck.type      regex
livecheck.regex     "Crypto\\+\\+ (\\d+(?:\\.\\d+)*)"
