Index: src/plugins/debuggergdb/debuggergdb.cpp
===================================================================
--- src/plugins/debuggergdb/debuggergdb.cpp	(revision 6335)
+++ src/plugins/debuggergdb/debuggergdb.cpp	(revision 6336)
@@ -1530,7 +1530,7 @@
     m_State.GetDriver()->Prepare(target, target && target->GetTargetType() == ttConsoleOnly);
     m_State.ApplyBreakpoints();
 
-   #ifdef __WXGTK__
+   #ifndef __WXMSW__
     // create xterm and issue tty "/dev/pts/#" to GDB where
     // # is the tty for the newly created xterm
     m_bIsConsole = (target && target->GetTargetType() == ttConsoleOnly);
@@ -1543,7 +1543,7 @@
             DebugLog(wxString::Format( _("Queued:[%s]"), gdbTtyCmd.c_str()) );
         }
     }//if
-   #endif//def __WXGTK__
+   #endif//ndef __WXMSW__
 
     // Don't issue 'run' if attaching to a process (Bug #1391904)
     if (m_PidToAttach == 0)
@@ -2903,15 +2903,20 @@
     // redirecting program stdin/stdout/stderr to the xterm console.
 
     wxString cmd;
+    wxString cmd2;
     wxString title = wxT("Program Console");
     m_nConsolePid = 0;
     // for non-win platforms, use m_ConsoleTerm to run the console app
     wxString term = Manager::Get()->GetConfigManager(_T("app"))->Read(_T("/console_terminal"), DEFAULT_CONSOLE_TERM);
     term.Replace(_T("$TITLE"), _T("'") + title + _T("'"));
     cmd << term << _T(" ");
-    cmd << wxT("sleep ");
-    cmd << wxString::Format(wxT("%d"),80000 + ::wxGetProcessId());
+    cmd2 << wxT("sleep ");
+    cmd2 << wxString::Format(wxT("%d"),80000 + ::wxGetProcessId());
 
+    if (!cmd.Replace(_T("$SCRIPT"), cmd2))
+        // if they didn't specify $SCRIPT, append:
+        cmd << cmd2;
+
     Manager::Get()->GetMacrosManager()->ReplaceEnvVars(cmd);
     DebugLog(wxString::Format( _("Executing: %s"), cmd.c_str()) );
     //start xterm -e sleep {some unique # of seconds}
@@ -2988,7 +2993,7 @@
         do
         {
             // check for correct "sleep" line
-            if (psCmd.Contains(wxT("-T")))
+            if (psCmd.Contains(wxT("-T")) || psCmd.Contains(wxT("osascript")))
                 break; //error;wrong sleep line.
             // found "sleep 93343" string, extract tty field
             ConsTtyStr = wxT("/dev/") + psCmd.BeforeFirst(' ');
------------------------------------------------------------------------
