Upstream patch (fixed in r8904)
--- src/plugins/contrib/MouseSap/Makefile.am.orig
+++ src/plugins/contrib/MouseSap/Makefile.am
@@ -9,7 +9,7 @@
 
 libMouseSap_la_LDFLAGS = -module -version-info 0:1:0 -shared -no-undefined -avoid-version
 
-libMouseSap_la_LIBADD = $(PLUGIN_WX_LIBS) ../../../sdk/libcodeblocks.la
+libMouseSap_la_LIBADD = $(PLUGIN_WX_LIBS) $(WX_GTK2_LIBS) ../../../sdk/libcodeblocks.la
 
 libMouseSap_la_SOURCES = MouseSap.cpp
 
--- src/plugins/contrib/MouseSap/Makefile.in.orig
+++ src/plugins/contrib/MouseSap/Makefile.in
@@ -348,7 +348,7 @@
 pluginlibdir = $(pkglibdir)/plugins
 pluginlib_LTLIBRARIES = libMouseSap.la
 libMouseSap_la_LDFLAGS = -module -version-info 0:1:0 -shared -no-undefined -avoid-version
-libMouseSap_la_LIBADD = $(PLUGIN_WX_LIBS) ../../../sdk/libcodeblocks.la
+libMouseSap_la_LIBADD = $(PLUGIN_WX_LIBS) $(WX_GTK2_LIBS) ../../../sdk/libcodeblocks.la
 libMouseSap_la_SOURCES = MouseSap.cpp
 noinst_HEADERS = MouseSap.h
 EXTRA_DIST = $(srcdir)/*.cbp \

Upstream patch (fixed in r9377)
--- src/include/prep.h.orig
+++ src/include/prep.h
@@ -406,14 +406,27 @@ template<typename whatever> inline ID GetID()
 inline ID GetID() { return GetID<void>(); }
 inline ID ConstructID(unsigned int i) { return ID(i); }
 
+// Just included to possibly set _LIBCPP_VERSION
+#include <ciso646>
+
+#if __cplusplus >= 201103L || defined(_LIBCPP_VERSION)
+#include <memory>
+#else
 #include <tr1/memory>
+#endif
 
 // Add std::shared_ptr in a namespace, so different implementations can be used with different compilers
 namespace cb
 {
+#if __cplusplus >= 201103L || defined(_LIBCPP_VERSION)
+    using std::shared_ptr;
+    using std::static_pointer_cast;
+    using std::weak_ptr;
+#else
     using std::tr1::shared_ptr;
     using std::tr1::static_pointer_cast;
     using std::tr1::weak_ptr;
+#endif
 }
 
 #if defined(__APPLE__) && defined(__MACH__)

Upstream patch (fixed in r9378)
--- src/plugins/contrib/lib_finder/librariesdlg.cpp.orig
+++ src/plugins/contrib/lib_finder/librariesdlg.cpp
@@ -14,6 +14,7 @@
 #include <wx/string.h>
 //*)
 
+#include <algorithm>
 #include <sdk.h>
 #include <manager.h>
 #include <configmanager.h>
@@ -90,7 +91,6 @@ END_EVENT_TABLE()
 
 LibrariesDlg::LibrariesDlg(wxWindow* parent, TypedResults& knownLibraries)
     : m_KnownLibraries(knownLibraries)
-    , m_WorkingCopy(knownLibraries)
     , m_SelectedConfig(0)
     , m_WhileUpdating(false)
 {
@@ -124,6 +124,8 @@ LibrariesDlg::LibrariesDlg(wxWindow* parent, TypedResults& knownLibraries)
     wxBoxSizer* BoxSizer3;
     wxStdDialogButtonSizer* StdDialogButtonSizer1;
 
+    std::copy(m_KnownLibraries, m_KnownLibraries+sizeof(m_WorkingCopy)/sizeof(m_WorkingCopy[0]), m_WorkingCopy);
+
     Create(parent, wxID_ANY, _("Registered libraries"), wxDefaultPosition, wxDefaultSize, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER, _T("wxID_ANY"));
     BoxSizer1 = new wxBoxSizer(wxVERTICAL);
     BoxSizer16 = new wxBoxSizer(wxHORIZONTAL);

Upstream patch (fixed in r9376)
--- src/plugins/contrib/profiler/cbprofiler.cpp.orig
+++ src/plugins/contrib/profiler/cbprofiler.cpp
@@ -101,7 +101,7 @@ int CBProfiler::Execute()
     if (project->GetBuildTargetsCount() > 1)
     {
         // more than one executable target? ask...
-        wxString choices[project->GetBuildTargetsCount()];
+        std::vector<wxString> choices(project->GetBuildTargetsCount());
         wxString active_target = project->GetActiveBuildTarget();
         int selected = 0;
         for (int i=0; i<project->GetBuildTargetsCount(); ++i)
@@ -112,7 +112,8 @@
         }
         wxSingleChoiceDialog dialog(Manager::Get()->GetAppWindow(),
                                     _("Select the target you want to profile"),
-                                    _("Select Target"),project->GetBuildTargetsCount(),choices);
+                                    _("Select Target"),
+                                    project->GetBuildTargetsCount(), &choices[0]);
         dialog.SetSelection(selected);
         if (dialog.ShowModal() != wxID_OK)
             return -1;

Upstream patch (fixed in r8667)
--- src/sdk/wxscintilla/src/PlatWX.cpp.orig
+++ src/sdk/wxscintilla/src/PlatWX.cpp
@@ -299,12 +299,14 @@ void SurfaceImpl::Polygon(Point *pts, int npts, ColourDesired fore, ColourDesire
     PenColour(fore);
     BrushColour(back);
 /* C::B begin */
-    // Since Point now has float as x and y, it seems no longer to be interchangeable with wxPoint,
-    // and the polygon is not drawn, so we convert it explicitely
-    wxPoint points[npts];
-    for (int i = 0; i < npts; ++i)
-        points[i] = wxPoint(pts[i].x, pts[i].y);
-    hDC->DrawPolygon(npts, points);
+    wxPoint *p = new wxPoint[npts];
+
+    for (int i=0; i<npts; i++) {
+        p[i].x = pts[i].x;
+        p[i].y = pts[i].y;
+    }
+    hDC->DrawPolygon(npts, p);
+    delete [] p;
 /* C::B end */
 }

Upstream patches (fixed in r9375 & r8639)
--- src/sdk/configmanager.cpp.orig
+++ src/sdk/configmanager.cpp
@@ -36,7 +36,11 @@
 #endif
 
 #ifdef __WXMAC__
+#if wxCHECK_VERSION(2,9,0)
+#include "wx/osx/core/cfstring.h"
+#else
 #include "wx/mac/corefoundation/cfstring.h"
+#endif
 #include "wx/intl.h"
 
 #include <CoreFoundation/CFBundle.h>
@@ -121,7 +125,11 @@
             CFRelease(resourcesURL);
             CFStringRef cfStrPath = CFURLCopyFileSystemPath(absoluteURL,kCFURLPOSIXPathStyle);
             CFRelease(absoluteURL);
-            wxString str = wxMacCFStringHolder(cfStrPath).AsString(wxLocale::GetSystemEncoding());
+            #if wxCHECK_VERSION(2,9,0)
+              wxString str = wxCFStringRef(cfStrPath).AsString(wxLocale::GetSystemEncoding());
+            #else
+              wxString str = wxMacCFStringHolder(cfStrPath).AsString(wxLocale::GetSystemEncoding());
+            #endif
             if (!str.Contains(wxString(_T("/Resources"))))
                return ::DetermineExecutablePath() + _T("/.."); // not a bundle, use relative path
             return str;
--- src/sdk/xtra_res.cpp.orig
+++ src/sdk/xtra_res.cpp
@@ -15,6 +15,7 @@
     #include <wx/wx.h>
 #endif
 
+#include <wx/xml/xml.h>
 
 /////////////////////////////////////////////////////////////////////////////
 // Name:        xh_toolb.cpp
--- src/src/app.cpp.orig
+++ src/src/app.cpp
@@ -271,7 +271,11 @@
 END_EVENT_TABLE()
 
 #ifdef __WXMAC__
+#if wxCHECK_VERSION(2,9,0)
+#include "wx/osx/core/cfstring.h"
+#else
 #include "wx/mac/corefoundation/cfstring.h"
+#endif
 #include "wx/intl.h"
 
 #include <CoreFoundation/CFBundle.h>
@@ -286,7 +290,11 @@
     CFRelease(resourcesURL);
     CFStringRef cfStrPath = CFURLCopyFileSystemPath(absoluteURL,kCFURLPOSIXPathStyle);
     CFRelease(absoluteURL);
-    return wxMacCFStringHolder(cfStrPath).AsString(wxLocale::GetSystemEncoding());
+    #if wxCHECK_VERSION(2,9,0)
+      return wxCFStringRef(cfStrPath).AsString(wxLocale::GetSystemEncoding());
+    #else
+      return wxMacCFStringHolder(cfStrPath).AsString(wxLocale::GetSystemEncoding());
+    #endif
 }
 #endif

Upstream patches (fixed in r9375 & 9239)
--- src/plugins/contrib/codesnippets/codesnippetsapp.cpp.orig
+++ src/plugins/contrib/codesnippets/codesnippetsapp.cpp
@@ -95,7 +95,11 @@
 END_EVENT_TABLE()
 
 #ifdef __WXMAC__
-    #include "wx/mac/corefoundation/cfstring.h"
+    #if wxCHECK_VERSION(2,9,0)
+        #include "wx/osx/core/cfstring.h"
+    #else
+        #include "wx/mac/corefoundation/cfstring.h"
+    #endif
     #include "wx/intl.h"
 
     #include <CoreFoundation/CFBundle.h>
@@ -112,7 +116,11 @@
         CFRelease(resourcesURL);
         CFStringRef cfStrPath = CFURLCopyFileSystemPath(absoluteURL,kCFURLPOSIXPathStyle);
         CFRelease(absoluteURL);
-        return wxMacCFStringHolder(cfStrPath).AsString(wxLocale::GetSystemEncoding());
+        #if wxCHECK_VERSION(2,9,0)
+          return wxCFStringRef(cfStrPath).AsString(wxLocale::GetSystemEncoding());
+        #else
+          return wxMacCFStringHolder(cfStrPath).AsString(wxLocale::GetSystemEncoding());
+        #endif
     }
 #endif
 
@@ -268,8 +276,6 @@
     m_KeepAliveFileName = wxEmptyString;
     m_pFilesHistory = 0;
 
-    wxStandardPaths stdPaths;
-
     // -------------------------------
     // initialize version and logging
     // -------------------------------
@@ -325,7 +331,7 @@
     // Find Config File
     // -----------------------------------------
     // Create filename like {%HOME%}\codesnippets.ini
-    m_ConfigFolder = Normalize(stdPaths.GetUserDataDir());
+    m_ConfigFolder = Normalize(wxStandardPaths::Get().GetUserDataDir());
     wxString m_ExecuteFolder = Normalize(FindAppPath(wxTheApp->argv[0], ::wxGetCwd(), wxEmptyString));
 
     #if defined(LOGGING)
@@ -1387,8 +1393,6 @@
 void CodeSnippetsAppFrame::ImportCBResources()
 // ----------------------------------------------------------------------------
 {
-    wxStandardPaths stdPaths;
-
     // Location of app config folder
     wxString appConfigFolder =  Normalize(m_ConfigFolder) ;
 
@@ -1399,7 +1403,7 @@
     wxString cbExeFolder = Normalize(GetCBExeFolder());
 
     // location of CodeBlocks config folder
-    wxString cbConfigFolder = Normalize(stdPaths.GetUserDataDir());
+    wxString cbConfigFolder = Normalize(wxStandardPaths::Get().GetUserDataDir());
     wxString appParent = GetConfig()->GetAppParent();
     if ( appParent.empty()) appParent =_T("codeblocks");
     wxString prefixPath;
--- src/plugins/contrib/codesnippets/snippetsconfig.cpp.orig
+++ src/plugins/contrib/codesnippets/snippetsconfig.cpp
@@ -128,8 +128,6 @@
 {
         // file will be saved in $HOME/codesnippets.ini
 
-    wxStandardPaths stdPaths;
-
     #ifdef LOGGING
      wxString fn(__FUNCTION__, wxConvUTF8);
      LOGIT( _T("--- [%s] ---"),fn.c_str() );

Upstream patch (fixed in r8891)
--- src/plugins/contrib/source_exporter/wxPdfDocument/include/wx/pdfdc29.h	(revision 8890)
+++ src/plugins/contrib/source_exporter/wxPdfDocument/include/wx/pdfdc29.h	(revision 8891)
@@ -162,9 +162,19 @@
   virtual void DoGetSize(int* width, int* height) const;
   virtual void DoGetSizeMM(int* width, int* height) const;
 
-  virtual void DoDrawLines(int n, wxPoint points[],
+  virtual void DoDrawLines(int n,
+#if wxCHECK_VERSION(2, 9, 5)
+                           const wxPoint points[],
+#else
+                           wxPoint points[],
+#endif
                            wxCoord xoffset, wxCoord yoffset);
-  virtual void DoDrawPolygon(int n, wxPoint points[],
+  virtual void DoDrawPolygon(int n,
+#if wxCHECK_VERSION(2, 9, 5)
+                           const wxPoint points[],
+#else
+                           wxPoint points[],
+#endif
                              wxCoord xoffset, wxCoord yoffset,
                              wxPolygonFillMode fillStyle = wxODDEVEN_RULE);
   virtual void DoDrawPolyPolygon(int n, int count[], wxPoint points[],
--- src/plugins/contrib/source_exporter/wxPdfDocument/include/wx/pdfprint.h	(revision 8890)
+++ src/plugins/contrib/source_exporter/wxPdfDocument/include/wx/pdfprint.h	(revision 8891)
@@ -867,7 +867,12 @@
     return rval;
   }
 
-  virtual void DoDrawLines(int n, wxPoint points[],
+  virtual void DoDrawLines(int n,
+#if wxCHECK_VERSION(2, 9, 5)
+                           const wxPoint points[],
+#else
+                           wxPoint points[],
+#endif
                            wxCoord xoffset, wxCoord yoffset)
   {
     m_dc.DoDrawLines(n, points,xoffset, yoffset);
@@ -874,7 +879,12 @@
     UpdateBoundingBox();
   }
 
-  virtual void DoDrawPolygon(int n, wxPoint points[],
+  virtual void DoDrawPolygon(int n,
+#if wxCHECK_VERSION(2, 9, 5)
+                             const wxPoint points[],
+#else
+                             wxPoint points[],
+#endif
                              wxCoord xoffset, wxCoord yoffset,
                              wxPolygonFillMode fillStyle = wxODDEVEN_RULE)
   {
@@ -1209,7 +1219,12 @@
     m_dc.DoGetSizeMM(w,h);
   }
 
-  virtual void DoDrawLines(int n, wxPoint points[],
+  virtual void DoDrawLines(int n,
+#if wxCHECK_VERSION(2, 9, 5)
+                           const wxPoint points[],
+#else
+                           wxPoint points[],
+#endif
                            wxCoord xoffset, wxCoord yoffset)
   {
     m_dc.DoDrawLines(n, points,xoffset, yoffset);
@@ -1216,7 +1231,12 @@
     UpdateBoundingBox();
   }
 
-  virtual void DoDrawPolygon(int n, wxPoint points[],
+  virtual void DoDrawPolygon(int n,
+#if wxCHECK_VERSION(2, 9, 5)
+                             const wxPoint points[],
+#else
+                             wxPoint points[],
+#endif
                              wxCoord xoffset, wxCoord yoffset,
                              int fillStyle = wxODDEVEN_RULE)
   {
--- src/plugins/contrib/source_exporter/wxPdfDocument/src/pdfdc29.inc	(revision 8890)
+++ src/plugins/contrib/source_exporter/wxPdfDocument/src/pdfdc29.inc	(revision 8891)
@@ -1032,7 +1032,13 @@
 }
 
 void
-wxPdfDCImpl::DoDrawLines(int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset)
+wxPdfDCImpl::DoDrawLines(int n,
+#if wxCHECK_VERSION(2, 9, 5)
+                         const wxPoint points[],
+#else
+                         wxPoint points[],
+#endif
+                         wxCoord xoffset, wxCoord yoffset)
 {
   wxCHECK_RET(m_pdfDocument, wxT("Invalid PDF DC"));
   SetupPen();
@@ -1039,7 +1045,11 @@
   int i;
   for (i = 0; i < n; ++i)
   {
+#if wxCHECK_VERSION(2, 9, 5)
+    wxPoint point = points[i];
+#else
     wxPoint& point = points[i];
+#endif
     double xx = ScaleLogicalToPdfX(xoffset + point.x);
     double yy = ScaleLogicalToPdfY(yoffset + point.y);
     CalcBoundingBox(point.x+xoffset, point.y+yoffset);
@@ -1056,7 +1066,12 @@
 }
 
 void
-wxPdfDCImpl::DoDrawPolygon(int n, wxPoint points[],
+wxPdfDCImpl::DoDrawPolygon(int n,
+#if wxCHECK_VERSION(2, 9, 5)
+                           const wxPoint points[],
+#else
+                           wxPoint points[],
+#endif
                            wxCoord xoffset, wxCoord yoffset,
                            wxPolygonFillMode fillStyle /* = wxODDEVEN_RULE*/)
 {
@@ -1068,7 +1083,11 @@
   int i;
   for (i = 0; i < n; ++i)
   {
+#if wxCHECK_VERSION(2, 9, 5)
+    wxPoint point = points[i];
+#else
     wxPoint& point = points[i];
+#endif
     xp.Add(ScaleLogicalToPdfX(xoffset + point.x));
     yp.Add(ScaleLogicalToPdfY(yoffset + point.y));
     CalcBoundingBox(point.x + xoffset, point.y + yoffset);

Upstream patches (fixed in r8775, r9375, r9380)
--- src/plugins/contrib/wxContribItems/KWIC/include/wx/KWIC/AngularRegulator.h.orig
+++ src/plugins/contrib/wxContribItems/KWIC/include/wx/KWIC/AngularRegulator.h
@@ -11,6 +11,7 @@
 //
 /////////////////////////////////////////////////////////////////////////////
 
+#include <wx/control.h>
 
 const int kwxEVT_ANGREG_FIRST = wxEVT_FIRST + 5402;
 
--- src/plugins/contrib/wxContribItems/KWIC/include/wx/KWIC/LinearRegulator.h.orig
+++ src/plugins/contrib/wxContribItems/KWIC/include/wx/KWIC/LinearRegulator.h
@@ -11,6 +11,7 @@
 //
 /////////////////////////////////////////////////////////////////////////////
 
+#include <wx/control.h>
 
 const int kwxEVT_LINEARREG_FIRST = wxEVT_FIRST + 5401;
 
--- src/plugins/contrib/wxContribItems/wxTreeList/src/treelistctrl.cpp.orig
+++ src/plugins/contrib/wxContribItems/wxTreeList/src/treelistctrl.cpp
@@ -49,8 +49,12 @@
 #include <wx/hashmap.h>
 
 #ifdef __WXMAC__
+#if wxCHECK_VERSION(2,9,0)
+#include "wx/osx/private.h"
+#else
 #include "wx/mac/private.h"
 #endif
+#endif
 
 #include "wx/treelistctrl.h"
 
@@ -2017,14 +2021,8 @@
                                    const wxString& name) {
 
 #ifdef __WXMAC__
-    if (style & wxTR_HAS_BUTTONS) style |= wxTR_MAC_BUTTONS;
-    if (style & wxTR_HAS_BUTTONS) style &= ~wxTR_HAS_BUTTONS;
     style &= ~wxTR_LINES_AT_ROOT;
     style |= wxTR_NO_LINES;
-
-    int major,minor;
-    wxGetOsVersion( &major, &minor );
-    if (major < 10) style |= wxTR_ROW_LINES;
 #endif
 
     wxScrolledWindow::Create (parent, id, pos, size, style|wxHSCROLL|wxVSCROLL, name);

