# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           haskell 1.0

haskell.setup       HTTP 4000.1.1
maintainers         gmail.com:kitchen.andy openmaintainer
description         client-side web programming in Haskell
long_description    \
    The HTTP package supports client-side web programming in Haskell. \
    It lets you set up HTTP connections, transmitting requests and processing \
    the responses coming back, all from within the comforts of Haskell. It's \
    dependent on the network package to operate, but other than that, the \
    implementation is all written in Haskell. \
    \
    A basic API for issuing single HTTP requests + receiving responses is \
    provided. On top of that, a session-level abstraction is also on offer \
    (the BrowserAction monad)\; it taking care of handling the management of \
    persistent connections, proxies, state (cookies) and authentication \
    credentials required to handle multi-step interactions with a web server. \
    \
    The representation of the bytes flowing across is extensible via the use \
    of a type class, letting you pick the representation of requests and \
    responses that best fits your use. Some pre-packaged, common instances \
    are provided for you (ByteString, String.)

platforms           darwin
checksums           md5     ddf23d46c4d6dc0048c454e3d01caa57 \
                    sha1    cdb8ae29b8524a912545059e4ec4a2b25ada88c5 \
                    rmd160  c90418ef556cf833cffcb327df9b57e051ee8b25

# ghc is not universal
universal_variant   no
