# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem              1.0
PortGroup               haskellplatform 1.0

haskellplatform.setup   async 2.0.1.3
checksums               rmd160  249b3d7e38cd770249868bcff22bf6add1f12fbf \
                        sha256  70d681084aca826c84d722320fc5d67ac6294802afbb13f8b5e8eac2bbc972e5

license                 BSD
maintainers             cal openmaintainer
platforms               darwin

depends_lib-append      port:hs-platform-stm

description             \
   This package provides a higher-level interface over threads, in which an \
   Async a is a concurrent thread that will eventually deliver a value of type \
   a. The package provides ways to create Async computations, wait for their \
   results, and cancel them.
long_description        ${description} \
    Using Async is safer than using threads in two ways:\n\
    - When waiting for a thread to return a result, if the thread dies with an \
    exception then the caller must either re-throw the exception (wait) or \
    handle it (waitCatch)\; the exception cannot be ignored.\n\
    - The API makes it possible to build a tree of threads that are \
    automatically killed when their parent dies (see withAsync).
