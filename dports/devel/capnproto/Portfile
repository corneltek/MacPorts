# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem              1.0
PortGroup               compiler_blacklist_versions 1.0

name                    capnproto
version                 0.3.0
checksums               rmd160  cd07b28a445bfd6d90ed67ceb06ea576f03d2288 \
                        sha256  6d046f07e6a702d8aca63d3b4614ce255513e8b266ee4dda2960c75217dcc0db

maintainers             cal openmaintainer
platforms               darwin
categories              devel

homepage                http://capnproto.org/
description             \
    Capâ€™n Proto is an insanely fast data interchange format and \
    capability-based RPC system. Think JSON, except binary. Or think Protocol \
    Buffers, except faster.
long_description        ${description}
license                 BSD

master_sites            ${homepage}
distname                ${name}-c++-${version}

use_autoreconf          yes

# clang 3.2 - clang-3.4 and all clangs from Xcode < 5 crash while compiling this.
compiler.blacklist-append \
                        {clang < 500.2.75} \
                        macports-clang-3.2 \
                        macports-clang-3.3 \
                        macports-clang-3.4 \
                        *gcc*

# The bundled libtool doesn't pass -stdlib to the linker, needs:
# http://git.savannah.gnu.org/gitweb/?p=libtool.git;a=commit;h=c0c49f289f22ae670066657c60905986da3b555f
pre-configure {
    if {${configure.compiler} ne "clang" || [compiler_blacklist_versions._version_matches clang < 500.2.75]} {
        ui_error "capnproto will crash all compilers but clang from Xcode 5; please upgrade your Xcode installation."
        error "no suitable compiler"
    }
    system -W ${worksrcpath} "autoreconf -fvi"
}

if {[info exists configure.cxx_stdlib]} {
    configure.cxx_stdlib    libc++
}

configure.ldflags-append    -stdlib=libc++

livecheck.type              regex
livecheck.url               http://kentonv.github.io/capnproto/install.html
livecheck.regex             "[quotemeta ${name}]-c\\+\\+-(\\d+(\\.\\d+)*)[quotemeta ${extract.suffix}]"
