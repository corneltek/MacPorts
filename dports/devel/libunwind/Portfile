# $Id$

PortSystem              1.0
PortGroup               compiler_blacklist_versions 1.0

name                    libunwind
version                 3.5.0
categories              lang
platforms               darwin
license                 MIT NCSA
maintainers             jeremyhu openmaintainer
description             A version of Apple's libunwind library that is included in libSystem
long_description        Apple's libunwind library (part of libSystem) was \
                        released as OSS and is now stewarded by the LLVM \
                        Project.  This version installs outside of the normal \
                        filesystem hierarchy in order to not accidentally \
                        conflict with the host implementation that other ports \
                        may expect.

homepage                http://blog.llvm.org/2013/10/new-libunwind-implementation-in-libcabi.html

master_sites            http://www.llvm.org/releases/${version}/
dist_subdir             llvm
 
use_xz                  yes
distname                libcxxabi-${version}.src

checksums               rmd160  e4db7c7b07580304c5ae9cf03895d7b6470ecd0b \
                        sha256  53c6be6a2dd2371f6d92c968cb8a59fbe13c6153583025433df067f706bfacd9

use_configure           no

# 3.5 and 3.6 are blacklisted to prevent dependency cycles
compiler.blacklist *gcc* {clang < 100} macports-clang-3.5 macports-clang-3.6

supported_archs i386 x86_64

post-extract {
    file copy ${filespath}/Makefile ${build.dir}/Makefile
}

patchfiles \
    libunwind-available.patch

set cxx_stdlibflags {}
if {[string match *clang* ${configure.cxx}]} {
    set cxx_stdlibflags -stdlib=${configure.cxx_stdlib}
}

build.dir ${worksrcpath}/src/Unwind
build.args \
    PREFIX="${prefix}/lib/${name}" \
    CC="${configure.cc}" \
    CXX="${configure.cxx}" \
    CPPFLAGS="${configure.cppflags} -DNDEBUG" \
    CFLAGS="${configure.cflags} [get_canonical_archflags cc]" \
    CXXFLAGS="${configure.cxxflags} ${cxx_stdlibflags} [get_canonical_archflags cxx]" \
    LDFLAGS="${configure.ldflags} ${cxx_stdlibflags} [get_canonical_archflags ld]"

destroot.dir  ${build.dir}
destroot.args \
    PREFIX="${prefix}/lib/${name}"

livecheck.type          none
