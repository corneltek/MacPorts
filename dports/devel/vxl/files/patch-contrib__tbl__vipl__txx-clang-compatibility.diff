--- contrib/tbl/vipl/vipl_add_random_noise.txx.orig	2012-06-14 23:26:05.000000000 +0200
+++ contrib/tbl/vipl/vipl_add_random_noise.txx	2012-06-14 23:35:42.000000000 +0200
@@ -7,10 +7,10 @@
 template <class ImgIn,class ImgOut,class DataIn,class DataOut,class PixelItr>
 bool vipl_add_random_noise <ImgIn,ImgOut,DataIn,DataOut,PixelItr> :: section_applyop()
 {
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (register int j = starty; j < stopy; ++j)
     for (register int i = startx; i < stopx; ++i)
     {
--- contrib/tbl/vipl/vipl_convert.txx.orig	2012-06-14 23:34:00.000000000 +0200
+++ contrib/tbl/vipl/vipl_convert.txx	2012-06-14 23:36:22.000000000 +0200
@@ -14,10 +14,10 @@
   const ImgIn &in = this->in_data(0);
   ImgOut &out = this->out_data(0);
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i)
       fsetpixel(out, i, j, (DataOut)fgetpixel(in,i,j,DataIn(0)));
--- contrib/tbl/vipl/vipl_dilate_disk.txx.orig	2012-06-14 23:34:06.000000000 +0200
+++ contrib/tbl/vipl/vipl_dilate_disk.txx	2012-06-14 23:37:08.000000000 +0200
@@ -12,10 +12,10 @@
   int size = (radius() < 0) ? 0 : int(radius());
   // mask is filled in preop function
   // apply filter:
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (register int j = starty, ej =  stopy; j < ej  ; ++j)
     for (register int i = startx, ei = stopx; i < ei ; ++i)
     {
--- contrib/tbl/vipl/vipl_dyadic.txx.orig	2012-06-14 23:31:27.000000000 +0200
+++ contrib/tbl/vipl/vipl_dyadic.txx	2012-06-14 23:37:17.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data();
   ImgOut &out = this->out_data();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i) {
       DataIn p = fgetpixel(in, i, j, DataIn(0));
--- contrib/tbl/vipl/vipl_erode_disk.txx.orig	2012-06-14 23:34:13.000000000 +0200
+++ contrib/tbl/vipl/vipl_erode_disk.txx	2012-06-14 23:37:28.000000000 +0200
@@ -21,10 +21,10 @@
 #ifdef DEBUG
   vcl_cout << " set start & stop ...";
 #endif
-  int startx = start(this->X_Axis());
-  int starty = 0; // = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis()); // = height(out);
+  int startx = this->start(this->X_Axis());
+  int starty = 0; // = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis()); // = height(out);
 #ifdef DEBUG
   vcl_cout << " (" << startx << ':' << stopx << ',' << starty << ':' << stopy << ')';
   vcl_cout << " run over image ...";
--- contrib/tbl/vipl/vipl_gaussian_convolution.txx.orig	2012-06-14 23:34:20.000000000 +0200
+++ contrib/tbl/vipl/vipl_gaussian_convolution.txx	2012-06-14 23:37:38.000000000 +0200
@@ -12,21 +12,21 @@
   int size = masksize();
 
   // Make temporary buffer to hold result of first (horizontal) convolution
-  int width  = stop(this->X_Axis()) - start(this->X_Axis());
-  int height = stop(this->Y_Axis()) - start(this->Y_Axis());
+  int width  = this->stop(this->X_Axis()) - this->start(this->X_Axis());
+  int height = this->stop(this->Y_Axis()) - this->start(this->Y_Axis());
   double* buf = new double[width*height];
   if (!buf) return false; // memory allocation failed
 
   // 1-D mask was generated in preop(), we just use it here:
 
   // horizontal convolution:
-  int starty = start(this->Y_Axis());
-  int stopy = stop(this->Y_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
   {
     int buf_j = j - starty;
-    int startx = start(this->X_Axis(),j);
-    int stopx = stop(this->X_Axis(),j);
+    int startx = this->start(this->X_Axis(),j);
+    int stopx = this->stop(this->X_Axis(),j);
     for (int i = startx; i < stopx; ++i) {
       int buf_i = i - startx;
       double result = mask()[0] * fgetpixel(in, i, j, DataIn(0));
@@ -39,8 +39,8 @@
   for (int j = starty; j < stopy; ++j)
   {
     int buf_j = j - starty;
-    int startx = start(this->X_Axis(),j);
-    int stopx = stop(this->X_Axis(),j);
+    int startx = this->start(this->X_Axis(),j);
+    int stopx = this->stop(this->X_Axis(),j);
     for (int i = startx; i < stopx; ++i) {
       int buf_i = i - startx;
       double result = mask()[0] * buf[buf_i+width*buf_j];
--- contrib/tbl/vipl/vipl_gradient_dir.txx.orig	2012-06-14 23:34:25.000000000 +0200
+++ contrib/tbl/vipl/vipl_gradient_dir.txx	2012-06-14 23:37:44.000000000 +0200
@@ -10,10 +10,10 @@
   const ImgIn &in = this->in_data(0);
   ImgOut &out = *this->out_data_ptr();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i) {
       register double dx = fgetpixel(in, i, j, DataIn(0)) - getpixel(in, i-1, j, DataIn(0));
--- contrib/tbl/vipl/vipl_gradient_mag.txx.orig	2012-06-14 23:34:31.000000000 +0200
+++ contrib/tbl/vipl/vipl_gradient_mag.txx	2012-06-14 23:37:57.000000000 +0200
@@ -11,10 +11,10 @@
   ImgOut &out = *this->out_data_ptr();
 
   register double dx, dy;
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i) {
       dx = fgetpixel(in, i, j, DataIn(0)) - getpixel(in, i-1, j, DataIn(0));
--- contrib/tbl/vipl/vipl_histogram.txx.orig	2012-06-14 23:34:38.000000000 +0200
+++ contrib/tbl/vipl/vipl_histogram.txx	2012-06-14 23:45:54.000000000 +0200
@@ -14,8 +14,8 @@
   if (index < 0) index = 0;
 #endif
   if (checkrange() == 1)  { // check range is slow, we always keep the divide...
-    for (int j = start(this->Y_Axis()), ej = stop(this->Y_Axis()) ; j < ej ; ++j)
-      for (int i = start(this->X_Axis(),j), ei = stop(this->X_Axis(),j) ; i < ei ; ++i) {
+    for (int j = this->start(this->Y_Axis()), ej = this->stop(this->Y_Axis()) ; j < ej ; ++j)
+      for (int i = this->start(this->X_Axis(),j), ei = this->stop(this->X_Axis(),j) ; i < ei ; ++i) {
         long bin = long(0.5 + (shiftin()+getpixel(in,i,j,DataIn(0)))/scalein());
 #if 0
         if (bin < 0) bin = 0;
@@ -26,22 +26,22 @@
       }
   }  // else we want speed, skip safety check, check special cases
   else  if (scalein() == 1 && scaleout() == 1 && shiftin() == 0) {
-    for (int j = start(this->Y_Axis()), ej = stop(this->Y_Axis()) ; j < ej ; ++j)
-      for (int i = start(this->X_Axis(),j), ei = stop(this->X_Axis(),j) ; i < ei ; ++i) {
+    for (int j = this->start(this->Y_Axis()), ej = this->stop(this->Y_Axis()) ; j < ej ; ++j)
+      for (int i = this->start(this->X_Axis(),j), ei = this->stop(this->X_Axis(),j) ; i < ei ; ++i) {
         long bin = long(0.5 + (getpixel(in,i,j,DataIn(0))));
         DataOut bs = getpixel(out,bin,index,DataOut(0));
         setpixel(out, bin, index, bs+1);
       }
   } else  if (scalein() == 1)  {
-    for (int j = start(this->Y_Axis()), ej = stop(this->Y_Axis()) ; j < ej ; ++j)
-      for (int i = start(this->X_Axis(),j), ei = stop(this->X_Axis(),j) ; i < ei ; ++i) {
+    for (int j = this->start(this->Y_Axis()), ej = this->stop(this->Y_Axis()) ; j < ej ; ++j)
+      for (int i = this->start(this->X_Axis(),j), ei = this->stop(this->X_Axis(),j) ; i < ei ; ++i) {
         long bin = long(0.5 + (shiftin()+getpixel(in,i,j,DataIn(0))));
         DataOut bs = getpixel(out,bin,index,DataOut(0));
         setpixel(out, bin, index, scaleout()+bs);
       }
   } else { // all modes
-    for (int j = start(this->Y_Axis()), ej = stop(this->Y_Axis()) ; j < ej ; ++j)
-      for (int i = start(this->X_Axis(),j), ei = stop(this->X_Axis(),j) ; i < ei ; ++i) {
+    for (int j = this->start(this->Y_Axis()), ej = this->stop(this->Y_Axis()) ; j < ej ; ++j)
+      for (int i = this->start(this->X_Axis(),j), ei = this->stop(this->X_Axis(),j) ; i < ei ; ++i) {
         long bin = long(0.5 + (shiftin()+getpixel(in,i,j,DataIn(0)))/scalein());
         DataOut bs = getpixel(out,bin,index,DataOut(0));
         setpixel(out, bin, index, scaleout()+bs);
@@ -55,8 +55,8 @@
 {
   const int index = indexout();
   ImgOut &out = *this->out_data_ptr();
-  for (int i = start_dst(this->X_Axis()),
-    ei = stop_dst(this->X_Axis()); i < ei; ++i)
+  for (int i = this->start_dst(this->X_Axis()),
+    ei = this->stop_dst(this->X_Axis()); i < ei; ++i)
     setpixel(out, i, index, DataOut(0));
   return true;
 }
--- contrib/tbl/vipl/vipl_median.txx.orig	2012-06-14 23:34:45.000000000 +0200
+++ contrib/tbl/vipl/vipl_median.txx	2012-06-14 23:38:53.000000000 +0200
@@ -14,10 +14,10 @@
 
   // apply filter:
   DataIn* v = new DataIn[(2*size+1)*(2*size+1)];
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i) {
       register int count = 0;
--- contrib/tbl/vipl/vipl_moment.txx.orig	2012-06-14 23:34:49.000000000 +0200
+++ contrib/tbl/vipl/vipl_moment.txx	2012-06-14 23:44:02.000000000 +0200
@@ -46,10 +46,10 @@
 
   // We create a (double) float buffer to hold the computed values.
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
 
   int sizex = stopx-startx+1;
   int sizey = stopy-starty+1;
--- contrib/tbl/vipl/vipl_monadic.txx.orig	2012-06-14 23:28:14.000000000 +0200
+++ contrib/tbl/vipl/vipl_monadic.txx	2012-06-14 23:38:58.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data();
   ImgOut &out = this->out_data();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i)
       fsetpixel(out, i, j, func()(fgetpixel(in, i, j, DataIn(0))));
--- contrib/tbl/vipl/vipl_sobel.txx.orig	2012-06-14 23:34:55.000000000 +0200
+++ contrib/tbl/vipl/vipl_sobel.txx	2012-06-14 23:39:15.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data(0);
   ImgOut &out = this->out_data();
   // apply filter:
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty, ej =  stopy; j < ej  ; ++j)
     for (int i = startx, ei = stopx; i < ei ; ++i)
       fsetpixel(out, i, j, (DataOut)(
--- contrib/tbl/vipl/vipl_threshold.txx.orig	2012-06-14 23:20:41.000000000 +0200
+++ contrib/tbl/vipl/vipl_threshold.txx	2012-06-14 23:39:23.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data();
   ImgOut &out = this->out_data();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i) {
       DataIn p = fgetpixel(in, i, j, DataIn(0));
--- contrib/tbl/vipl/vipl_x_gradient.txx.orig	2012-06-14 23:35:09.000000000 +0200
+++ contrib/tbl/vipl/vipl_x_gradient.txx	2012-06-14 23:39:29.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data(0);
   ImgOut &out = *this->out_data_ptr();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (register int j = starty; j < stopy; ++j)
     for (register int i = startx+1; i < stopx; ++i) {
       DataIn w = fgetpixel(in, i,  j, DataIn(0))
--- contrib/tbl/vipl/vipl_y_gradient.txx.orig	2012-06-14 23:35:14.000000000 +0200
+++ contrib/tbl/vipl/vipl_y_gradient.txx	2012-06-14 23:39:38.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data(0);
   ImgOut &out = *this->out_data_ptr();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (register int j = starty+1; j < stopy; ++j)
     for (register int i = startx; i < stopx; ++i) {
       DataIn w = fgetpixel(in, i, j,   DataIn(0))
--- contrib/tbl/vipl/vipl_add_random_noise.txx.orig	2012-06-14 23:26:05.000000000 +0200
+++ contrib/tbl/vipl/vipl_add_random_noise.txx	2012-06-14 23:35:42.000000000 +0200
@@ -7,10 +7,10 @@
 template <class ImgIn,class ImgOut,class DataIn,class DataOut,class PixelItr>
 bool vipl_add_random_noise <ImgIn,ImgOut,DataIn,DataOut,PixelItr> :: section_applyop()
 {
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (register int j = starty; j < stopy; ++j)
     for (register int i = startx; i < stopx; ++i)
     {
--- contrib/tbl/vipl/vipl_convert.txx.orig	2012-06-14 23:34:00.000000000 +0200
+++ contrib/tbl/vipl/vipl_convert.txx	2012-06-14 23:36:22.000000000 +0200
@@ -14,10 +14,10 @@
   const ImgIn &in = this->in_data(0);
   ImgOut &out = this->out_data(0);
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i)
       fsetpixel(out, i, j, (DataOut)fgetpixel(in,i,j,DataIn(0)));
--- contrib/tbl/vipl/vipl_dilate_disk.txx.orig	2012-06-14 23:34:06.000000000 +0200
+++ contrib/tbl/vipl/vipl_dilate_disk.txx	2012-06-14 23:37:08.000000000 +0200
@@ -12,10 +12,10 @@
   int size = (radius() < 0) ? 0 : int(radius());
   // mask is filled in preop function
   // apply filter:
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (register int j = starty, ej =  stopy; j < ej  ; ++j)
     for (register int i = startx, ei = stopx; i < ei ; ++i)
     {
--- contrib/tbl/vipl/vipl_dyadic.txx.orig	2012-06-14 23:31:27.000000000 +0200
+++ contrib/tbl/vipl/vipl_dyadic.txx	2012-06-14 23:37:17.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data();
   ImgOut &out = this->out_data();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i) {
       DataIn p = fgetpixel(in, i, j, DataIn(0));
--- contrib/tbl/vipl/vipl_erode_disk.txx.orig	2012-06-14 23:34:13.000000000 +0200
+++ contrib/tbl/vipl/vipl_erode_disk.txx	2012-06-14 23:37:28.000000000 +0200
@@ -21,10 +21,10 @@
 #ifdef DEBUG
   vcl_cout << " set start & stop ...";
 #endif
-  int startx = start(this->X_Axis());
-  int starty = 0; // = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis()); // = height(out);
+  int startx = this->start(this->X_Axis());
+  int starty = 0; // = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis()); // = height(out);
 #ifdef DEBUG
   vcl_cout << " (" << startx << ':' << stopx << ',' << starty << ':' << stopy << ')';
   vcl_cout << " run over image ...";
--- contrib/tbl/vipl/vipl_gaussian_convolution.txx.orig	2012-06-14 23:34:20.000000000 +0200
+++ contrib/tbl/vipl/vipl_gaussian_convolution.txx	2012-06-14 23:37:38.000000000 +0200
@@ -12,21 +12,21 @@
   int size = masksize();
 
   // Make temporary buffer to hold result of first (horizontal) convolution
-  int width  = stop(this->X_Axis()) - start(this->X_Axis());
-  int height = stop(this->Y_Axis()) - start(this->Y_Axis());
+  int width  = this->stop(this->X_Axis()) - this->start(this->X_Axis());
+  int height = this->stop(this->Y_Axis()) - this->start(this->Y_Axis());
   double* buf = new double[width*height];
   if (!buf) return false; // memory allocation failed
 
   // 1-D mask was generated in preop(), we just use it here:
 
   // horizontal convolution:
-  int starty = start(this->Y_Axis());
-  int stopy = stop(this->Y_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
   {
     int buf_j = j - starty;
-    int startx = start(this->X_Axis(),j);
-    int stopx = stop(this->X_Axis(),j);
+    int startx = this->start(this->X_Axis(),j);
+    int stopx = this->stop(this->X_Axis(),j);
     for (int i = startx; i < stopx; ++i) {
       int buf_i = i - startx;
       double result = mask()[0] * fgetpixel(in, i, j, DataIn(0));
@@ -39,8 +39,8 @@
   for (int j = starty; j < stopy; ++j)
   {
     int buf_j = j - starty;
-    int startx = start(this->X_Axis(),j);
-    int stopx = stop(this->X_Axis(),j);
+    int startx = this->start(this->X_Axis(),j);
+    int stopx = this->stop(this->X_Axis(),j);
     for (int i = startx; i < stopx; ++i) {
       int buf_i = i - startx;
       double result = mask()[0] * buf[buf_i+width*buf_j];
--- contrib/tbl/vipl/vipl_gradient_dir.txx.orig	2012-06-14 23:34:25.000000000 +0200
+++ contrib/tbl/vipl/vipl_gradient_dir.txx	2012-06-14 23:37:44.000000000 +0200
@@ -10,10 +10,10 @@
   const ImgIn &in = this->in_data(0);
   ImgOut &out = *this->out_data_ptr();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i) {
       register double dx = fgetpixel(in, i, j, DataIn(0)) - getpixel(in, i-1, j, DataIn(0));
--- contrib/tbl/vipl/vipl_gradient_mag.txx.orig	2012-06-14 23:34:31.000000000 +0200
+++ contrib/tbl/vipl/vipl_gradient_mag.txx	2012-06-14 23:37:57.000000000 +0200
@@ -11,10 +11,10 @@
   ImgOut &out = *this->out_data_ptr();
 
   register double dx, dy;
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i) {
       dx = fgetpixel(in, i, j, DataIn(0)) - getpixel(in, i-1, j, DataIn(0));
--- contrib/tbl/vipl/vipl_histogram.txx.orig	2012-06-14 23:34:38.000000000 +0200
+++ contrib/tbl/vipl/vipl_histogram.txx	2012-06-14 23:45:54.000000000 +0200
@@ -14,8 +14,8 @@
   if (index < 0) index = 0;
 #endif
   if (checkrange() == 1)  { // check range is slow, we always keep the divide...
-    for (int j = start(this->Y_Axis()), ej = stop(this->Y_Axis()) ; j < ej ; ++j)
-      for (int i = start(this->X_Axis(),j), ei = stop(this->X_Axis(),j) ; i < ei ; ++i) {
+    for (int j = this->start(this->Y_Axis()), ej = this->stop(this->Y_Axis()) ; j < ej ; ++j)
+      for (int i = this->start(this->X_Axis(),j), ei = this->stop(this->X_Axis(),j) ; i < ei ; ++i) {
         long bin = long(0.5 + (shiftin()+getpixel(in,i,j,DataIn(0)))/scalein());
 #if 0
         if (bin < 0) bin = 0;
@@ -26,22 +26,22 @@
       }
   }  // else we want speed, skip safety check, check special cases
   else  if (scalein() == 1 && scaleout() == 1 && shiftin() == 0) {
-    for (int j = start(this->Y_Axis()), ej = stop(this->Y_Axis()) ; j < ej ; ++j)
-      for (int i = start(this->X_Axis(),j), ei = stop(this->X_Axis(),j) ; i < ei ; ++i) {
+    for (int j = this->start(this->Y_Axis()), ej = this->stop(this->Y_Axis()) ; j < ej ; ++j)
+      for (int i = this->start(this->X_Axis(),j), ei = this->stop(this->X_Axis(),j) ; i < ei ; ++i) {
         long bin = long(0.5 + (getpixel(in,i,j,DataIn(0))));
         DataOut bs = getpixel(out,bin,index,DataOut(0));
         setpixel(out, bin, index, bs+1);
       }
   } else  if (scalein() == 1)  {
-    for (int j = start(this->Y_Axis()), ej = stop(this->Y_Axis()) ; j < ej ; ++j)
-      for (int i = start(this->X_Axis(),j), ei = stop(this->X_Axis(),j) ; i < ei ; ++i) {
+    for (int j = this->start(this->Y_Axis()), ej = this->stop(this->Y_Axis()) ; j < ej ; ++j)
+      for (int i = this->start(this->X_Axis(),j), ei = this->stop(this->X_Axis(),j) ; i < ei ; ++i) {
         long bin = long(0.5 + (shiftin()+getpixel(in,i,j,DataIn(0))));
         DataOut bs = getpixel(out,bin,index,DataOut(0));
         setpixel(out, bin, index, scaleout()+bs);
       }
   } else { // all modes
-    for (int j = start(this->Y_Axis()), ej = stop(this->Y_Axis()) ; j < ej ; ++j)
-      for (int i = start(this->X_Axis(),j), ei = stop(this->X_Axis(),j) ; i < ei ; ++i) {
+    for (int j = this->start(this->Y_Axis()), ej = this->stop(this->Y_Axis()) ; j < ej ; ++j)
+      for (int i = this->start(this->X_Axis(),j), ei = this->stop(this->X_Axis(),j) ; i < ei ; ++i) {
         long bin = long(0.5 + (shiftin()+getpixel(in,i,j,DataIn(0)))/scalein());
         DataOut bs = getpixel(out,bin,index,DataOut(0));
         setpixel(out, bin, index, scaleout()+bs);
@@ -55,8 +55,8 @@
 {
   const int index = indexout();
   ImgOut &out = *this->out_data_ptr();
-  for (int i = start_dst(this->X_Axis()),
-    ei = stop_dst(this->X_Axis()); i < ei; ++i)
+  for (int i = this->start_dst(this->X_Axis()),
+    ei = this->stop_dst(this->X_Axis()); i < ei; ++i)
     setpixel(out, i, index, DataOut(0));
   return true;
 }
--- contrib/tbl/vipl/vipl_median.txx.orig	2012-06-14 23:34:45.000000000 +0200
+++ contrib/tbl/vipl/vipl_median.txx	2012-06-14 23:38:53.000000000 +0200
@@ -14,10 +14,10 @@
 
   // apply filter:
   DataIn* v = new DataIn[(2*size+1)*(2*size+1)];
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i) {
       register int count = 0;
--- contrib/tbl/vipl/vipl_moment.txx.orig	2012-06-14 23:34:49.000000000 +0200
+++ contrib/tbl/vipl/vipl_moment.txx	2012-06-14 23:44:02.000000000 +0200
@@ -46,10 +46,10 @@
 
   // We create a (double) float buffer to hold the computed values.
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
 
   int sizex = stopx-startx+1;
   int sizey = stopy-starty+1;
--- contrib/tbl/vipl/vipl_monadic.txx.orig	2012-06-14 23:28:14.000000000 +0200
+++ contrib/tbl/vipl/vipl_monadic.txx	2012-06-14 23:38:58.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data();
   ImgOut &out = this->out_data();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i)
       fsetpixel(out, i, j, func()(fgetpixel(in, i, j, DataIn(0))));
--- contrib/tbl/vipl/vipl_sobel.txx.orig	2012-06-14 23:34:55.000000000 +0200
+++ contrib/tbl/vipl/vipl_sobel.txx	2012-06-14 23:39:15.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data(0);
   ImgOut &out = this->out_data();
   // apply filter:
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty, ej =  stopy; j < ej  ; ++j)
     for (int i = startx, ei = stopx; i < ei ; ++i)
       fsetpixel(out, i, j, (DataOut)(
--- contrib/tbl/vipl/vipl_threshold.txx.orig	2012-06-14 23:20:41.000000000 +0200
+++ contrib/tbl/vipl/vipl_threshold.txx	2012-06-14 23:39:23.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data();
   ImgOut &out = this->out_data();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (int j = starty; j < stopy; ++j)
     for (int i = startx; i < stopx; ++i) {
       DataIn p = fgetpixel(in, i, j, DataIn(0));
--- contrib/tbl/vipl/vipl_x_gradient.txx.orig	2012-06-14 23:35:09.000000000 +0200
+++ contrib/tbl/vipl/vipl_x_gradient.txx	2012-06-14 23:39:29.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data(0);
   ImgOut &out = *this->out_data_ptr();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (register int j = starty; j < stopy; ++j)
     for (register int i = startx+1; i < stopx; ++i) {
       DataIn w = fgetpixel(in, i,  j, DataIn(0))
--- contrib/tbl/vipl/vipl_y_gradient.txx.orig	2012-06-14 23:35:14.000000000 +0200
+++ contrib/tbl/vipl/vipl_y_gradient.txx	2012-06-14 23:39:38.000000000 +0200
@@ -9,10 +9,10 @@
   const ImgIn &in = this->in_data(0);
   ImgOut &out = *this->out_data_ptr();
 
-  int startx = start(this->X_Axis());
-  int starty = start(this->Y_Axis());
-  int stopx = stop(this->X_Axis());
-  int stopy = stop(this->Y_Axis());
+  int startx = this->start(this->X_Axis());
+  int starty = this->start(this->Y_Axis());
+  int stopx = this->stop(this->X_Axis());
+  int stopy = this->stop(this->Y_Axis());
   for (register int j = starty+1; j < stopy; ++j)
     for (register int i = startx; i < stopx; ++i) {
       DataIn w = fgetpixel(in, i, j,   DataIn(0))
