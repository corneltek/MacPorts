# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem      1.0
PortGroup       muniversal 1.0

name            icu
set my_name     icu4c
# Don't forget to increase the revision number of the dependents (e.g. boost)
# whenever the library version number changes. Thanks.
# To find dependencies, use:
# port file all | sort -u | xargs grep -E ':icu( |$)' | cut -d / -f 12 | sort -u
version         53.1
categories      devel textproc
platforms       darwin freebsd
license         MIT
maintainers     nomaintainer
description     International Components for Unicode

long_description \
    The International Components for Unicode (ICU) libraries provide robust \
    and full-featured Unicode services on a wide variety of platforms. ICU \
    supports the most current version of the Unicode standard, and they provide \
    support for supplementary Unicode characters (needed for GB 18030 repertoire support).

homepage        http://www.icu-project.org/
master_sites    http://download.icu-project.org/files/${my_name}/${version}/

distname        ${my_name}-[join [split ${version} .] _]
extract.suffix  .tgz
distfiles       ${distname}-src${extract.suffix}

checksums       ${distname}-src.tgz \
                rmd160  9bd1b4bdc2010545c76a927dcf46049686beeab9 \
                sha256  6fa74fb5aac070c23eaba1711a7178fe582c59867484c5ec07c49002787a9a28

worksrcdir      ${name}/source
set docdir      ${prefix}/share/doc/${name}

# icu appends -O2 to the cflags and cxxflags
configure.optflags-delete -Os

# ICU has three mechanisms to aid other projects in building properly
#     1) .pc files for pkg-config
#     2) shell script icu-config that can output compiler flags
#     3) Makefile include files Makefile.inc and pkgdata.inc
# For a time, all three assumed other projects would want to be
#     built as ICU had been built, regardless of whether it was appropriate.
# For the most part, the extraneous flags have been removed.
#     1) They have been removed completely from the .pc files.
#        pkg-config is the recommended way of building against ICU.
#     2) icu-config does not print them out, but they are still contained in the script itself.
#     3) They still exist in the Makefile include files.
#
# for descriptions of the problem, see
#     r101578
#     #40069
#     https://bugs.gentoo.org/show_bug.cgi?id=202059
#
# for upstream reports and discussion, see
#    http://bugs.icu-project.org/trac/ticket/10308
#    http://bugs.icu-project.org/trac/ticket/6102
if {[variant_isset universal]} {
    merger-post-destroot {
        set rebuilton ""
        foreach arch ${universal_archs_to_use} {
            set dir ${destroot}-${arch}
            
            # SIZEOF_VOID_P is no longer used in icu-config, so remove it to facilitate merging of the shell script
            reinplace {s| -DSIZEOF_VOID_P=[48]||g} ${dir}${prefix}/bin/icu-config
            
            # icu-config contains the exact time it was built, which makes merging difficult
            # ensure that all versions of icu-config have the same build timestamp
            if { ${rebuilton} eq "" } {
                set rebuilton [exec /usr/bin/tail -n 1 ${dir}${prefix}/bin/icu-config]
            } else {
                reinplace "s|^# Rebuilt on .*|${rebuilton}|" ${dir}${prefix}/bin/icu-config
            }
            
            # Removing architecture specific information from the Makefile include files is necessary to merge them correctly.
            # It is concivable that this could cause problems for certain projects.
            # The developers of ICU suggest using pkg-config over both icu-config and the Makefile includes.
            reinplace {s| -DSIZEOF_VOID_P=[48]||g} ${dir}${prefix}/lib/icu/${version}/Makefile.inc
            reinplace -E {s:-arch +[^ ]+::g} ${dir}${prefix}/lib/icu/${version}/pkgdata.inc
        }
    }
} else {
    post-destroot {
        # stay consistent with the universal build (see comments above)
        reinplace {s| -DSIZEOF_VOID_P=[48]||g} ${destroot}${prefix}/bin/icu-config
        reinplace {s| -DSIZEOF_VOID_P=[48]||g} ${destroot}${prefix}/lib/icu/${version}/Makefile.inc
        reinplace -E {s:-arch +[^ ]+::g} ${destroot}${prefix}/lib/icu/${version}/pkgdata.inc
    }
}

post-destroot {
    # The ICU build mechanism passes rpath to the linker, but this should not be necessary if the shared libraries were built correctly.
    reinplace {s|^default_ENABLE_RPATH="YES"$|default_ENABLE_RPATH="NO"|g} ${destroot}${prefix}/bin/icu-config
    reinplace -E {s| -Wl,-rpath,.+/lib||g} ${destroot}${prefix}/lib/icu/${version}/pkgdata.inc
}

set platform [switch ${os.platform} {darwin {format MacOSX} freebsd {format FreeBSD}}]
configure.cmd   ./runConfigureICU ${platform}

# enable-rpath forces ICU to build the shared library correctly (with directory name in -install_name)
configure.args  --enable-static \
                --disable-samples \
                --enable-rpath

configure.universal_args-delete --disable-dependency-tracking
if {[variant_isset universal]} {
    # ICU detects cross compiling by trying to run binaries.
    # r73849 and #29904 indicate that cross compiling is a problem.
    # Of the solutions tried (r79660, r73865, and r73849), simply disallowing cross compiling is by far the simplest.
    # Note that #29904 should not show up again because universal now better recognizes 32/64-bit cross compiling (r79658)
    set merger_must_run_binaries "yes"
}

# Fix bug #11981 that prevents ICU from building when upgrading.
# The default configure flags causes utilisation of outdated ICU
# headers/libs instead of the right ones.
configure.cppflags
configure.ldflags

build.type      gnu

use_parallel_build  yes

test.run        yes
test.target     check

post-destroot {
    xinstall -d ${destroot}${docdir}
    eval xinstall -m 0644 [glob ${worksrcpath}/../*.{css,html,txt}] ${destroot}${docdir}
}

# icu @51.2_0 and earlier also installed the following files directly, bypassing destroot:
#   ${prefix}/lib/icu/${version}/pkgdata.inc
# These files can be removed from the below deactivation block after August 2014.
pre-deactivate {
    if {[variant_isset universal]} {
        # Ticket #23773
        foreach f [list "${prefix}/bin/icu-config" \
                        "${prefix}/lib/icu/${version}/Makefile.inc" \
                        "${prefix}/lib/icu/${version}/pkgdata.inc" \
                        "${prefix}/lib/pkgconfig/icu-i18n.pc" \
                        "${prefix}/lib/pkgconfig/icu-io.pc" \
                        "${prefix}/lib/pkgconfig/icu-le.pc" \
                        "${prefix}/lib/pkgconfig/icu-lx.pc" \
                        "${prefix}/lib/pkgconfig/icu-uc.pc"] {
            delete ${f}
        }
    }
}

variant doc conflicts doxygen description {Install pre-built API documentation} {
    depends_extract-append bin:unzip:unzip
    extract.only        ${distname}-src${extract.suffix}
    distfiles-append    ${distname}-docs.zip
    checksums-append    ${distname}-docs.zip \
                        rmd160  60ce19f8633c18d670ad2f0b8d7920cd6ed0a314 \
                        sha256  2c700534d52b98615b4baffcf0502f37540604e67817625f05d6e2fbf98d0c0b

    post-extract {
        xinstall -m 0755 -d ${worksrcpath}/doc
        system "unzip -q ${distpath}/${distname}-docs.zip -d ${worksrcpath}/doc/html"
    }

    post-destroot {
        copy ${worksrcpath}/doc/html ${destroot}${docdir}
    }
}

variant doxygen conflicts doc universal description {Build and install API documentation} {
    depends_build port:doxygen
    post-build {
        system -W ${worksrcpath} "${build.cmd} doc"
    }
    post-destroot {
        system -W ${worksrcpath} "${build.cmd} install-doc DESTDIR=${destroot}"
    }
}

platform freebsd {
    build.env       MAKE=/usr/local/bin/gmake
    destroot.env    MAKE=/usr/local/bin/gmake
}

platform darwin 8 {
    patchfiles-append patch-common-putil.cpp.diff
}

livecheck.url   http://site.icu-project.org/download
livecheck.regex {>ICU4C \((\d+(?:\.\d+)*)\)<}
