--- Makefile.in.orig	2009-12-30 06:56:30.000000000 -0600
+++ Makefile.in	2010-01-31 09:07:51.000000000 -0600
@@ -91,6 +91,7 @@
 	gl/lib/stripslash.c \
 	gl/lib/strncasecmp.c \
 	gl/lib/strndup.c \
+	gl/lib/strnlen.c \
 	gl/lib/xmalloc.c \
 	gl/lib/xstrndup.c
 
@@ -302,11 +303,13 @@
 	gl/m4/quote.m4 \
 	gl/m4/realloc.m4 \
 	gl/m4/rename.m4 \
+	gl/m4/safe-read.m4 \
 	gl/m4/safe-write.m4 \
 	gl/m4/ssize_t.m4 \
 	gl/m4/stdbool.m4 \
 	gl/m4/strcase.m4 \
 	gl/m4/strndup.m4 \
+	gl/m4/strnlen.m4 \
 	gl/m4/unlocked-io.m4 \
 	gl/m4/utimbuf.m4 \
 	gl/m4/xalloc.m4 \
--- gl/lib/strndup.c.orig	2009-12-30 06:56:30.000000000 -0600
+++ gl/lib/strndup.c	2010-01-19 12:04:41.000000000 -0600
@@ -23,7 +23,7 @@
 
 #include <stdlib.h>
 
-#ifndef HAVE_DECL_STRNLEN
+#if !HAVE_DECL_STRNLEN
 extern size_t strnlen (const char *, size_t);
 #endif
 
--- gl/lib/strnlen.c	1969-12-31 18:00:00.000000000 -0600
+++ gl/lib/strnlen.c	2010-01-13 10:57:48.000000000 -0600
@@ -0,0 +1,31 @@
+/* Find the length of STRING, but scan at most MAXLEN characters.
+   Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.
+   Written by Simon Josefsson.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software Foundation,
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
+
+#include <config.h>
+
+#include <string.h>
+
+/* Find the length of STRING, but scan at most MAXLEN characters.
+   If no '\0' terminator is found in that many characters, return MAXLEN.  */
+
+size_t
+strnlen (const char *string, size_t maxlen)
+{
+  const char *end = memchr (string, '\0', maxlen);
+  return end ? (size_t) (end - string) : maxlen;
+}
--- gl/lib/xstrndup.c	2009-12-30 06:56:30.000000000 -0600
+++ gl/lib/xstrndup.c	2010-01-19 12:04:41.000000000 -0600
@@ -23,7 +23,7 @@
 #include <string.h>
 #include "xalloc.h"
 
-#ifndef HAVE_DECL_STRNDUP
+#if !HAVE_DECL_STRNDUP
 extern char *strndup (const char *, size_t);
 #endif
 
--- gl/m4/safe-read.m4	1969-12-31 18:00:00.000000000 -0600
+++ gl/m4/safe-read.m4	2010-01-06 19:24:19.000000000 -0600
@@ -0,0 +1,18 @@
+# safe-read.m4 serial 5
+dnl Copyright (C) 2002, 2003, 2005, 2006 Free Software Foundation, Inc.
+dnl This file is free software; the Free Software Foundation
+dnl gives unlimited permission to copy and/or distribute it,
+dnl with or without modifications, as long as this notice is preserved.
+
+AC_DEFUN([gl_SAFE_READ],
+[
+  AC_LIBOBJ([safe-read])
+
+  gl_PREREQ_SAFE_READ
+])
+
+# Prerequisites of lib/safe-read.c.
+AC_DEFUN([gl_PREREQ_SAFE_READ],
+[
+  AC_REQUIRE([gt_TYPE_SSIZE_T])
+])
--- gl/m4/strnlen.m4	1969-12-31 18:00:00.000000000 -0600
+++ gl/m4/strnlen.m4	2010-01-13 11:53:11.000000000 -0600
@@ -0,0 +1,31 @@
+# strnlen.m4 serial 10
+dnl Copyright (C) 2002-2003, 2005-2007, 2009 Free Software Foundation, Inc.
+dnl This file is free software; the Free Software Foundation
+dnl gives unlimited permission to copy and/or distribute it,
+dnl with or without modifications, as long as this notice is preserved.
+
+AC_DEFUN([gl_FUNC_STRNLEN],
+[
+  dnl Persuade glibc <string.h> to declare strnlen().
+  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
+
+  dnl AC_REQUIRE([gl_HEADER_STRING_H_DEFAULTS])
+  AC_CHECK_DECLS_ONCE([strnlen])
+  if test $ac_cv_have_decl_strnlen = no; then
+    HAVE_DECL_STRNLEN=0
+  fi
+
+  AC_FUNC_STRNLEN
+  if test $ac_cv_func_strnlen_working = no; then
+    # This is necessary because automake-1.6.1 doesn't understand
+    # that the above use of AC_FUNC_STRNLEN means we may have to use
+    # lib/strnlen.c.
+    AC_LIBOBJ([strnlen])
+    AC_DEFINE([strnlen], [rpl_strnlen],
+      [Define to rpl_strnlen if the replacement function should be used.])
+    gl_PREREQ_STRNLEN
+  fi
+])
+
+# Prerequisites of lib/strnlen.c.
+AC_DEFUN([gl_PREREQ_STRNLEN], [:])
