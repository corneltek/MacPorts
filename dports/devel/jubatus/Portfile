# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           github 1.0

github.setup        jubatus jubatus 0.3.2 jubatus-

categories          devel math textproc
maintainers         hum openmaintainer

description         Distributed Online Machine Learning Framework

long_description    The Jubatus library is a online machine learning framework \
                    which runs in distributed environment. Jubatus library includes \
                    these functions: multi-class/binary classification, pre-proccessing \
                    data (for natural language), and process management.

homepage            http://jubat.us/
platforms           darwin
license             LGPL-2.1

checksums           rmd160  35c74fb3248902f6446cc8e2202a33f4e583d283 \
                    sha256  813ba324d94625e2c7cf57296f900a67e3a7596d0138dd84b5c408b4f4328ef7

depends_lib         port:pkgconfig \
                    port:py-msgpack \
                    port:msgpack \
                    port:pficommon \
                    port:re2 \
                    port:libevent \
                    port:google-glog \
                    port:ux-trie \
                    port:mecab-utf8 \
                    port:libzookeeper

configure.cmd       ./waf configure
configure.args-append    --enable-ux --enable-mecab
configure.universal_args

build.cmd           ./waf build
build.target

destroot.cmd        ./waf
destroot.args       --destdir=${destroot}
destroot.destdir

post-destroot {
    set libdir   ${destroot}${prefix}/lib
    foreach libname [glob -tails -directory ${libdir} *.dylib] {
        system "install_name_tool -id ${prefix}/lib/${libname} ${libdir}/${libname}"
    }
    # fix to install_name for installed libraries.
    set bindir   ${destroot}${prefix}/bin
    set builddir ${worksrcpath}/build/src
    foreach path [concat [glob ${libdir}/*.dylib] [glob ${bindir}/*]] {
        set libpathes1 [regexp -all -inline {\S+\/libjuba\S+dylib \(}           [exec otool -L ${path}]]
        set libpathes2 [regexp -all -inline {\S+\/fv_converter\/lib\S+dylib \(} [exec otool -L ${path}]]
        foreach libpath [concat ${libpathes1} ${libpathes2}] {
            regexp {\S+\/(lib[^\/]+dylib)} ${libpath} srcpath libname
            system "install_name_tool -change ${srcpath} ${prefix}/lib/${libname} ${path}"
        }
    }
}
