# $Id$

PortSystem              1.0
PortGroup               xcode 1.0
PortGroup               xcodeversion 1.0
minimum_xcodeversions   {10 3.2.3}

# cctools uses a static library from this port when it builds, please
# revbump cctools whenever this port updates

name                    ld64
# XCode 4.3
version                 128.2
revision                3
set llvm_version        3.0
categories              devel
maintainers             mfeiri jeremyhu
homepage                http://opensource.apple.com/source/${name}/
master_sites            http://opensource.apple.com/tarballs/${name}/
license                 APSL-2.0
depends_build           port:libunwind-headers \
                        path:include/mach-o/dyld_priv.h:dyld-headers \
                        path:include/mach-o/arm/reloc.h:cctools-headers
description             ld64 is the new mach-o linker
long_description        ld64 combines several object files and libraries, \
                        resolves references, and produces an ouput file.

checksums               ${distname}${extract.suffix} \
                        rmd160  0da68b89669233d7b6cc6ebdb92482e191bc9051 \
                        sha256  96a912464e2d4d3d7cdaab0744003b0fa93d139f203c82867f659ee94b4ae9f7

if {![variant_isset llvm29] && ![variant_isset llvm30] && ![variant_isset llvm31]} {
    default_variants +llvm30
}

set llvm_version {}
variant llvm29 conflicts llvm30 llvm31 description {Use llvm-2.9 for libLTO} {
    set llvm_version        2.9
    depends_lib-append      port:llvm-${llvm_version}
}

variant llvm30 conflicts llvm29 llvm31 description {Use llvm-3.0 for libLTO} {
    set llvm_version        3.0
    depends_lib-append      port:llvm-${llvm_version}
}

variant llvm31 conflicts llvm29 llvm30 description {Use llvm-3.1 for libLTO} {
    set llvm_version        3.1
    depends_lib-append      port:llvm-${llvm_version}
}

if {${os.major} < 9} {
    # Between XCode 3.0 (OS X 10.5.2)
    version             77.1
    revision            0
    checksums           rmd160  a50eaef9ccd49c9e0db81b7e2abc392574bd552d \
                        sha256  abd66f0dd92d52da6f0b9c44ca5c2a39d92f8be47941f6c35a9af39b790bf163
    supported_archs     i386 ppc
    depends_lib-delete  port:llvm-${llvm_version}
    patchfiles          ld64-77-version.patch
} elseif {${os.arch} == "powerpc"} {
    # XCode 3.1.4
    # 127.2 should work, but it will require some build fixes for ppc.
    version             85.2.1
    revision            4
    checksums           rmd160 42c80bd4ad6e9f96a757245e6a2b95084c009ff1 \
                        sha256 4bcbcbdfd62efdc46c51700b8f5dae2cbd1638e9e50f649d5c7f242d32fca804
    supported_archs     i386 ppc
    patchfiles          patch-MATH85-ld.cpp.diff
} elseif {${os.major} < 11} {
    # XCode 3.2.6
    # This was the last XCode release that supported building for ppc.
    version             127.2
    revision            4
    checksums           rmd160  8ee709341549a1944732daef6ebab7ef1acfcc6e \
                        sha256  97b75547b2bd761306ab3e15ae297f01e7ab9760b922bc657f4ef72e4e052142
    supported_archs     i386 x86_64
}

xcode.target            all ObjectDump machocheck
xcode.destroot.path     ${prefix}/bin

post-patch {
    if {${os.major} >= 9} {
        reinplace "s|/Developer/usr/lib|${prefix}/libexec/llvm-${llvm_version}/lib|g" \
            ${worksrcpath}/ld64.xcodeproj/project.pbxproj
    }
    reinplace "s|/usr/share/man/man1|${prefix}/share/man/man1|g" \
        ${worksrcpath}/ld64.xcodeproj/project.pbxproj
    reinplace "s|usr/share/man/man1|${prefix}/share/man/man1|g" \
        ${worksrcpath}/ld64.xcodeproj/project.pbxproj
    reinplace "s|/usr/local|${prefix}|g" \
        ${worksrcpath}/ld64.xcodeproj/project.pbxproj
    reinplace "s|/Developer/usr/local|${prefix}|g" \
        ${worksrcpath}/ld64.xcodeproj/project.pbxproj
    reinplace "s|\$(RC_ProjectSourceVersion)|${version}|g" \
        ${worksrcpath}/ld64.xcodeproj/project.pbxproj

    if {${os.major} < 9} {
        # No CommonCrypto, use openssl
        reinplace "s:<CommonCrypto/CommonDigest.h>:<openssl/md5.h>:" ${worksrcpath}/src/MachOWriterExecutable.hpp
        reinplace "s:CC_MD5:MD5:" ${worksrcpath}/src/MachOWriterExecutable.hpp
    }
}

if {${os.major} >= 9} {
    pre-build {
        set extra_flags "[exec ${prefix}/bin/llvm-config-mp-${llvm_version} --cflags] -I${prefix}/include"
        build.env       OTHER_CFLAGS="${extra_flags}" OTHER_CPLUSPLUSFLAGS="${extra_flags}"
    }
    pre-destroot {
        set extra_flags "[exec ${prefix}/bin/llvm-config-mp-${llvm_version} --cflags] -I${prefix}/include"
        destrootd.env   OTHER_CFLAGS="${extra_flags}" OTHER_CPLUSPLUSFLAGS="${extra_flags}"
    }
} else {
    xcode.build.settings    OTHER_CFLAGS='-I${prefix}/include' OTHER_CPLUSPLUSFLAGS='-I${prefix}/include' OTHER_LDFLAGS='-lcrypto'
    xcode.destroot.settings OTHER_CFLAGS='-I${prefix}/include' OTHER_CPLUSPLUSFLAGS='-I${prefix}/include' OTHER_LDFLAGS='-lcrypto'
}

post-destroot {
    # ${prefix}/bin/ld will always use the llvm we built against
    # ${prefix}/libexec/ld64/ld uses relative linking for use with the llvm ports
    file mkdir ${destroot}${prefix}/libexec/ld64
    file copy ${destroot}${prefix}/bin/ld ${destroot}${prefix}/libexec/ld64/ld

    if {${os.major} >= 9} {
        system "install_name_tool -change ${prefix}/libexec/llvm-${llvm_version}/lib/libLTO.dylib \
                @executable_path/../lib/libLTO.dylib ${destroot}${prefix}/libexec/ld64/ld"
    }

    if {[file exists ${destroot}${prefix}/bin/libprunetrie.a]} {
        file rename ${destroot}${prefix}/bin/libprunetrie.a ${destroot}${prefix}/lib/libprunetrie.a
    }
}

livecheck.type          regex
livecheck.regex         "${name}-(\[\\d.\]+)"
