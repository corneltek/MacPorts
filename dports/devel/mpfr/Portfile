# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0

# Although mpfr builds without a custom universal variant,
# it is not the same as building the archs differently
# due to the variable HAVE_LDOUBLE_IEEE_EXT_LITTLE.
PortGroup           muniversal 1.0
PortGroup           compiler_blacklist_versions 1.0

name                mpfr
set base_version    3.1.2
set patch_level     10
version             ${base_version}-p${patch_level}
revision            2
categories          devel math
platforms           darwin
license             LGPL-3+
maintainers         nomaintainer

description         C library for multiple-precision floating-point \
                    computations
long_description    MPFR is a portable C library for arbitrary-precision \
                    binary floating-point computation with correct \
                    rounding, based on the GMP multiple-precision \
                    library. The computation is both efficient and \
                    has a well-defined semantics. It copies the good \
                    ideas from the ANSI/IEEE-754 standard for \
                    fixed-precision floating-point arithmetic.
homepage            http://www.mpfr.org/

depends_lib         port:gmp

distname            ${name}-${base_version}
master_sites        http://www.mpfr.org/${distname}
use_xz              yes

checksums           ${distname}${extract.suffix} \
                        rmd160  902870a4c8bea3067b49e7a859dad0cf3fdffd06 \
                        sha256  399d0f47ef6608cc01d29ed1b99c7faff36d9994c45f36f41ba250147100453b

patchfiles          yosemite-symbol-lookup.patch

# Patch names are not qualified with the base version.
dist_subdir         ${name}/${base_version}
patch.args          -p1
for {set i 1} {${i} <= ${patch_level}} {incr i} {
    patchfiles-append   patch[format %02d ${i}]
}
checksums-append    patch01 \
                        rmd160  c6907261f3faa467a9d9cecdba6f9917db3b7de0 \
                        sha256  38c6bcfd42c0fc5abe8ec3a43381508ed64c0c2fc0feb2403e5a120f56cd0821 \
                    patch02 \
                        rmd160  b9232b9b5467a6ba2770156a8eeb3b04612c46e1 \
                        sha256  3be0d786726b463cada256dae2fb6930dc961d8e11475f0f32577cb009322c11 \
                    patch03 \
                        rmd160  ea3cf54186502fcbd3d938067af22cf1e9814535 \
                        sha256  a4b82ae2538d7e18ba48c1d8343e7aa08cb885aa98df73d96099c46f78501c6a \
                    patch04 \
                        rmd160  38abeffb08d681fb3d664c6a51a9ca2096ecd255 \
                        sha256  bc1f01c3c16e3e05ae28583d758b3461765ff51e7d5981cf2c0142f2f41a1003 \
                    patch05 \
                        rmd160  9aba36a214cc2d04dce376049a82c45e9b871926 \
                        sha256  5b5701b3133d0a0553d8fed95628ede1bb729f5974eae4b0c5589a25825582c0 \
                    patch06 \
                        rmd160  554b0830858695ada7ec477dfa3ee3e29a54cb11 \
                        sha256  df21287e786875a29e582755f47a99acda500a167066e29abd59dc6294120ab4 \
                    patch07 \
                        rmd160  6dcbc15510c4f45ce330ba0d3f48dd4536832dec \
                        sha256  bd3b7edd038033ce2e6a5475ca93acd862682c3b9e221ad1fb66277ddfdfba05 \
                    patch08 \
                        rmd160  d32195e2b141208448d238852a365ceb6bf840ec \
                        sha256  a132935024b525842ec4111343266be6aa8d298c538204c7446558e88af711b5 \
                    patch09 \
                        rmd160  b98383f009bd7021ff1814f90033fd0f357a272e \
                        sha256  acc114030cdd45c3022bb543a857d1f2bcba2cff6df1ee3861d3e76f93c954e2 \
                    patch10 \
                        rmd160  940d1becc15f1f4f0e633720e251a0aec2b50bbe \
                        sha256  26f859193adc7700df47417c753236b915034e83b5da626498e6c46ec272ced1


# Since patch08 changes configure.ac, we need to do this before the
# build tries to.
use_autoreconf      yes

# Due to radr://10291355 (llvm.org PR11111), the new tls support enabled in clang with Xcode 4.2
# miscompiles mpfr. While this was fixed in Xcode 4.2.1, as the ttls support was never used prior to
# Xcode 4.2, the generic fix is to pass --disable-thread-safe to configure, however this will break
# any project that requires a thread-safe mpfr library, therefore the Xcode 4.2 compiler is
# blacklisted here
compiler.blacklist  llvm-gcc-4.2 = 2336.1.00

test.run            yes
test.target         check

livecheck.url       http://www.mpfr.org/mpfr-current/
livecheck.regex     "mpfr-(\\d+(?:\\.\\d+)*)${extract.suffix}"
