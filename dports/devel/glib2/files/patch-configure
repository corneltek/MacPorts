--- configure.orig	Wed Jan 29 07:00:25 2003
+++ configure	Sat Apr 19 04:37:54 2003
@@ -15918,10 +15918,11 @@
 echo "$as_me:$LINENO: result: $glib_cv___va_copy" >&5
 echo "${ECHO_T}$glib_cv___va_copy" >&6
 
-if test "x$glib_cv_va_copy" = "xyes"; then
-  g_va_copy_func=va_copy
-else if test "x$glib_cv___va_copy" = "xyes"; then
+# Prefer __va_copy, available on both gcc2 and gcc3.
+if test "x$glib_cv___va_copy" = "xyes"; then
   g_va_copy_func=__va_copy
+else if test "x$glib_cv_va_copy" = "xyes"; then
+  g_va_copy_func=va_copy
 fi
 fi
 
@@ -16977,9 +16978,9 @@
     # both CPPFLAG and LIBS.
     # One of them does for most gcc versions and some other platforms/compilers
     # too and could be considered as the canonical way to go.
-    for flag in pthread pthreads; do
+    for flag in '-pthread' '-pthreads' ''; do
       glib_save_CFLAGS="$CFLAGS"
-      CFLAGS="$CFLAGS -$flag"
+      CFLAGS="$CFLAGS $flag"
       if test "$cross_compiling" = yes; then
   cat >conftest.$ac_ext <<_ACEOF
 
@@ -17052,8 +17053,8 @@
 fi
       CFLAGS="$glib_save_CFLAGS"
       if test $glib_flag_works = yes ; then
-         G_THREAD_CFLAGS=-$flag
-	 G_THREAD_LIBS=-$flag
+         G_THREAD_CFLAGS=$flag
+	 G_THREAD_LIBS=$flag
       fi
     done
   fi
@@ -17081,6 +17082,9 @@
 			G_THREAD_CFLAGS="-D_THREAD_SAFE"
 		fi
 		;;
+	*-darwin*)
+		# Nothing needed.
+		;;
 	*-dg-dgux*)  # DG/UX
 		G_THREAD_CFLAGS="-D_REENTRANT -D_POSIX4A_DRAFT10_SOURCE"
 		;;
@@ -21947,9 +21951,10 @@
 #define GLIB_MICRO_VERSION $GLIB_MICRO_VERSION
 "
 
+# Prefer __va_copy, available on both gcc2 and gcc3.
 case xyes in
-x$glib_cv_va_copy)	glib_vacopy='#define G_VA_COPY	va_copy' ;;
 x$glib_cv___va_copy)	glib_vacopy='#define G_VA_COPY	__va_copy' ;;
+x$glib_cv_va_copy)	glib_vacopy='#define G_VA_COPY	va_copy' ;;
 *)			glib_vacopy=''
 esac
 
@@ -22968,8 +22973,11 @@
 /* gcc-2.95.x supports both gnu style and ISO varargs, but if -ansi
  * is passed ISO vararg support is turned off, and there is no work
  * around to turn it on, so we unconditionally turn it off.
+ *
+ * On darwin, use gcc macro to avoid incompatibility between gcc2
+ * and gcc3.
  */
-#if __GNUC__ == 2 && __GNUC_MINOR__ == 95
+#if (__GNUC__ == 2 && __GNUC_MINOR__ == 95) || defined (__APPLE__)
 #  undef G_HAVE_ISO_VARARGS
 #endif
