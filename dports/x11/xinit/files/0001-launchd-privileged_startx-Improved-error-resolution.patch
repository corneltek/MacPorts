From 49dd0d562ce95e8467830eedbd25ffa97ec88f0e Mon Sep 17 00:00:00 2001
From: Jeremy Huddleston <jeremyhu@apple.com>
Date: Fri, 17 Feb 2012 17:35:26 -0800
Subject: [PATCH] launchd/privileged_startx: Improved error resolution

Rather than just failing to do anything when directories aren't what we
want them to be, we now try our best to fix the situation.

Signed-off-by: Jeremy Huddleston <jeremyhu@apple.com>
---
 launchd/privileged_startx/10-tmpdirs.cpp |   36 +++++++++++++++++++++++++----
 1 files changed, 31 insertions(+), 5 deletions(-)
 mode change 100755 => 100644 launchd/privileged_startx/10-tmpdirs.cpp

diff --git a/launchd/privileged_startx/10-tmpdirs.cpp b/launchd/privileged_startx/10-tmpdirs.cpp
old mode 100755
new mode 100644
index 8012597..7f2c139
--- xinit-1.3.2/launchd/privileged_startx/10-tmpdirs.cpp
+++ xinit-1.3.2/launchd/privileged_startx/10-tmpdirs.cpp
@@ -36,11 +36,37 @@ else
     MKTEMP=mktemp
 fi
 
+STAT=/usr/bin/stat
+
 for dir in /tmp/.ICE-unix /tmp/.X11-unix /tmp/.font-unix ; do
-	XCOMM Use mktemp rather than mkdir to avoid possible security issue
-	XCOMM if $dir exists and is a symlink
-	if ${MKTEMP} -d ${dir} >& /dev/null ; then
-		chmod 1777 $dir
-		chown root:wheel $dir
+	success=0
+	for attempt in 1 2 3 4 5 ; do
+		if [ -h ${dir} ] ; then
+			echo "Possible man in the middle attack (symlink) detected on ${dir}, removing." >&2
+			rm ${dir}
+		fi
+
+		check=`${STAT} -f '%#p %u %g' ${dir}`
+		if [ "${check}" = "041777 0 0" ] ; then
+			success=1
+			break
+		else
+			echo "Invalid permissions (${check}) found on ${dir}, moving to ${dir}.$$" >&2
+			mv ${dir} ${dir}.$$
+		fi
+
+		# Use mktemp rather than mkdir to avoid possible security issue
+		# if $dir exists and is a symlink (ie protect against a race
+		# against the above check)
+		if ${MKTEMP} -d ${dir} >& /dev/null ; then
+			chmod 1777 $dir
+			chown 0:0 $dir
+			success=1
+			break
+		fi
+	done
+
+	if [ "${success}" -eq 0 ] ; then
+		echo "Could not successfully create ${dir}" >&2
 	fi
 done
-- 
1.7.9

