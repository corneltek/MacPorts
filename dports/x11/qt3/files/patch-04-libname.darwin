--- qmake/generators/unix/unixmake.cpp.old	Fri Jan 31 23:04:06 2003
+++ qmake/generators/unix/unixmake.cpp	Fri Jan 31 22:46:04 2003
@@ -133,14 +133,6 @@
 	    !project->variables()["QMAKE_LIB_FLAG"].isEmpty() &&
 	    project->isActiveConfig("dll"))
 	project->variables()["QMAKE_LFLAGS"] += project->variables()["QMAKE_LFLAGS_PREBIND"];
-    if(!project->isEmpty("QMAKE_INCDIR"))
-	project->variables()["INCLUDEPATH"] += project->variables()["QMAKE_INCDIR"];
-    if(!project->isEmpty("QMAKE_LIBDIR")) {
-	if ( !project->isEmpty("QMAKE_RPATH") )
-	    project->variables()["QMAKE_LIBDIR_FLAGS"] += varGlue("QMAKE_LIBDIR", " " + var("QMAKE_RPATH"), 
-								  " " + var("QMAKE_RPATH"), "");
-	project->variables()["QMAKE_LIBDIR_FLAGS"] += varGlue( "QMAKE_LIBDIR", "-L", " -L", "" );
-    }
     if ( extern_libs && (project->isActiveConfig("qt") || project->isActiveConfig("opengl")) ) {
 	if(configs.findIndex("x11lib") == -1)
 	    configs.append("x11lib");
@@ -174,6 +166,14 @@
 	    else
 		project->variables()["QMAKE_LIBS"] += project->variables()["QMAKE_LIBS_QT"];
 	}
+    }
+    if(!project->isEmpty("QMAKE_INCDIR"))
+	project->variables()["INCLUDEPATH"] += project->variables()["QMAKE_INCDIR"];
+    if(!project->isEmpty("QMAKE_LIBDIR")) {
+	if ( !project->isEmpty("QMAKE_RPATH") )
+	    project->variables()["QMAKE_LIBDIR_FLAGS"] += varGlue("QMAKE_LIBDIR", " " + var("QMAKE_RPATH"), 
+								  " " + var("QMAKE_RPATH"), "");
+	project->variables()["QMAKE_LIBDIR_FLAGS"] += varGlue( "QMAKE_LIBDIR", "-L", " -L", "" );
     }
     if ( project->isActiveConfig("opengl") ) {
 	project->variables()["INCLUDEPATH"] += project->variables()["QMAKE_INCDIR_OPENGL"];
--- qmake/generators/unix/unixmake2.cpp.old	Fri Jan 31 23:04:21 2003
+++ qmake/generators/unix/unixmake2.cpp	Fri Jan 31 22:46:04 2003
@@ -1023,6 +1023,18 @@
 	    project->variables()["TARGET_"].append("lib" + project->first("TARGET") + "." +
 						   project->first("QMAKE_EXTENSION_SHLIB"));
 	    if(project->isActiveConfig("lib_version_first")) {
+		if(!project->variables()["COMPATIBILITY_VERSION"].isEmpty()) {
+			project->variables()["QMAKE_LFLAGS_SHLIB"].prepend("-compatibility_version " +
+							project->first("COMPATIBILITY_VERSION") + " ");
+		} else {
+			project->variables()["QMAKE_LFLAGS_SHLIB"].prepend("-compatibility_version " +
+							project->first("VER_MAJ") + "." +
+							project->first("VER_MIN") + " ");
+		}
+		project->variables()["QMAKE_LFLAGS_SHLIB"].prepend(" -current_version " +
+							project->first("VER_MAJ") + "." +
+							project->first("VER_MIN") + "." +
+							project->first("VER_PAT") + " ");
 		project->variables()["TARGET_x"].append("lib" + project->first("TARGET") + "." +
 							project->first("VER_MAJ") + "." +
 							project->first("QMAKE_EXTENSION_SHLIB"));
