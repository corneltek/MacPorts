Index: extras/x86emu/src/x86emu/validate.c
===================================================================
RCS file: /cvs/xc/extras/x86emu/src/x86emu/validate.c,v
retrieving revision 1.1.1.1
diff -u -d -b -w -u -r1.1.1.1 validate.c
--- extras/x86emu/src/x86emu/validate.c	2000/01/23 04:23:52	1.1.1.1
+++ extras/x86emu/src/x86emu/validate.c	2002/09/21 20:37:49
@@ -59,7 +59,7 @@
 {                                                                   \
     parm_type   d,s;                                                \
     res_type    r,r_asm;                                            \
-	ulong     	flags,inflags;                                      \
+    u_long     	flags,inflags;                                      \
 	int         f,failed = false;                                   \
     char        buf1[80],buf2[80];                                  \
     for (d = 0; d < dmax; d += dincr) {                             \
@@ -600,7 +600,7 @@
     va_end(argptr);
 }
 
-char * print_flags(char *buf,ulong flags)
+char * print_flags(char *buf,u_long flags)
 {
     char *separator = "";
 
@@ -642,7 +642,7 @@
 
 int main(int argc)
 {
-    ulong   def_flags;
+    u_long   def_flags;
     int trace = false;
 
     if (argc > 1)
Index: lib/Xmu/StrToCurs.c
===================================================================
RCS file: /cvs/xc/lib/Xmu/StrToCurs.c,v
retrieving revision 1.11
diff -u -d -b -w -u -r1.11 StrToCurs.c
--- lib/Xmu/StrToCurs.c	2002/09/19 13:21:58	1.11
+++ lib/Xmu/StrToCurs.c	2002/09/21 20:37:54
@@ -169,8 +169,8 @@
 
 	strspec = XtMalloc(strlen("FONT %s %d %s %d") + 21);
 	sprintf(strspec, "FONT %%%lds %%d %%%lds %%d",
-		(ulong)sizeof(source_name) - 1,
-		(ulong)sizeof(mask_name) - 1);
+		(u_long)sizeof(source_name) - 1,
+		(u_long)sizeof(mask_name) - 1);
 	fields = sscanf(name, strspec,
 			source_name, &source_char,
 			mask_name, &mask_char);
Index: lib/Xmu/WidgetNode.c
===================================================================
RCS file: /cvs/xc/lib/Xmu/WidgetNode.c,v
retrieving revision 1.12
diff -u -d -b -w -u -r1.12 WidgetNode.c
--- lib/Xmu/WidgetNode.c	2002/09/19 13:21:58	1.12
+++ lib/Xmu/WidgetNode.c	2002/09/21 20:37:54
@@ -238,7 +238,7 @@
 	    fprintf (stderr,
 		     "%s:  unable to calloc %d %ld byte widget node ptrs\n",
 		     "XmuWnFetchResources", wn->nresources,
-		     (ulong)sizeof (XmuWidgetNode *));
+		     (u_long)sizeof (XmuWidgetNode *));
 	    exit (1);
 	}
 
@@ -254,7 +254,7 @@
 	    fprintf (stderr,
 		     "%s:  unable to calloc %d %ld byte widget node ptrs\n",
 		     "XmuWnFetchResources", wn->nconstraints,
-		     (ulong)sizeof (XmuWidgetNode *));
+		     (u_long)sizeof (XmuWidgetNode *));
 	    exit (1);
 	}
 
Index: lib/XvMC/hw/i810/I810XvMC.c
===================================================================
RCS file: /cvs/xc/lib/XvMC/hw/i810/I810XvMC.c,v
retrieving revision 1.8
diff -u -d -b -w -u -r1.8 I810XvMC.c
--- lib/XvMC/hw/i810/I810XvMC.c	2002/09/18 17:11:43	1.8
+++ lib/XvMC/hw/i810/I810XvMC.c	2002/09/21 20:37:58
@@ -224,7 +224,7 @@
 
   /* Get magic number and put it in privData for passing */
   drmGetMagic(pI810XvMC->fd,&magic);
-  context->flags = (ulong)magic;
+  context->flags = (u_long)magic;
 
   /*
     Pass control to the X server to create a drmContext for us and
@@ -494,7 +494,7 @@
     U and V surfaces.
   */
   pI810Surface->offsets[0] = priv_data[0];
-  if(((ulong)pI810Surface->data + pI810Surface->offsets[0]) & 4095) {
+  if(((u_long)pI810Surface->data + pI810Surface->offsets[0]) & 4095) {
     printf("XvMCCreateSurface: Surface offset 0 is not 4096 aligned\n");
   }
 
@@ -507,13 +507,13 @@
   else {
     /* Planar surface */
     pI810Surface->offsets[1] = priv_data[1];
-    if(((ulong)pI810Surface->data + pI810Surface->offsets[1]) & 2047) {
+    if(((u_long)pI810Surface->data + pI810Surface->offsets[1]) & 2047) {
       printf("XvMCCreateSurface: Surface offset 1 is not 2048 aligned\n");
     }
 
-    pI810Surface->offsets[2] = ((ulong)pI810Surface->offsets[1] +
+    pI810Surface->offsets[2] = ((u_long)pI810Surface->offsets[1] +
 				(1<<(pI810Surface->pitch - 1)) * 288);
-    if(((ulong)pI810Surface->data + pI810Surface->offsets[2]) & 2047) {
+    if(((u_long)pI810Surface->data + pI810Surface->offsets[2]) & 2047) {
       printf("XvMCCreateSurface: Surface offset 2 is not 2048 aligned\n");
     }
 
@@ -523,7 +523,7 @@
   free(priv_data);
 
   /* Clear the surface to 0 */
-  memset((void *)((ulong)pI810Surface->data + (ulong)pI810Surface->offsets[0]),
+  memset((void *)((u_long)pI810Surface->data + (u_long)pI810Surface->offsets[0]),
 	 0, ((1<<pI810Surface->pitch) * surface->height));
 
   switch(surface->surface_type_id) {
@@ -734,12 +734,12 @@
 
 #define PACK_CORR_DATA(d,b,n)          \
             memcpy(d,b,n);             \
-            d = (uint *)((ulong)d + n);
+            d = (uint *)((u_long)d + n);
 
 #define MARK_CORR_DATA(d,n)                          \
             do {                                     \
-              uint* q = (uint*)((ulong)d - n);        \
-              while((ulong)q < (ulong)d) {             \
+              uint* q = (uint*)((u_long)d - n);        \
+              while((u_long)q < (u_long)d) {             \
                *q++ += 0x00330033;                   \
               }                                      \
 	    }while(0);
@@ -761,21 +761,21 @@
             do {                                     \
               short *t = top,*b = bottom;            \
               PACK_CORR_DATA(d,t,16);                \
-              t = (short *)((ulong)t + 16);           \
+              t = (short *)((u_long)t + 16);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 16);           \
+              b = (short *)((u_long)b + 16);           \
               PACK_CORR_DATA(d,t,16);                \
-              t = (short *)((ulong)t + 16);           \
+              t = (short *)((u_long)t + 16);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 16);           \
+              b = (short *)((u_long)b + 16);           \
               PACK_CORR_DATA(d,t,16);                \
-              t = (short *)((ulong)t + 16);           \
+              t = (short *)((u_long)t + 16);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 16);           \
+              b = (short *)((u_long)b + 16);           \
               PACK_CORR_DATA(d,t,16);                \
-              t = (short *)((ulong)t + 16);           \
+              t = (short *)((u_long)t + 16);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 16);           \
+              b = (short *)((u_long)b + 16);           \
             }while(0);
 
 /* Used for DCT 0 when we need DCT 1. */
@@ -783,34 +783,34 @@
             do{                                      \
               short *t = top,*b = bottom;            \
               PACK_CORR_DATA(d,t,16);                \
-              t = (short *)((ulong)t + 32);           \
+              t = (short *)((u_long)t + 32);           \
               PACK_CORR_DATA(d,t,16);                \
-              t = (short *)((ulong)t + 32);           \
+              t = (short *)((u_long)t + 32);           \
               PACK_CORR_DATA(d,t,16);                \
-              t = (short *)((ulong)t + 32);           \
+              t = (short *)((u_long)t + 32);           \
               PACK_CORR_DATA(d,t,16);                \
-              t = (short *)((ulong)t + 32);           \
+              t = (short *)((u_long)t + 32);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 32);           \
+              b = (short *)((u_long)b + 32);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 32);           \
+              b = (short *)((u_long)b + 32);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 32);           \
+              b = (short *)((u_long)b + 32);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 32);           \
+              b = (short *)((u_long)b + 32);           \
             }while(0);
 
 #define PACK_CORR_DATA_SHORT(d,block)                \
             do {                                     \
               short *b = block;                      \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 32);           \
+              b = (short *)((u_long)b + 32);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 32);           \
+              b = (short *)((u_long)b + 32);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 32);           \
+              b = (short *)((u_long)b + 32);           \
               PACK_CORR_DATA(d,b,16);                \
-              b = (short *)((ulong)b + 32);           \
+              b = (short *)((u_long)b + 32);           \
             }while(0);
 
 /* Lookup tables to speed common calculations */
@@ -988,7 +988,7 @@
   *data++ = privFuture->mi3y;
 
   mc.idx = pDMA->idx;
-  mc.used = (ulong)data - (ulong)pDMA->address;
+  mc.used = (u_long)data - (u_long)pDMA->address;
   mc.last_render = ++pI810XvMC->last_render;
   privTarget->last_render = pI810XvMC->last_render;
   I810_MC(pI810XvMC,&mc);
@@ -1252,7 +1252,7 @@
   *dy++ = *(uint *)fmv;
   *dy++ = *(uint *)bmv;
   PACK_CORR_DATA(dy,block_ptr,ysize);
-  block_ptr = (short *)((ulong)block_ptr + ysize);
+  block_ptr = (short *)((u_long)block_ptr + ysize);
   /* End Y Blocks */
 
   fmv[0] /= 2;
@@ -1269,7 +1269,7 @@
   *du++ = *(uint *)fmv;
   *du++ = *(uint *)bmv;
   PACK_CORR_DATA(du,block_ptr,usize);
-  block_ptr = (short *)((ulong)block_ptr + usize);
+  block_ptr = (short *)((u_long)block_ptr + usize);
 
   /* V Block */
   *dv++ = GFXBLOCK + 4 + (vsize>>2);
@@ -1279,7 +1279,7 @@
   *dv++ = *(uint *)fmv;
   *dv++ = *(uint *)bmv;
   PACK_CORR_DATA(dv,block_ptr,vsize);
-  block_ptr = (short *)((ulong)block_ptr + vsize);
+  block_ptr = (short *)((u_long)block_ptr + vsize);
 
   *datay = dy;
   *datau = du;
@@ -1400,7 +1400,7 @@
   *dy++ = *(uint *)fmv;
   *dy++ = *(uint *)bmv;
   PACK_CORR_DATA(dy,block_ptr,y1size);
-  block_ptr = (short *)((ulong)block_ptr + y1size);
+  block_ptr = (short *)((u_long)block_ptr + y1size);
 
   /* Second Y Block */
   *dy++ = GFXBLOCK + 4 + (y2size>>2);
@@ -1410,7 +1410,7 @@
   *dy++ = *(uint *)&fmv[2];
   *dy++ = *(uint *)&bmv[2];
   PACK_CORR_DATA(dy,block_ptr,y2size);
-  block_ptr = (short *)((ulong)block_ptr + y2size);
+  block_ptr = (short *)((u_long)block_ptr + y2size);
   /* End Y Blocks */
 
   fmv[0] /= 2;
@@ -1433,7 +1433,7 @@
   *du++ = *(uint *)fmv;
   *du++ = *(uint *)bmv;
   PACK_CORR_DATA(du,block_ptr,usize);
-  block_ptr = (short *)((ulong)block_ptr + usize);
+  block_ptr = (short *)((u_long)block_ptr + usize);
 
   /* Second U block */
   *du++ = GFXBLOCK + 4 + (usize>>2);
@@ -1443,7 +1443,7 @@
   *du++ = *(uint *)&fmv[2];
   *du++ = *(uint *)&bmv[2];
   PACK_CORR_DATA(du,block_ptr,usize);
-  block_ptr = (short *)((ulong)block_ptr + usize);
+  block_ptr = (short *)((u_long)block_ptr + usize);
   /* End U Blocks */
 
   /* V Blocks */
@@ -1454,7 +1454,7 @@
   *dv++ = *(uint *)fmv;
   *dv++ = *(uint *)bmv;
   PACK_CORR_DATA(dv,block_ptr,vsize);
-  block_ptr = (short *)((ulong)block_ptr + vsize);
+  block_ptr = (short *)((u_long)block_ptr + vsize);
 
   /* Second V Block */
   *dv++ = GFXBLOCK + 4 + (vsize>>2);
@@ -1464,7 +1464,7 @@
   *dv++ = *(uint *)&fmv[2];
   *dv++ = *(uint *)&bmv[2];
   PACK_CORR_DATA(dv,block_ptr,vsize);
-  block_ptr = (short *)((ulong)block_ptr + vsize);
+  block_ptr = (short *)((u_long)block_ptr + vsize);
   /* End V Blocks */
 
   *datay = dy;
@@ -1519,7 +1519,7 @@
   *dy++ = *(uint *)fmv;
   *dy++ = *(uint *)bmv;
   PACK_CORR_DATA(dy,block_ptr,ysize);
-  block_ptr = (short *)((ulong)block_ptr + ysize);
+  block_ptr = (short *)((u_long)block_ptr + ysize);
   /* End Y Blocks */
  
   fmv[0] /= 2;
@@ -1536,7 +1536,7 @@
   *du++ = *(uint *)fmv;
   *du++ = *(uint *)bmv;
   PACK_CORR_DATA(du,block_ptr,usize);
-  block_ptr = (short *)((ulong)block_ptr + usize);
+  block_ptr = (short *)((u_long)block_ptr + usize);
 
   /* V Block */
   *dv++ = GFXBLOCK + 4 + (vsize>>2);
@@ -1546,7 +1546,7 @@
   *dv++ = *(uint *)fmv;
   *dv++ = *(uint *)bmv;
   PACK_CORR_DATA(dv,block_ptr,vsize);
-  block_ptr = (short *)((ulong)block_ptr + vsize);
+  block_ptr = (short *)((u_long)block_ptr + vsize);
 
   *datay = dy;
   *datau = du;
@@ -1607,7 +1607,7 @@
   *dy++ = *(uint *)&fmv[0];
   *dy++ = *(uint *)&bmv[0];
   PACK_CORR_DATA(dy,block_ptr,y1size);
-  block_ptr = (short *)((ulong)block_ptr + y1size);
+  block_ptr = (short *)((u_long)block_ptr + y1size);
 
   /* Second Y Block */
   *dy++ = GFXBLOCK + 4 + (y2size>>2);
@@ -1617,7 +1617,7 @@
   *dy++ = *(uint *)&fmv[2];
   *dy++ = *(uint *)&bmv[2];
   PACK_CORR_DATA(dy,block_ptr,y2size);
-  block_ptr = (short *)((ulong)block_ptr + y2size);
+  block_ptr = (short *)((u_long)block_ptr + y2size);
   /* End Y Blocks */
 
   fmv[0] /= 2;
@@ -1651,9 +1651,9 @@
   *du++ = *(uint *)&fmv[2];
   *du++ = *(uint *)&bmv[2];
   if(usize) {
-    block_ptr = (short *)((ulong)block_ptr + 16);
+    block_ptr = (short *)((u_long)block_ptr + 16);
     PACK_CORR_DATA_SHORT(du,block_ptr);
-    block_ptr = (short *)((ulong)block_ptr + 112);
+    block_ptr = (short *)((u_long)block_ptr + 112);
   }
   /* End U Blocks */
 
@@ -1676,9 +1676,9 @@
   *dv++ = *(uint *)&fmv[2];
   *dv++ = *(uint *)&bmv[2];
   if(vsize) {
-    block_ptr = (short *)((ulong)block_ptr + 16);
+    block_ptr = (short *)((u_long)block_ptr + 16);
     PACK_CORR_DATA_SHORT(dv,block_ptr);
-    block_ptr = (short *)((ulong)block_ptr + 112);
+    block_ptr = (short *)((u_long)block_ptr + 112);
   }
   /* End V Blocks */
 
@@ -1789,13 +1789,13 @@
   *dy++ = *(uint *)&fmv[2];
   *dy++ = *(uint *)&bmv[2];
   if(dw1[1] & (1<<27)) {
-    top_left_b = (short *)((ulong)top_left_b + 16);
-    bottom_left_b = (short *)((ulong)bottom_left_b + 16);
+    top_left_b = (short *)((u_long)top_left_b + 16);
+    bottom_left_b = (short *)((u_long)bottom_left_b + 16);
     PACK_CORR_DATA_0to1(dy,top_left_b,bottom_left_b);
   }
   if(dw1[1] & (1<<26)) {
-    top_right_b = (short *)((ulong)top_right_b + 16);
-    bottom_right_b = (short *)((ulong)bottom_right_b + 16);
+    top_right_b = (short *)((u_long)top_right_b + 16);
+    bottom_right_b = (short *)((u_long)bottom_right_b + 16);
     PACK_CORR_DATA_0to1(dy,top_right_b,bottom_right_b);
   }
   /* End Y Blocks */
@@ -1831,9 +1831,9 @@
   *du++ = *(uint *)&fmv[2];
   *du++ = *(uint *)&bmv[2];
   if(usize) {
-    block_ptr = (short *)((ulong)block_ptr + 16);
+    block_ptr = (short *)((u_long)block_ptr + 16);
     PACK_CORR_DATA_SHORT(du,block_ptr);
-    block_ptr = (short *)((ulong)block_ptr + 112);
+    block_ptr = (short *)((u_long)block_ptr + 112);
   }
   /* End U Blocks */
 
@@ -1856,9 +1856,9 @@
   *dv++ = *(uint *)&fmv[2];
   *dv++ = *(uint *)&bmv[2];
   if(vsize) {
-    block_ptr = (short *)((ulong)block_ptr + 16);
+    block_ptr = (short *)((u_long)block_ptr + 16);
     PACK_CORR_DATA_SHORT(dv,block_ptr);
-    block_ptr = (short *)((ulong)block_ptr + 112);
+    block_ptr = (short *)((u_long)block_ptr + 112);
   }
   /* End V Blocks */
 
@@ -1911,7 +1911,7 @@
   *dy++ = *(uint *)fmv;
   *dy++ = *(uint *)bmv;
   PACK_CORR_DATA(dy,block_ptr,ysize);
-  block_ptr = (short *)((ulong)block_ptr + ysize);
+  block_ptr = (short *)((u_long)block_ptr + ysize);
   /* End Y Blocks */
 
   fmv[0] /= 2;
@@ -1930,7 +1930,7 @@
   *du++ = *(uint *)fmv;
   *du++ = *(uint *)bmv;
   PACK_CORR_DATA(du,block_ptr,usize);
-  block_ptr = (short *)((ulong)block_ptr + usize);
+  block_ptr = (short *)((u_long)block_ptr + usize);
   /* End U Block */
 
   /* V Block */
@@ -1941,7 +1941,7 @@
   *dv++ = *(uint *)fmv;
   *dv++ = *(uint *)bmv;
   PACK_CORR_DATA(dv,block_ptr,vsize);
-  block_ptr = (short *)((ulong)block_ptr + vsize);
+  block_ptr = (short *)((u_long)block_ptr + vsize);
   /* End V Block */
 
   *datay = dy;
@@ -2030,13 +2030,13 @@
   *dy++ = *(uint *)bmv;
   if(dw1 & (1<<27)) {
     PACK_CORR_DATA_1to0(dy,top_left_b,bottom_left_b);
-    top_left_b = (short *)((ulong)top_left_b + 64);
-    bottom_left_b = (short *)((ulong)bottom_left_b + 64);
+    top_left_b = (short *)((u_long)top_left_b + 64);
+    bottom_left_b = (short *)((u_long)bottom_left_b + 64);
   }
   if(dw1 & (1<<26)) {
     PACK_CORR_DATA_1to0(dy,top_right_b,bottom_right_b);
-    top_right_b = (short *)((ulong)top_right_b + 64);
-    bottom_right_b = (short *)((ulong)bottom_right_b + 64);
+    top_right_b = (short *)((u_long)top_right_b + 64);
+    bottom_right_b = (short *)((u_long)bottom_right_b + 64);
   }
   if(dw1 & (1<<27)) {
     PACK_CORR_DATA_1to0(dy,top_left_b,bottom_left_b);
@@ -2062,7 +2062,7 @@
   *du++ = *(uint *)fmv;
   *du++ = *(uint *)bmv;
   PACK_CORR_DATA(du,block_ptr,usize);
-  block_ptr = (short *)((ulong)block_ptr + usize);
+  block_ptr = (short *)((u_long)block_ptr + usize);
 
   /* V Block */
   *dv++ = GFXBLOCK + 4 + (vsize>>2);
@@ -2072,7 +2072,7 @@
   *dv++ = *(uint *)fmv;
   *dv++ = *(uint *)bmv;
   PACK_CORR_DATA(dv,block_ptr,vsize);
-  block_ptr = (short *)((ulong)block_ptr + vsize);
+  block_ptr = (short *)((u_long)block_ptr + vsize);
 
   *datay = dy;
   *datau = du;
@@ -2133,7 +2133,7 @@
   *dy++ = *(uint *)fmv;
   *dy++ = *(uint *)bmv;;
   PACK_CORR_DATA(dy,block_ptr,y1size);
-  block_ptr = (short *)((ulong)block_ptr + y1size);
+  block_ptr = (short *)((u_long)block_ptr + y1size);
 
   /* Second Y Block */
   *dy++ = GFXBLOCK + 4 + (y2size>>2);
@@ -2143,7 +2143,7 @@
   *dy++ = *(uint *)&fmv[2];
   *dy++ = *(uint *)&bmv[2];
   PACK_CORR_DATA(dy,block_ptr,y2size);
-  block_ptr = (short *)((ulong)block_ptr + y2size);
+  block_ptr = (short *)((u_long)block_ptr + y2size);
 
   fmv[0] /= 2;
   fmv[1] /= 2;
@@ -2176,9 +2176,9 @@
   *du++ = *(uint *)&fmv[2];
   *du++ = *(uint *)&bmv[2];
   if(dw1[1] & (1<<23)) {
-    block_ptr = (short *)((ulong)block_ptr + 16);
+    block_ptr = (short *)((u_long)block_ptr + 16);
     PACK_CORR_DATA_SHORT(du,block_ptr);
-    block_ptr = (short *)((ulong)block_ptr + 112);
+    block_ptr = (short *)((u_long)block_ptr + 112);
   }
   /* End U Blocks */
 
@@ -2201,9 +2201,9 @@
   *dv++ = *(uint *)&fmv[2];
   *dv++ = *(uint *)&bmv[2];
   if(dw1[1] & (1<<22)) {
-    block_ptr = (short *)((ulong)block_ptr + 16);
+    block_ptr = (short *)((u_long)block_ptr + 16);
     PACK_CORR_DATA_SHORT(dv,block_ptr);
-    block_ptr = (short *)((ulong)block_ptr + 112);
+    block_ptr = (short *)((u_long)block_ptr + 112);
   }
   /* End V Blocks */
 
@@ -2316,13 +2316,13 @@
   *dy++ = *(uint *)&fmv[2];
   *dy++ = *(uint *)&bmv[2];
   if(cbp & 0x20) {
-    top_left_b = (short *)((ulong)top_left_b + 16);
-    bottom_left_b = (short *)((ulong)bottom_left_b + 16);
+    top_left_b = (short *)((u_long)top_left_b + 16);
+    bottom_left_b = (short *)((u_long)bottom_left_b + 16);
     PACK_CORR_DATA_0to1(dy,top_left_b,bottom_left_b);
   }
   if(cbp & 0x10) {
-    top_right_b = (short *)((ulong)top_right_b + 16);
-    bottom_right_b = (short *)((ulong)bottom_right_b + 16);
+    top_right_b = (short *)((u_long)top_right_b + 16);
+    bottom_right_b = (short *)((u_long)bottom_right_b + 16);
     PACK_CORR_DATA_0to1(dy,top_right_b,bottom_right_b);
   }
   /* End Y Blocks */
@@ -2359,9 +2359,9 @@
   *du++ = *(uint *)&fmv[2];
   *du++ = *(uint *)&bmv[2];
   if(cbp & (1<<23)) {
-    block_ptr = (short *)((ulong)block_ptr + 16);
+    block_ptr = (short *)((u_long)block_ptr + 16);
     PACK_CORR_DATA_SHORT(du,block_ptr);
-    block_ptr = (short *)((ulong)block_ptr + 112);
+    block_ptr = (short *)((u_long)block_ptr + 112);
   }
   /* End U Blocks */
 
@@ -2384,9 +2384,9 @@
   *dv++ = *(uint *)&fmv[2];
   *dv++ = *(uint *)&bmv[2];
   if(cbp & (1<<22)) {
-    block_ptr = (short *)((ulong)block_ptr + 16);
+    block_ptr = (short *)((u_long)block_ptr + 16);
     PACK_CORR_DATA_SHORT(dv,block_ptr);
-    block_ptr = (short *)((ulong)block_ptr + 112);
+    block_ptr = (short *)((u_long)block_ptr + 112);
   }
   /* End V Blocks */
 
@@ -2533,7 +2533,7 @@
 
     /* If buffers are almost full dispatch them */
     if(datay) {
-      pDMAy->used = (ulong)datay - (ulong)pDMAy->address;
+      pDMAy->used = (u_long)datay - (u_long)pDMAy->address;
       if(pDMAy->used  > 3520) {
 	if(dirty_context) {
 	  dispatchYContext(privTarget,privPast,privFuture,pI810XvMC);
@@ -2548,7 +2548,7 @@
       } /* datay near full */
     } /* if(datay) */
     if(datau) {
-      pDMAu[u_index]->used = (ulong)datau - (ulong)pDMAu[u_index]->address;
+      pDMAu[u_index]->used = (u_long)datau - (u_long)pDMAu[u_index]->address;
       if(pDMAu[u_index]->used > 3904) {
 	u_index++;
 	datau = NULL;
@@ -2566,7 +2566,7 @@
       } /* datau near full */
     } /* if(datau) */
     if(datav) {
-      pDMAv[v_index]->used = (ulong)datav - (ulong)pDMAv[v_index]->address;
+      pDMAv[v_index]->used = (u_long)datav - (u_long)pDMAv[v_index]->address;
       if(pDMAv[v_index]->used > 3904) {
 	v_index++;
 	datav = NULL;
@@ -2756,12 +2756,12 @@
     dispatchYContext(privTarget,privPast,privFuture,pI810XvMC);
   }
   mc.idx = pDMAy->idx;
-  mc.used = (ulong)datay - (ulong)pDMAy->address;
+  mc.used = (u_long)datay - (u_long)pDMAy->address;
   mc.last_render = ++pI810XvMC->last_render;
   privTarget->last_render = pI810XvMC->last_render;
   I810_MC(pI810XvMC,&mc);
 
-  pDMAu[u_index]->used = (ulong)datau - (ulong)pDMAu[u_index]->address;
+  pDMAu[u_index]->used = (u_long)datau - (u_long)pDMAu[u_index]->address;
   for(j=0; j<=u_index; j++) {
     mc.idx = pDMAu[j]->idx;
     mc.used = pDMAu[j]->used;
@@ -2769,7 +2769,7 @@
     privTarget->last_render = pI810XvMC->last_render;
     I810_MC(pI810XvMC,&mc);
   }
-  pDMAv[v_index]->used = (ulong)datav - (ulong)pDMAv[v_index]->address;
+  pDMAv[v_index]->used = (u_long)datav - (u_long)pDMAv[v_index]->address;
   for(j=0; j<=v_index; j++) {
     mc.idx = pDMAv[j]->idx;
     mc.used = pDMAv[j]->used;
@@ -3131,20 +3131,20 @@
 
   /* buffer locations, add the offset from the clipping */
   if(pI810XvMC->current) {
-    pORegs->OBUF_1Y = (ulong)pI810Surface->offset +
-      (ulong)pI810Surface->offsets[0] + ysrc_offset;
-    pORegs->OBUF_1V = (ulong)pI810Surface->offset +
-      (ulong)pI810Surface->offsets[2] + uvsrc_offset;
-    pORegs->OBUF_1U = (ulong)pI810Surface->offset +
-      (ulong)pI810Surface->offsets[1] + uvsrc_offset;
+    pORegs->OBUF_1Y = (u_long)pI810Surface->offset +
+      (u_long)pI810Surface->offsets[0] + ysrc_offset;
+    pORegs->OBUF_1V = (u_long)pI810Surface->offset +
+      (u_long)pI810Surface->offsets[2] + uvsrc_offset;
+    pORegs->OBUF_1U = (u_long)pI810Surface->offset +
+      (u_long)pI810Surface->offsets[1] + uvsrc_offset;
   }
   else {
-    pORegs->OBUF_0Y = (ulong)pI810Surface->offset +
-      (ulong)pI810Surface->offsets[0] + ysrc_offset;
-    pORegs->OBUF_0V = (ulong)pI810Surface->offset +
-      (ulong)pI810Surface->offsets[2] + uvsrc_offset;
-    pORegs->OBUF_0U = (ulong)pI810Surface->offset +
-      (ulong)pI810Surface->offsets[1] + uvsrc_offset;
+    pORegs->OBUF_0Y = (u_long)pI810Surface->offset +
+      (u_long)pI810Surface->offsets[0] + ysrc_offset;
+    pORegs->OBUF_0V = (u_long)pI810Surface->offset +
+      (u_long)pI810Surface->offsets[2] + uvsrc_offset;
+    pORegs->OBUF_0U = (u_long)pI810Surface->offset +
+      (u_long)pI810Surface->offsets[1] + uvsrc_offset;
   }
 
   switch(surface->surface_type_id) {
@@ -3545,7 +3545,7 @@
      address (Client memeory address) or offset (physical offset from fb base)
   */
   pI810Subpicture->offsets[0] = priv_data[0];
-  if(((ulong)pI810Subpicture->data + pI810Subpicture->offsets[0]) & 4095) {
+  if(((u_long)pI810Subpicture->data + pI810Subpicture->offsets[0]) & 4095) {
     printf("XvMCCreateSubpicture: Subpicture offset 0 is not 4096 aligned\n");
   }
 
@@ -3553,7 +3553,7 @@
   free(priv_data);
 
   /* Clear the surface to 0 */
-  memset((void *)((ulong)pI810Subpicture->data + (ulong)pI810Subpicture->offsets[0]),
+  memset((void *)((u_long)pI810Subpicture->data + (u_long)pI810Subpicture->offsets[0]),
 	 0, ((1<<pI810Subpicture->pitch) * subpicture->height));
 
   switch(subpicture->xvimage_id) {
@@ -3632,8 +3632,8 @@
   }
 
   for(i=y; i<y + height; i++) {
-    memset((void *)((ulong)pI810Subpicture->data +
-		    (ulong)pI810Subpicture->offsets[0] + x +
+    memset((void *)((u_long)pI810Subpicture->data +
+		    (u_long)pI810Subpicture->offsets[0] + x +
 		    (1<<pI810Subpicture->pitch) * i),(char)color,width);
   }
 
@@ -3696,11 +3696,11 @@
   }
 
   for(i=0; i<height; i++) {
-    memcpy((void *)((ulong)pI810Subpicture->data +
-		    (ulong)pI810Subpicture->offsets[0] + dstx +
+    memcpy((void *)((u_long)pI810Subpicture->data +
+		    (u_long)pI810Subpicture->offsets[0] + dstx +
 		    (1<<pI810Subpicture->pitch) * (i + dsty)),
-	   (void *)((ulong)image->data +
-		    (ulong)image->offsets[0] + srcx +
+	   (void *)((u_long)image->data +
+		    (u_long)image->offsets[0] + srcx +
 		    image->pitches[0] * (i + srcy))
 	   ,width);
   }
@@ -4025,9 +4025,9 @@
   *data++ = (2<<29) | (0x43<<22) | 0x4;
   *data++ = (0xcc<<16) | (1<<26) | (1<<(privTarget->pitch - 1));
   *data++ = (target_surface->height<<15) | (target_surface->width>>1);
-  *data++ = (ulong)privTarget->offset + (ulong)privTarget->offsets[1];
+  *data++ = (u_long)privTarget->offset + (u_long)privTarget->offsets[1];
   *data++ = (1<<(privSource->pitch - 1));
-  *data++ = (ulong)privSource->offset + (ulong)privSource->offsets[1];
+  *data++ = (u_long)privSource->offset + (u_long)privSource->offsets[1];
 
   /* Context 1 select */
   *data++ = CMD_FLUSH;
@@ -4114,9 +4114,9 @@
   *data++ = (2<<29) | (0x43<<22) | 0x4;
   *data++ = (0xcc<<16) | (1<<26) | (1<<(privTarget->pitch - 1));
   *data++ = (target_surface->height<<15) | (target_surface->width>>1);
-  *data++ = (ulong)privTarget->offset + (ulong)privTarget->offsets[2];
+  *data++ = (u_long)privTarget->offset + (u_long)privTarget->offsets[2];
   *data++ = (1<<(privSource->pitch - 1));
-  *data++ = (ulong)privSource->offset + (ulong)privSource->offsets[2];
+  *data++ = (u_long)privSource->offset + (u_long)privSource->offsets[2];
 
   /* Context 1 select */
   *data++ = CMD_FLUSH;
@@ -4201,7 +4201,7 @@
 
 
   /* Dispatch */
-  pDMA->used = (ulong)data - (ulong)pDMA->address;
+  pDMA->used = (u_long)data - (u_long)pDMA->address;
   mc.idx = pDMA->idx;
   mc.used = pDMA->used;
   mc.last_render = ++pI810XvMC->last_render;
Index: lib/font/bitmap/bitmapfunc.c
===================================================================
RCS file: /cvs/xc/lib/font/bitmap/bitmapfunc.c,v
retrieving revision 3.17
diff -u -d -b -w -u -r3.17 bitmapfunc.c
--- lib/font/bitmap/bitmapfunc.c	2002/09/19 13:21:58	3.17
+++ lib/font/bitmap/bitmapfunc.c	2002/09/21 20:37:58
@@ -153,7 +153,7 @@
 	return BadFontName;
     if (!(pFont = CreateFontRec())) {
 	fprintf(stderr, "Error: Couldn't allocate pFont (%ld)\n",
-		(ulong)sizeof(FontRec));
+		(u_long)sizeof(FontRec));
 	FontFileClose (file);
 	return AllocError;
     }
Index: lib/font/bitmap/bitmaputil.c
===================================================================
RCS file: /cvs/xc/lib/font/bitmap/bitmaputil.c,v
retrieving revision 1.9
diff -u -d -b -w -u -r1.9 bitmaputil.c
--- lib/font/bitmap/bitmaputil.c	2002/09/19 13:21:59	1.9
+++ lib/font/bitmap/bitmaputil.c	2002/09/21 20:37:58
@@ -210,7 +210,7 @@
     bitmapFont = (BitmapFontPtr) pFont->fontPrivate;
     bitmapFont->ink_metrics = (xCharInfo *) xalloc(bitmapFont->num_chars * sizeof(xCharInfo));
     if (!bitmapFont->ink_metrics) {
-      fprintf(stderr, "Error: Couldn't allocate ink_metrics (%d*%ld)\n", bitmapFont->num_chars, (ulong)sizeof(xCharInfo));
+      fprintf(stderr, "Error: Couldn't allocate ink_metrics (%d*%ld)\n", bitmapFont->num_chars, (u_long)sizeof(xCharInfo));
 	return FALSE;
     }
     for (i = 0; i < bitmapFont->num_chars; i++)
Index: lib/font/bitmap/bitscale.c
===================================================================
RCS file: /cvs/xc/lib/font/bitmap/bitscale.c,v
retrieving revision 3.26
diff -u -d -b -w -u -r3.26 bitscale.c
--- lib/font/bitmap/bitscale.c	2002/09/19 13:21:59	3.26
+++ lib/font/bitmap/bitscale.c	2002/09/21 20:38:03
@@ -734,7 +734,7 @@
     *pProps = fp;
     if (!fp) {
 	fprintf(stderr, "Error: Couldn't allocate font properties (%ld*%d)\n",
-		(ulong)sizeof(FontPropRec), nProps);
+		(u_long)sizeof(FontPropRec), nProps);
 	return 1;
     }
     isStringProp = (char *) xalloc (nProps);
@@ -921,7 +921,7 @@
     bitmapFont = 0;
     if (!(pf = CreateFontRec())) {
 	fprintf(stderr, "Error: Couldn't allocate FontRec (%ld)\n",
-		(ulong)sizeof(FontRec));
+		(u_long)sizeof(FontRec));
 	goto bail;
     }
     pf->refcnt = 0;
@@ -989,7 +989,7 @@
     bitmapFont = (BitmapFontPtr) xalloc(sizeof(BitmapFontRec));
     if (!bitmapFont) {
 	fprintf(stderr, "Error: Couldn't allocate bitmapFont (%ld)\n",
-		(ulong)sizeof(BitmapFontRec));
+		(u_long)sizeof(BitmapFontRec));
 	goto bail;
     }
     nchars = (lastRow - firstRow + 1) * (lastCol - firstCol + 1);
@@ -1010,7 +1010,7 @@
     bitmapFont->metrics = (CharInfoPtr) xalloc(nchars * sizeof(CharInfoRec));
     if (!bitmapFont->metrics) {
 	fprintf(stderr, "Error: Couldn't allocate metrics (%d*%ld)\n",
-		nchars, (ulong)sizeof(CharInfoRec));
+		nchars, (u_long)sizeof(CharInfoRec));
 	goto bail;
     }
     bitmapFont->encoding = 
@@ -1018,7 +1018,7 @@
                                  sizeof(CharInfoPtr*));
     if (!bitmapFont->encoding) {
 	fprintf(stderr, "Error: Couldn't allocate encoding (%d*%ld)\n",
-		nchars, (ulong)sizeof(CharInfoPtr));
+		nchars, (u_long)sizeof(CharInfoPtr));
 	goto bail;
     }
 
@@ -1337,7 +1337,7 @@
 		{
 		    fprintf(stderr, "Warning: Couldn't allocate diffusion"
 			    " workspace (%ld)\n",
-			    (newWidth + 2) * 2 * (ulong)sizeof(int));
+			    (newWidth + 2) * 2 * (u_long)sizeof(int));
 		    xfree(char_grayscale);
 		    char_grayscale = (unsigned char *)0;
 		}
Index: lib/font/util/atom.c
===================================================================
RCS file: /cvs/xc/lib/font/util/atom.c,v
retrieving revision 1.9
diff -u -d -b -w -u -r1.9 atom.c
--- lib/font/util/atom.c	2002/09/19 13:22:00	1.9
+++ lib/font/util/atom.c	2002/09/21 20:38:04
@@ -84,7 +84,7 @@
     if (!newHashTable) {
 	fprintf(stderr, "ResizeHashTable(): Error: Couldn't allocate"
 		" newHashTable (%ld)\n",
-		newHashSize * (ulong)sizeof (AtomListPtr));
+		newHashSize * (u_long)sizeof (AtomListPtr));
 	return FALSE;
     }
     bzero ((char *) newHashTable, newHashSize * sizeof (AtomListPtr));
@@ -127,7 +127,7 @@
     if (!reverseMap) {
 	fprintf(stderr, "ResizeReverseMap(): Error: Couldn't reallocate"
 		" reverseMap (%ld)\n",
-		reverseMapSize * (ulong)sizeof(AtomListPtr));
+		reverseMapSize * (u_long)sizeof(AtomListPtr));
 	ret = FALSE;
     }
     return ret;
@@ -182,7 +182,7 @@
     a = (AtomListPtr) xalloc (sizeof (AtomListRec) + len + 1);
     if (a == NULL) {
 	fprintf(stderr, "MakeAtom(): Error: Couldn't allocate AtomListRec"
-		" (%ld)\n", (ulong)sizeof (AtomListRec) + len + 1);
+		" (%ld)\n", (u_long)sizeof (AtomListRec) + len + 1);
 	return None;
     }
     a->name = (char *) (a + 1);
Index: programs/mkfontdir/mkfontdir.c
===================================================================
RCS file: /cvs/xc/programs/mkfontdir/mkfontdir.c,v
retrieving revision 3.19
diff -u -d -b -w -u -r3.19 mkfontdir.c
--- programs/mkfontdir/mkfontdir.c	2002/09/19 13:22:03	3.19
+++ programs/mkfontdir/mkfontdir.c	2002/09/21 20:38:08
@@ -484,8 +484,8 @@
 	    return BadFontPath;
 	}
 	(void) sprintf(dir_format, "%%%lds %%%ld[^\n]\n",
-		       (ulong)sizeof(file_name) - 1,
-		       (ulong)sizeof(font_name) - 1);
+		       (u_long)sizeof(file_name) - 1,
+		       (u_long)sizeof(font_name) - 1);
 	while (fgets(dir_line, sizeof(dir_line), file) != NULL) {
 	    count = sscanf(dir_line, dir_format, file_name, font_name);
 	    if (count != 2) {
Index: programs/twm/list.c
===================================================================
RCS file: /cvs/xc/programs/twm/list.c,v
retrieving revision 1.7
diff -u -d -b -w -u -r1.7 list.c
--- programs/twm/list.c	2002/09/19 13:22:04	1.7
+++ programs/twm/list.c	2002/09/21 20:38:08
@@ -109,7 +109,7 @@
     {
 	twmrc_error_prefix();
 	fprintf (stderr, "unable to allocate %ld bytes for name_list\n",
-		 (ulong)sizeof(name_list));
+		 (u_long)sizeof(name_list));
 	Done(0);
     }
 
Index: programs/twm/menus.c
===================================================================
RCS file: /cvs/xc/programs/twm/menus.c,v
retrieving revision 1.14
diff -u -d -b -w -u -r1.14 menus.c
--- programs/twm/menus.c	2002/09/19 13:22:04	1.14
+++ programs/twm/menus.c	2002/09/21 20:38:09
@@ -239,7 +239,7 @@
     if (!tb) {
 	fprintf (stderr,
 		 "%s:  unable to allocate %ld bytes for title button\n",
-		 ProgramName, (ulong)sizeof(TitleButton));
+		 ProgramName, (u_long)sizeof(TitleButton));
 	return 0;
     }
 
Index: programs/twm/parse.c
===================================================================
RCS file: /cvs/xc/programs/twm/parse.c,v
retrieving revision 1.14
diff -u -d -b -w -u -r1.14 parse.c
--- programs/twm/parse.c	2002/09/19 13:22:04	1.14
+++ programs/twm/parse.c	2002/09/21 20:38:10
@@ -1145,7 +1145,7 @@
 	if (!sinfo) {
 	    twmrc_error_prefix();
 	    fprintf (stderr, "unable to allocate %ld bytes for squeeze info\n",
-		     (ulong)sizeof(SqueezeInfo));
+		     (u_long)sizeof(SqueezeInfo));
 	    return;
 	}
 	sinfo->justify = justify;
Index: programs/twm/util.c
===================================================================
RCS file: /cvs/xc/programs/twm/util.c,v
retrieving revision 1.12
diff -u -d -b -w -u -r1.12 util.c
--- programs/twm/util.c	2002/09/19 13:22:05	1.12
+++ programs/twm/util.c	2002/09/21 20:38:11
@@ -296,7 +296,7 @@
     if (!newname) {
 	fprintf (stderr, 
 		 "%s:  unable to allocate %ld bytes to expand filename %s/%s\n",
-		 ProgramName, HomeLen + (ulong)strlen(name) + 2,
+		 ProgramName, HomeLen + (u_long)strlen(name) + 2,
 		 Home, &name[1]);
     } else {
 	(void) sprintf (newname, "%s/%s", Home, &name[1]);
@@ -449,7 +449,7 @@
 	sc = (StdCmap *) malloc (sizeof (StdCmap));
 	if (!sc) {
 	    fprintf (stderr, "%s:  unable to allocate %ld bytes for StdCmap\n",
-		     ProgramName, (ulong)sizeof (StdCmap));
+		     ProgramName, (u_long)sizeof (StdCmap));
 	    return;
 	}
     }
Index: programs/xauth/process.c
===================================================================
RCS file: /cvs/xc/programs/xauth/process.c,v
retrieving revision 3.15
diff -u -d -b -w -u -r3.15 process.c
--- programs/xauth/process.c	2002/09/19 13:22:05	3.15
+++ programs/xauth/process.c	2002/09/21 20:38:12
@@ -1454,7 +1454,7 @@
     if (!auth) {
 	prefix (inputfilename, lineno);
 	fprintf (stderr, "unable to allocate %ld bytes for Xauth structure\n",
-		 (ulong)sizeof (Xauth));
+		 (u_long)sizeof (Xauth));
 	free (key);
 	return 1;
     }
@@ -1491,7 +1491,7 @@
     if (!list) {
 	prefix (inputfilename, lineno);
 	fprintf (stderr, "unable to allocate %ld bytes for auth list\n",
-		 (ulong)sizeof (AuthList));
+		 (u_long)sizeof (AuthList));
 	free (auth);
 	free (key);
 	free (auth->name);
